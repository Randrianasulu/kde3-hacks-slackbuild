Notice to make release tarballs from SVN
----------------------------------------

0/ release annoucements can be send to kde-i18n-docs. The earlier the better
   TODO: not clear where an how to store them yet. 

1/ Update the release info in these files and commit it to svn :
   - digikam/digikam/daboutdata.h ("digikam_version" and "showfoto_version")
   - digikam/digikam.lsm - update date as well
  
2/ Edited release_digikam.rb and release_digikam_docs.rb script. Update these settings :
   - version.
   - svnbase (your own svn access that  you used for checkout must appear here. In case of pb, eliminate the others).
   - addPo (for example addPo = ["showfoto"] if showofoto is include in digikam tarball).
   
Note : docs must be set to 'no' because the documentation must be packaged in a separate tarball to decrease the source code tarball size. There is a seperate script to generate this.

3/ Commit changed files to svn.

4/ Backup old ChangeLog file to ChangeLog.old.

5a/ Create a fresh ChangeLog file using svn2cl script. Just run it from main digiKam root directory.
    Please check if ChangeLog file is updated properly.

svn2cl can be dowloaded at this url: http://ch.tudelft.nl/~arthur/svn2cl/
Just copying this tarball content on digikam root directory to use it.

Note : svn2cl need xsltproc program. Please install it before. (check libxslt-proc package).

5b) Alternatively:
	* check Changelog for last change, modify release_digikam(imageplguins)_cl.sh
	  (use last-rev+1 or date) and run it.
	* add a version header and release date for the new release, include the generated
	  Changelog.new-entries at the top of Changelog. Check if the last
	  entry of the new-entries is not already in the old Changelog entries
	* commit the new changelog
        * skip item 6 and 7 below

6/ Copy last changes of fresh ChangeLog file to ChangeLog.old using a simple text editor. 
   Place a release tag at the top of ChangeLog. Remove all 'scripty' entries in log.

   Rename ChangeLog.old to ChangeLog and commit it on svn.

7/ Update NEWS file. If Changelog is a dry historical record of development, 
   NEWS should focus on the improvements and changes, summarize everything since 
   last major release. Look into ML, changelog and use BKO filter for bug summaries.
   Commit to svn.

8/ Run release_digikam.rb script and the release_digikam_docs.rb ($ ruby foo.rb)

9/ When tarball is created, decompress it in a temp folder and try to compile it to prevent any problems.

10/ Upload tarball to http://digikam3rdparty.free.fr (address to indicate in mail) 
    area via ftp and post a message on digikam-devel@kde.org mailing list to have a 
    feedback from packagers before posting an offical release annoucement.

11/ When official tarball is ready to post, don't forget to copy current trunk svn branch to the tags branch
    (http://websvn.kde.org/tags/digikam/). See TAGGING below.

12/ Upload tarball to sourceforge.net area using this url (must be admin on SF-digikam):

	ftp://upload.sourceforge.net/incoming
	...and admin file releases on sourceforge.net project page using this url:
    	https://sourceforge.net/project/admin/editpackages.php?group_id=42641

13/ Perform an official release announcement to these ML:

* digikam-users@kde.org
* digikam-devel@kde.org
* kde-extra-gear@kde.org
* kde-announce-apps@kde.org 
* kde-imaging@kde.org

------------------ TAGGING ------------------

Each release has to be tagged. All tags are located in svn in the directory /tags/digikam
You'll find the svn revision used in the tarball in the file RELEASE.rev. You have to do this out of your svn graphics folder.

For a X.Y.Z.UVW release

  svn copy -r{last-used-rev_number} \
	https://{svn-user}@svn.kde.org/home/kde/branches/extragear/kde3/graphics/digikam \
	https://{svn-user}@svn.kde.org/home/kde/tags/digikam/digikam_X_Y_Z_UVW

You also can use svn+ssh://{svn-user... instead of password requiring interface https://

If anyone knows what the purpose of this tagging is, please put it here ;-)
	* easy svn diff against released version? -- allee
	* nevermind, feel free to remove the tagging section -- allee
	* information about releases is stored in SVN database,
	  SVN history will be kept for a long time -- marcel
	* the idea of tagging comes from CVS, with SVN, you copy -- marcel
	* copying in SVN is a cheap operation, it doesn't hurt -- marcel

----------------- Branching -----------------

Branching is done, so translators can work in two seperate areas and we can develop unstable and a next stable release.
To set it up, you need to do following. Remember it will take you two evenings to succeed, but you need to finish the first part completely, because automated kde scripts will ruin your work!

14/
- go to /branches/stable/extragear/graphics. 
- svn delete digikam and digikamimageplugins. 
- svn cp http://anonsvn.kde.org/home/kde/extragear/graphics/digikam digikam  
  and the same for the plugins.

more elegant: a direct copy on the server:
$ svn delete svn+ssh://{svn-user}@svn.kde.org/home/kde/branches/stable/extragear/graphics/digikam
$ svn copy -r{last-used-rev_number} \
    http://anonsvn.kde.org/home/kde/trunk/extragear/graphics/digikam \
    http://anonsvn.kde.org/home/kde/branches/stable/extragear/graphics/digikam
 same with plugins

- go to /branches/stable/extragear/graphics/doc
- svn delete digikam and digikamimageplugins and showfoto
- svn cp http://anonsvn.kde.org/home/kde/extragear/graphics/doc/digikam and the same for the plugins and showfoto

----- this need to be done as soon as docbooks are ready in EN ---------
- go to /branches/stable/l10n/templates/docmessages/extragear/graphics
- copy over all digikam, showfoto and plugin files (dont forget the desktop files) from
  /trunk/l10n/templates/docmessages/extragear/graphics

- repeat last to steps for "messages" instead of "docmessages". No showfoto files in this case.
  (go to bed now and do the following tomorrow!) 

- to branch all the language files, you can use the script located in extragear/scripts/
- you need to do that for digikam, showfoto and digikamimageplugins. For digikamimageplugs you need to specify all plugins, so you get something like:
sh  update_l10n_stable.sh --section graphics --app digikamimageplugins -u toma --extrapofiles "digikamimageplugin_adjustcurves.po digikamimageplugin_charcoal.po digikamimageplugin_inpainting.po digikamimageplugin_sheartool.po digikamimageplugin_adjustlevels.po digikamimageplugin_despeckle.po digikamimageplugin_inserttext.po digikamimageplugin_antivignetting.po digikamimageplugin_distortionfx.po digikamimageplugin_lensdistortion.po digikamimageplugin_solarize.po digikamimageplugin_blowup.po digikamimageplugin_emboss.po digikamimageplugin_oilpaint.po digikamimageplugin_superimpose.po digikamimageplugin_blurfx.po digikamimageplugin_filmgrain.po digikamimageplugin_perspective.po digikamimageplugin_texture.po digikamimageplugin_border.po digikamimageplugin_freerotation.po digikamimageplugin_raindrop.po digikamimageplugin_unsharp.po digikamimageplugin_channelmixer.po digikamimageplugin_infrared.po digikamimageplugin_restoration.po digikamimageplugin_whitebalance.po digikamimageplugin_refocus.po digikamimageplugin_hotpixels.po "

-check that all plugins are copied over, last time the last one in the list did not make it.

-send a mail to the ml and kde-i18n-docs.

---------------------------------------------------
