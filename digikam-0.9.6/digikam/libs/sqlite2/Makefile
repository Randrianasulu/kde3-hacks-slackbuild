# Makefile.in generated by automake 1.11.6 from Makefile.am.
# digikam/libs/sqlite2/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#stolen Makefile.am from amarok


am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/digikam-0.9.6
pkgincludedir = $(includedir)/digikam-0.9.6
pkglibdir = $(libdir)/digikam-0.9.6
pkglibexecdir = $(libexecdir)/digikam-0.9.6
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
subdir = digikam/libs/sqlite2
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libsqlite2_la_LIBADD =
am_libsqlite2_la_OBJECTS = libsqlite2_la-attach.lo \
	libsqlite2_la-auth.lo libsqlite2_la-btree.lo \
	libsqlite2_la-btree_rb.lo libsqlite2_la-build.lo \
	libsqlite2_la-copy.lo libsqlite2_la-date.lo \
	libsqlite2_la-delete.lo libsqlite2_la-encode.lo \
	libsqlite2_la-expr.lo libsqlite2_la-func.lo \
	libsqlite2_la-hash.lo libsqlite2_la-insert.lo \
	libsqlite2_la-main.lo libsqlite2_la-opcodes.lo \
	libsqlite2_la-os.lo libsqlite2_la-pager.lo \
	libsqlite2_la-parse.lo libsqlite2_la-pragma.lo \
	libsqlite2_la-printf.lo libsqlite2_la-random.lo \
	libsqlite2_la-select.lo libsqlite2_la-shell.lo \
	libsqlite2_la-table.lo libsqlite2_la-tokenize.lo \
	libsqlite2_la-trigger.lo libsqlite2_la-update.lo \
	libsqlite2_la-util.lo libsqlite2_la-vacuum.lo \
	libsqlite2_la-vdbe.lo libsqlite2_la-vdbeaux.lo \
	libsqlite2_la-where.lo
libsqlite2_la_OBJECTS = $(am_libsqlite2_la_OBJECTS)
libsqlite2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libsqlite2_la_CFLAGS) \
	$(CFLAGS) $(libsqlite2_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsqlite2_la_SOURCES)
DIST_SOURCES = $(libsqlite2_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/guest/botva/src/digikam-0.9.6/admin/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/guest/botva/src/digikam-0.9.6/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/guest/botva/src/digikam-0.9.6/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guest/botva/src/digikam-0.9.6/admin/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -DNDEBUG -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./digikam/configure.in.bot $(top_srcdir)/./digikam/configure.in.in $(top_srcdir)/./digikam/utilities/hotplug/configure.in.in $(top_srcdir)/configure.in.bot
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -fno-tree-pre -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -DNDEBUG -DNO_DEBUG -O2 -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION -DQT_CLEAN_NAMESPACE
CYGPATH_W = echo
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOPIDLNG = /usr/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DOXYGEN_PROJECT_NAME = KEG Graphics API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.10
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
F77 = 
FFLAGS = 
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/msgfmt
GPHOTO_CFLAGS = -I/usr/include/gphoto2
GPHOTO_CONFIG = /usr/bin/gphoto2-config
GPHOTO_PORT_CONFIG = /usr/bin/gphoto2-port-config
GREP = /usr/bin/grep
HAVE_GCC_VISIBILITY = 0
INSTALL = /usr/bin/ginstall -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/bin/kconfig_compiler
KDECONFIG = /usr/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = yes
KDE_HAVE_DOT = NO
KDE_INCLUDES = 
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = #
KDE_USE_FINAL_TRUE = 
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
LCMS_LIBS = -llcms
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBKDCRAW_CFLAGS =  
LIBKDCRAW_LIBS = -lkdcraw  
LIBKEXIV2_CFLAGS =  
LIBKEXIV2_LIBS = -lkexiv2  
LIBKIPI_CFLAGS =  
LIBKIPI_LIBS = -lkipi  
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_ARTS = -lartskde
LIB_GPHOTO = -L/usr/lib -lgphoto2 -lgphoto2_port -lm -L/usr/lib -lgphoto2_port
LIB_JASPER = -ljasper
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_PNG = -lpng
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_SQLITE3 = 
LIB_TIFF = -ltiff
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guest/botva/src/digikam-0.9.6/admin/missing --run makeinfo
MAKEKDEWIDGETS = 
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MKDIR_P = /usr/bin/mkdir -p
MOC = /usr/lib/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
PACKAGE = digikam-0.9.6
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGCONFIGFOUND = yes
PKG_CONFIG = /usr/bin/pkg-config
QTDOCDIR = /usr/lib/qt3/doc/html
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt3/include
QT_LDFLAGS = -L/usr/lib/qt3/lib
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
SQLITE_CFLAGS = 
SQLITE_LIBS = 
STRIP = strip
TOPSUBDIRS =  digikam doc po
UIC = /usr/lib/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R7/include
X_LDFLAGS = -L/usr/X11R7/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/guest/botva/src/digikam-0.9.6/digikam/libs/sqlite2
abs_srcdir = /home/guest/botva/src/digikam-0.9.6/digikam/libs/sqlite2
abs_top_builddir = /home/guest/botva/src/digikam-0.9.6
abs_top_srcdir = /home/guest/botva/src/digikam-0.9.6
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
all_includes = -I/usr/lib/qt3/include -I/usr/X11R7/include 
all_libraries = -L/usr/lib -L/usr/lib/qt3/lib -L/usr/X11R7/lib   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
digikamhelper_dir = /usr/share/apps/digikam/utils
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guest/botva/src/digikam-0.9.6/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/HTML
kde_libs_prefix = /usr
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/lib/qt3/include
qt_libraries = /usr/lib/qt3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = @top_build_prefix@
top_builddir = ../../..
top_srcdir = ../../..
x_includes = /usr/X11R7/include
x_libraries = /usr/X11R7/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
noinst_LTLIBRARIES = libsqlite2.la
INCLUDES = $(all_includes)
libsqlite2_la_CFLAGS = -w
libsqlite2_la_LDFLAGS = $(LIBPTHREAD)
libsqlite2_la_SOURCES = \
    attach.c \
    auth.c \
    btree.c \
    btree_rb.c \
    build.c \
    copy.c \
    date.c \
    delete.c \
    encode.c \
    expr.c \
    func.c \
    hash.c \
    insert.c \
    main.c \
    opcodes.c \
    os.c \
    pager.c \
    parse.c \
    pragma.c \
    printf.c \
    random.c \
    select.c \
    shell.c \
    table.c \
    tokenize.c \
    trigger.c \
    update.c \
    util.c \
    vacuum.c \
    vdbe.c \
    vdbeaux.c \
    where.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu digikam/libs/sqlite2/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu digikam/libs/sqlite2/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsqlite2.la: $(libsqlite2_la_OBJECTS) $(libsqlite2_la_DEPENDENCIES) $(EXTRA_libsqlite2_la_DEPENDENCIES) 
	$(libsqlite2_la_LINK)  $(libsqlite2_la_OBJECTS) $(libsqlite2_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsqlite2_la-attach.Plo
include ./$(DEPDIR)/libsqlite2_la-auth.Plo
include ./$(DEPDIR)/libsqlite2_la-btree.Plo
include ./$(DEPDIR)/libsqlite2_la-btree_rb.Plo
include ./$(DEPDIR)/libsqlite2_la-build.Plo
include ./$(DEPDIR)/libsqlite2_la-copy.Plo
include ./$(DEPDIR)/libsqlite2_la-date.Plo
include ./$(DEPDIR)/libsqlite2_la-delete.Plo
include ./$(DEPDIR)/libsqlite2_la-encode.Plo
include ./$(DEPDIR)/libsqlite2_la-expr.Plo
include ./$(DEPDIR)/libsqlite2_la-func.Plo
include ./$(DEPDIR)/libsqlite2_la-hash.Plo
include ./$(DEPDIR)/libsqlite2_la-insert.Plo
include ./$(DEPDIR)/libsqlite2_la-main.Plo
include ./$(DEPDIR)/libsqlite2_la-opcodes.Plo
include ./$(DEPDIR)/libsqlite2_la-os.Plo
include ./$(DEPDIR)/libsqlite2_la-pager.Plo
include ./$(DEPDIR)/libsqlite2_la-parse.Plo
include ./$(DEPDIR)/libsqlite2_la-pragma.Plo
include ./$(DEPDIR)/libsqlite2_la-printf.Plo
include ./$(DEPDIR)/libsqlite2_la-random.Plo
include ./$(DEPDIR)/libsqlite2_la-select.Plo
include ./$(DEPDIR)/libsqlite2_la-shell.Plo
include ./$(DEPDIR)/libsqlite2_la-table.Plo
include ./$(DEPDIR)/libsqlite2_la-tokenize.Plo
include ./$(DEPDIR)/libsqlite2_la-trigger.Plo
include ./$(DEPDIR)/libsqlite2_la-update.Plo
include ./$(DEPDIR)/libsqlite2_la-util.Plo
include ./$(DEPDIR)/libsqlite2_la-vacuum.Plo
include ./$(DEPDIR)/libsqlite2_la-vdbe.Plo
include ./$(DEPDIR)/libsqlite2_la-vdbeaux.Plo
include ./$(DEPDIR)/libsqlite2_la-where.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libsqlite2_la-attach.lo: attach.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-attach.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-attach.Tpo -c -o libsqlite2_la-attach.lo `test -f 'attach.c' || echo '$(srcdir)/'`attach.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-attach.Tpo $(DEPDIR)/libsqlite2_la-attach.Plo
#	source='attach.c' object='libsqlite2_la-attach.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-attach.lo `test -f 'attach.c' || echo '$(srcdir)/'`attach.c

libsqlite2_la-auth.lo: auth.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-auth.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-auth.Tpo -c -o libsqlite2_la-auth.lo `test -f 'auth.c' || echo '$(srcdir)/'`auth.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-auth.Tpo $(DEPDIR)/libsqlite2_la-auth.Plo
#	source='auth.c' object='libsqlite2_la-auth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-auth.lo `test -f 'auth.c' || echo '$(srcdir)/'`auth.c

libsqlite2_la-btree.lo: btree.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-btree.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-btree.Tpo -c -o libsqlite2_la-btree.lo `test -f 'btree.c' || echo '$(srcdir)/'`btree.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-btree.Tpo $(DEPDIR)/libsqlite2_la-btree.Plo
#	source='btree.c' object='libsqlite2_la-btree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-btree.lo `test -f 'btree.c' || echo '$(srcdir)/'`btree.c

libsqlite2_la-btree_rb.lo: btree_rb.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-btree_rb.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-btree_rb.Tpo -c -o libsqlite2_la-btree_rb.lo `test -f 'btree_rb.c' || echo '$(srcdir)/'`btree_rb.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-btree_rb.Tpo $(DEPDIR)/libsqlite2_la-btree_rb.Plo
#	source='btree_rb.c' object='libsqlite2_la-btree_rb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-btree_rb.lo `test -f 'btree_rb.c' || echo '$(srcdir)/'`btree_rb.c

libsqlite2_la-build.lo: build.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-build.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-build.Tpo -c -o libsqlite2_la-build.lo `test -f 'build.c' || echo '$(srcdir)/'`build.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-build.Tpo $(DEPDIR)/libsqlite2_la-build.Plo
#	source='build.c' object='libsqlite2_la-build.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-build.lo `test -f 'build.c' || echo '$(srcdir)/'`build.c

libsqlite2_la-copy.lo: copy.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-copy.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-copy.Tpo -c -o libsqlite2_la-copy.lo `test -f 'copy.c' || echo '$(srcdir)/'`copy.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-copy.Tpo $(DEPDIR)/libsqlite2_la-copy.Plo
#	source='copy.c' object='libsqlite2_la-copy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-copy.lo `test -f 'copy.c' || echo '$(srcdir)/'`copy.c

libsqlite2_la-date.lo: date.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-date.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-date.Tpo -c -o libsqlite2_la-date.lo `test -f 'date.c' || echo '$(srcdir)/'`date.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-date.Tpo $(DEPDIR)/libsqlite2_la-date.Plo
#	source='date.c' object='libsqlite2_la-date.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-date.lo `test -f 'date.c' || echo '$(srcdir)/'`date.c

libsqlite2_la-delete.lo: delete.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-delete.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-delete.Tpo -c -o libsqlite2_la-delete.lo `test -f 'delete.c' || echo '$(srcdir)/'`delete.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-delete.Tpo $(DEPDIR)/libsqlite2_la-delete.Plo
#	source='delete.c' object='libsqlite2_la-delete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-delete.lo `test -f 'delete.c' || echo '$(srcdir)/'`delete.c

libsqlite2_la-encode.lo: encode.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-encode.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-encode.Tpo -c -o libsqlite2_la-encode.lo `test -f 'encode.c' || echo '$(srcdir)/'`encode.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-encode.Tpo $(DEPDIR)/libsqlite2_la-encode.Plo
#	source='encode.c' object='libsqlite2_la-encode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-encode.lo `test -f 'encode.c' || echo '$(srcdir)/'`encode.c

libsqlite2_la-expr.lo: expr.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-expr.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-expr.Tpo -c -o libsqlite2_la-expr.lo `test -f 'expr.c' || echo '$(srcdir)/'`expr.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-expr.Tpo $(DEPDIR)/libsqlite2_la-expr.Plo
#	source='expr.c' object='libsqlite2_la-expr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-expr.lo `test -f 'expr.c' || echo '$(srcdir)/'`expr.c

libsqlite2_la-func.lo: func.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-func.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-func.Tpo -c -o libsqlite2_la-func.lo `test -f 'func.c' || echo '$(srcdir)/'`func.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-func.Tpo $(DEPDIR)/libsqlite2_la-func.Plo
#	source='func.c' object='libsqlite2_la-func.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-func.lo `test -f 'func.c' || echo '$(srcdir)/'`func.c

libsqlite2_la-hash.lo: hash.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-hash.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-hash.Tpo -c -o libsqlite2_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-hash.Tpo $(DEPDIR)/libsqlite2_la-hash.Plo
#	source='hash.c' object='libsqlite2_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c

libsqlite2_la-insert.lo: insert.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-insert.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-insert.Tpo -c -o libsqlite2_la-insert.lo `test -f 'insert.c' || echo '$(srcdir)/'`insert.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-insert.Tpo $(DEPDIR)/libsqlite2_la-insert.Plo
#	source='insert.c' object='libsqlite2_la-insert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-insert.lo `test -f 'insert.c' || echo '$(srcdir)/'`insert.c

libsqlite2_la-main.lo: main.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-main.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-main.Tpo -c -o libsqlite2_la-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-main.Tpo $(DEPDIR)/libsqlite2_la-main.Plo
#	source='main.c' object='libsqlite2_la-main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c

libsqlite2_la-opcodes.lo: opcodes.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-opcodes.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-opcodes.Tpo -c -o libsqlite2_la-opcodes.lo `test -f 'opcodes.c' || echo '$(srcdir)/'`opcodes.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-opcodes.Tpo $(DEPDIR)/libsqlite2_la-opcodes.Plo
#	source='opcodes.c' object='libsqlite2_la-opcodes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-opcodes.lo `test -f 'opcodes.c' || echo '$(srcdir)/'`opcodes.c

libsqlite2_la-os.lo: os.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-os.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-os.Tpo -c -o libsqlite2_la-os.lo `test -f 'os.c' || echo '$(srcdir)/'`os.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-os.Tpo $(DEPDIR)/libsqlite2_la-os.Plo
#	source='os.c' object='libsqlite2_la-os.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-os.lo `test -f 'os.c' || echo '$(srcdir)/'`os.c

libsqlite2_la-pager.lo: pager.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-pager.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-pager.Tpo -c -o libsqlite2_la-pager.lo `test -f 'pager.c' || echo '$(srcdir)/'`pager.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-pager.Tpo $(DEPDIR)/libsqlite2_la-pager.Plo
#	source='pager.c' object='libsqlite2_la-pager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-pager.lo `test -f 'pager.c' || echo '$(srcdir)/'`pager.c

libsqlite2_la-parse.lo: parse.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-parse.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-parse.Tpo -c -o libsqlite2_la-parse.lo `test -f 'parse.c' || echo '$(srcdir)/'`parse.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-parse.Tpo $(DEPDIR)/libsqlite2_la-parse.Plo
#	source='parse.c' object='libsqlite2_la-parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-parse.lo `test -f 'parse.c' || echo '$(srcdir)/'`parse.c

libsqlite2_la-pragma.lo: pragma.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-pragma.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-pragma.Tpo -c -o libsqlite2_la-pragma.lo `test -f 'pragma.c' || echo '$(srcdir)/'`pragma.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-pragma.Tpo $(DEPDIR)/libsqlite2_la-pragma.Plo
#	source='pragma.c' object='libsqlite2_la-pragma.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-pragma.lo `test -f 'pragma.c' || echo '$(srcdir)/'`pragma.c

libsqlite2_la-printf.lo: printf.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-printf.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-printf.Tpo -c -o libsqlite2_la-printf.lo `test -f 'printf.c' || echo '$(srcdir)/'`printf.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-printf.Tpo $(DEPDIR)/libsqlite2_la-printf.Plo
#	source='printf.c' object='libsqlite2_la-printf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-printf.lo `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libsqlite2_la-random.lo: random.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-random.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-random.Tpo -c -o libsqlite2_la-random.lo `test -f 'random.c' || echo '$(srcdir)/'`random.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-random.Tpo $(DEPDIR)/libsqlite2_la-random.Plo
#	source='random.c' object='libsqlite2_la-random.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-random.lo `test -f 'random.c' || echo '$(srcdir)/'`random.c

libsqlite2_la-select.lo: select.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-select.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-select.Tpo -c -o libsqlite2_la-select.lo `test -f 'select.c' || echo '$(srcdir)/'`select.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-select.Tpo $(DEPDIR)/libsqlite2_la-select.Plo
#	source='select.c' object='libsqlite2_la-select.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-select.lo `test -f 'select.c' || echo '$(srcdir)/'`select.c

libsqlite2_la-shell.lo: shell.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-shell.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-shell.Tpo -c -o libsqlite2_la-shell.lo `test -f 'shell.c' || echo '$(srcdir)/'`shell.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-shell.Tpo $(DEPDIR)/libsqlite2_la-shell.Plo
#	source='shell.c' object='libsqlite2_la-shell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-shell.lo `test -f 'shell.c' || echo '$(srcdir)/'`shell.c

libsqlite2_la-table.lo: table.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-table.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-table.Tpo -c -o libsqlite2_la-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-table.Tpo $(DEPDIR)/libsqlite2_la-table.Plo
#	source='table.c' object='libsqlite2_la-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

libsqlite2_la-tokenize.lo: tokenize.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-tokenize.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-tokenize.Tpo -c -o libsqlite2_la-tokenize.lo `test -f 'tokenize.c' || echo '$(srcdir)/'`tokenize.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-tokenize.Tpo $(DEPDIR)/libsqlite2_la-tokenize.Plo
#	source='tokenize.c' object='libsqlite2_la-tokenize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-tokenize.lo `test -f 'tokenize.c' || echo '$(srcdir)/'`tokenize.c

libsqlite2_la-trigger.lo: trigger.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-trigger.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-trigger.Tpo -c -o libsqlite2_la-trigger.lo `test -f 'trigger.c' || echo '$(srcdir)/'`trigger.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-trigger.Tpo $(DEPDIR)/libsqlite2_la-trigger.Plo
#	source='trigger.c' object='libsqlite2_la-trigger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-trigger.lo `test -f 'trigger.c' || echo '$(srcdir)/'`trigger.c

libsqlite2_la-update.lo: update.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-update.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-update.Tpo -c -o libsqlite2_la-update.lo `test -f 'update.c' || echo '$(srcdir)/'`update.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-update.Tpo $(DEPDIR)/libsqlite2_la-update.Plo
#	source='update.c' object='libsqlite2_la-update.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-update.lo `test -f 'update.c' || echo '$(srcdir)/'`update.c

libsqlite2_la-util.lo: util.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-util.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-util.Tpo -c -o libsqlite2_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-util.Tpo $(DEPDIR)/libsqlite2_la-util.Plo
#	source='util.c' object='libsqlite2_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libsqlite2_la-vacuum.lo: vacuum.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-vacuum.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-vacuum.Tpo -c -o libsqlite2_la-vacuum.lo `test -f 'vacuum.c' || echo '$(srcdir)/'`vacuum.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-vacuum.Tpo $(DEPDIR)/libsqlite2_la-vacuum.Plo
#	source='vacuum.c' object='libsqlite2_la-vacuum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-vacuum.lo `test -f 'vacuum.c' || echo '$(srcdir)/'`vacuum.c

libsqlite2_la-vdbe.lo: vdbe.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-vdbe.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-vdbe.Tpo -c -o libsqlite2_la-vdbe.lo `test -f 'vdbe.c' || echo '$(srcdir)/'`vdbe.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-vdbe.Tpo $(DEPDIR)/libsqlite2_la-vdbe.Plo
#	source='vdbe.c' object='libsqlite2_la-vdbe.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-vdbe.lo `test -f 'vdbe.c' || echo '$(srcdir)/'`vdbe.c

libsqlite2_la-vdbeaux.lo: vdbeaux.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-vdbeaux.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-vdbeaux.Tpo -c -o libsqlite2_la-vdbeaux.lo `test -f 'vdbeaux.c' || echo '$(srcdir)/'`vdbeaux.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-vdbeaux.Tpo $(DEPDIR)/libsqlite2_la-vdbeaux.Plo
#	source='vdbeaux.c' object='libsqlite2_la-vdbeaux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-vdbeaux.lo `test -f 'vdbeaux.c' || echo '$(srcdir)/'`vdbeaux.c

libsqlite2_la-where.lo: where.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -MT libsqlite2_la-where.lo -MD -MP -MF $(DEPDIR)/libsqlite2_la-where.Tpo -c -o libsqlite2_la-where.lo `test -f 'where.c' || echo '$(srcdir)/'`where.c
	$(am__mv) $(DEPDIR)/libsqlite2_la-where.Tpo $(DEPDIR)/libsqlite2_la-where.Plo
#	source='where.c' object='libsqlite2_la-where.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsqlite2_la_CFLAGS) $(CFLAGS) -c -o libsqlite2_la-where.lo `test -f 'where.c' || echo '$(srcdir)/'`where.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
