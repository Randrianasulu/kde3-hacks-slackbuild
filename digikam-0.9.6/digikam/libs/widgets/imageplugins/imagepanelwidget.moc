/****************************************************************************
** Digikam::ImagePanelWidget meta object code from reading C++ file 'imagepanelwidget.h'
**
** Created: Tue Jun 13 22:20:42 2017
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.8   edited Feb 2 14:59 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "imagepanelwidget.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.8d. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *Digikam::ImagePanelWidget::className() const
{
    return "Digikam::ImagePanelWidget";
}

QMetaObject *Digikam::ImagePanelWidget::metaObj = 0;
static QMetaObjectCleanUp cleanUp_Digikam__ImagePanelWidget( "Digikam::ImagePanelWidget", &Digikam::ImagePanelWidget::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString Digikam::ImagePanelWidget::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Digikam::ImagePanelWidget", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString Digikam::ImagePanelWidget::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Digikam::ImagePanelWidget", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* Digikam::ImagePanelWidget::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ "rect", &static_QUType_varptr, "\x08", QUParameter::In },
	{ "targetDone", &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod slot_0 = {"slotSetImageRegionPosition", 2, param_slot_0 };
    static const QUParameter param_slot_1[] = {
	{ "target", &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod slot_1 = {"slotOriginalImageRegionChanged", 1, param_slot_1 };
    static const QUMethod slot_2 = {"slotPanIconTakeFocus", 0, 0 };
    static const QUMethod slot_3 = {"slotInitGui", 0, 0 };
    static const QUParameter param_slot_4[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_4 = {"slotZoomSliderChanged", 1, param_slot_4 };
    static const QMetaData slot_tbl[] = {
	{ "slotSetImageRegionPosition(const QRect&,bool)", &slot_0, QMetaData::Public },
	{ "slotOriginalImageRegionChanged(bool)", &slot_1, QMetaData::Public },
	{ "slotPanIconTakeFocus()", &slot_2, QMetaData::Private },
	{ "slotInitGui()", &slot_3, QMetaData::Private },
	{ "slotZoomSliderChanged(int)", &slot_4, QMetaData::Private }
    };
    static const QUMethod signal_0 = {"signalOriginalClipFocusChanged", 0, 0 };
    static const QUMethod signal_1 = {"signalResized", 0, 0 };
    static const QMetaData signal_tbl[] = {
	{ "signalOriginalClipFocusChanged()", &signal_0, QMetaData::Public },
	{ "signalResized()", &signal_1, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"Digikam::ImagePanelWidget", parentObject,
	slot_tbl, 5,
	signal_tbl, 2,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_Digikam__ImagePanelWidget.setMetaObject( metaObj );
    return metaObj;
}

void* Digikam::ImagePanelWidget::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "Digikam::ImagePanelWidget" ) )
	return this;
    return QWidget::qt_cast( clname );
}

// SIGNAL signalOriginalClipFocusChanged
void Digikam::ImagePanelWidget::signalOriginalClipFocusChanged()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

// SIGNAL signalResized
void Digikam::ImagePanelWidget::signalResized()
{
    activate_signal( staticMetaObject()->signalOffset() + 1 );
}

bool Digikam::ImagePanelWidget::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: slotSetImageRegionPosition((const QRect&)*((const QRect*)static_QUType_ptr.get(_o+1)),(bool)static_QUType_bool.get(_o+2)); break;
    case 1: slotOriginalImageRegionChanged((bool)static_QUType_bool.get(_o+1)); break;
    case 2: slotPanIconTakeFocus(); break;
    case 3: slotInitGui(); break;
    case 4: slotZoomSliderChanged((int)static_QUType_int.get(_o+1)); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool Digikam::ImagePanelWidget::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: signalOriginalClipFocusChanged(); break;
    case 1: signalResized(); break;
    default:
	return QWidget::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool Digikam::ImagePanelWidget::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool Digikam::ImagePanelWidget::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
