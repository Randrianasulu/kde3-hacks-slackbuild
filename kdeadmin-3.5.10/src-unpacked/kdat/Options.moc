/****************************************************************************
** Options meta object code from reading C++ file 'Options.h'
**
** Created: Sun Feb 1 00:52:57 2015
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.8   edited Feb 2 14:59 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "Options.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.8d. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *Options::className() const
{
    return "Options";
}

QMetaObject *Options::metaObj = 0;
static QMetaObjectCleanUp cleanUp_Options( "Options", &Options::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString Options::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Options", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString Options::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Options", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* Options::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QObject::staticMetaObject();
    static const QUMethod signal_0 = {"sigDefaultTapeSize", 0, 0 };
    static const QUMethod signal_1 = {"sigTapeBlockSize", 0, 0 };
    static const QUMethod signal_2 = {"sigTapeDevice", 0, 0 };
    static const QUMethod signal_3 = {"sigTarCommand", 0, 0 };
    static const QUMethod signal_4 = {"sigLoadOnMount", 0, 0 };
    static const QUMethod signal_5 = {"sigLockOnMount", 0, 0 };
    static const QUMethod signal_6 = {"sigEjectOnUnmount", 0, 0 };
    static const QUMethod signal_7 = {"sigVariableBlockSize", 0, 0 };
    static const QMetaData signal_tbl[] = {
	{ "sigDefaultTapeSize()", &signal_0, QMetaData::Public },
	{ "sigTapeBlockSize()", &signal_1, QMetaData::Public },
	{ "sigTapeDevice()", &signal_2, QMetaData::Public },
	{ "sigTarCommand()", &signal_3, QMetaData::Public },
	{ "sigLoadOnMount()", &signal_4, QMetaData::Public },
	{ "sigLockOnMount()", &signal_5, QMetaData::Public },
	{ "sigEjectOnUnmount()", &signal_6, QMetaData::Public },
	{ "sigVariableBlockSize()", &signal_7, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"Options", parentObject,
	0, 0,
	signal_tbl, 8,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_Options.setMetaObject( metaObj );
    return metaObj;
}

void* Options::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "Options" ) )
	return this;
    return QObject::qt_cast( clname );
}

// SIGNAL sigDefaultTapeSize
void Options::sigDefaultTapeSize()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

// SIGNAL sigTapeBlockSize
void Options::sigTapeBlockSize()
{
    activate_signal( staticMetaObject()->signalOffset() + 1 );
}

// SIGNAL sigTapeDevice
void Options::sigTapeDevice()
{
    activate_signal( staticMetaObject()->signalOffset() + 2 );
}

// SIGNAL sigTarCommand
void Options::sigTarCommand()
{
    activate_signal( staticMetaObject()->signalOffset() + 3 );
}

// SIGNAL sigLoadOnMount
void Options::sigLoadOnMount()
{
    activate_signal( staticMetaObject()->signalOffset() + 4 );
}

// SIGNAL sigLockOnMount
void Options::sigLockOnMount()
{
    activate_signal( staticMetaObject()->signalOffset() + 5 );
}

// SIGNAL sigEjectOnUnmount
void Options::sigEjectOnUnmount()
{
    activate_signal( staticMetaObject()->signalOffset() + 6 );
}

// SIGNAL sigVariableBlockSize
void Options::sigVariableBlockSize()
{
    activate_signal( staticMetaObject()->signalOffset() + 7 );
}

bool Options::qt_invoke( int _id, QUObject* _o )
{
    return QObject::qt_invoke(_id,_o);
}

bool Options::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: sigDefaultTapeSize(); break;
    case 1: sigTapeBlockSize(); break;
    case 2: sigTapeDevice(); break;
    case 3: sigTarCommand(); break;
    case 4: sigLoadOnMount(); break;
    case 5: sigLockOnMount(); break;
    case 6: sigEjectOnUnmount(); break;
    case 7: sigVariableBlockSize(); break;
    default:
	return QObject::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool Options::qt_property( int id, int f, QVariant* v)
{
    return QObject::qt_property( id, f, v);
}

bool Options::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
