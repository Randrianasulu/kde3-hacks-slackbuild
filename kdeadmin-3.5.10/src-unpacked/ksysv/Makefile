# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# ksysv/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/kdeadmin
pkglibdir = $(libdir)/kdeadmin
pkgincludedir = $(includedir)/kdeadmin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = ksysv$(EXEEXT)
subdir = ksysv
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in AUTHORS TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kdemimedir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(textmimedir)" \
	"$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_ksysv_OBJECTS = main.$(OBJEXT) ActionList.$(OBJEXT) \
	IOCore.$(OBJEXT) ksvdraglist.$(OBJEXT) \
	RunlevelAuthIcon.$(OBJEXT) OldView.$(OBJEXT) \
	Properties.$(OBJEXT) SpinBox.$(OBJEXT) ServiceDlg.$(OBJEXT) \
	TopWidget.$(OBJEXT) Data.$(OBJEXT) ksv_conf.$(OBJEXT) \
	ksvapplication.$(OBJEXT) kdltooltip.$(OBJEXT) \
	ksv_core.$(OBJEXT) ksvdrag.$(OBJEXT) kscroller.$(OBJEXT) \
	ksv_service.$(OBJEXT) leveldb.$(OBJEXT) \
	PreferencesDialog.$(OBJEXT) trash.$(OBJEXT) \
	ksvpathconfig.$(OBJEXT) ksvmiscconfig.$(OBJEXT) \
	ksvlookandfeel.$(OBJEXT) ksvconfigwizard.$(OBJEXT) \
	kbusymanager.$(OBJEXT)
#>- ksysv_OBJECTS = $(am_ksysv_OBJECTS)
#>+ 15
ksysv_final_OBJECTS = leveldb.o ksysv.all_cpp.o 
ksysv_nofinal_OBJECTS = main.$(OBJEXT) ActionList.$(OBJEXT) \
	IOCore.$(OBJEXT) ksvdraglist.$(OBJEXT) \
	RunlevelAuthIcon.$(OBJEXT) OldView.$(OBJEXT) \
	Properties.$(OBJEXT) SpinBox.$(OBJEXT) ServiceDlg.$(OBJEXT) \
	TopWidget.$(OBJEXT) Data.$(OBJEXT) ksv_conf.$(OBJEXT) \
	ksvapplication.$(OBJEXT) kdltooltip.$(OBJEXT) \
	ksv_core.$(OBJEXT) ksvdrag.$(OBJEXT) kscroller.$(OBJEXT) \
	ksv_service.$(OBJEXT) leveldb.$(OBJEXT) \
	PreferencesDialog.$(OBJEXT) trash.$(OBJEXT) \
	ksvpathconfig.$(OBJEXT) ksvmiscconfig.$(OBJEXT) \
	ksvlookandfeel.$(OBJEXT) ksvconfigwizard.$(OBJEXT) \
	kbusymanager.$(OBJEXT) pathconfig.$(OBJEXT) miscconfig.$(OBJEXT) lookandfeelconfig.$(OBJEXT) configwizard.$(OBJEXT)
ksysv_OBJECTS = $(ksysv_nofinal_OBJECTS)
#ksysv_OBJECTS = $(ksysv_final_OBJECTS)
am__DEPENDENCIES_1 =
ksysv_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- ksysv_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(ksysv_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
ksysv_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(ksysv_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(ksysv_SOURCES)
DIST_SOURCES = $(ksysv_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
kdemimeDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
textmimeDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kdemime_DATA) $(rc_DATA) $(textmime_DATA) $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -DNDEBUG -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./kcron/configure.in.in $(top_srcdir)/./kdat/configure.in.in $(top_srcdir)/./knetworkconf/backends/configure.in.in $(top_srcdir)/./ksysv/configure.in.in $(top_srcdir)/./kuser/configure.in.in $(top_srcdir)/./lilo-config/configure.in.in $(top_srcdir)/./lilo-config/qt/configure.in.in
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -DNDEBUG -DNO_DEBUG -O2 -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOPIDLNG = /usr/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
F77 = 
FFLAGS = 
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_GCC_VISIBILITY = 0
INSTALL = /usr/bin/ginstall -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/bin/kconfig_compiler
KDECONFIG = /usr/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_INCLUDES = 
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
KU_FIRSTGID = 
KU_FIRSTUID = 
KU_HOMEDIR_PERM = 
KU_MAILBOX_GID = 
KU_MAILBOX_PERM = 
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = 
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSHADOW = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run makeinfo
MAKEKDEWIDGETS = /usr/bin/makekdewidgets
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MKDIR_P = /usr/bin/mkdir -p
MOC = /usr/lib/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
PACKAGE = kdeadmin
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PAMLIBS = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt3/include
QT_LDFLAGS = -L/usr/lib/qt3/lib
RANLIB = ranlib
SETUIDFLAGS = -m 4755
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  doc kcron kdat kfile-plugins knetworkconf kpackage ksysv kuser lilo-config secpolicy
UIC = /usr/lib/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R7/include
X_LDFLAGS = -L/usr/X11R7/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/guest/botva/src/kdeadmin-3.5.10/ksysv
abs_srcdir = /home/guest/botva/src/kdeadmin-3.5.10/ksysv
abs_top_builddir = /home/guest/botva/src/kdeadmin-3.5.10
abs_top_srcdir = /home/guest/botva/src/kdeadmin-3.5.10
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
all_includes = -I/usr/lib/qt3/include -I/usr/X11R7/include 
all_libraries = -L/usr/lib -L/usr/lib/qt3/lib -L/usr/X11R7/lib   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guest/botva/src/kdeadmin-3.5.10/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/HTML
kde_libs_prefix = /usr
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/lib/qt3/include
qt_libraries = /usr/lib/qt3/lib
sbindir = ${exec_prefix}/sbin
scriptsdir = /usr/share/apps/knetworkconf/backends
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_builddir = ..
top_srcdir = ..
x_includes = /usr/X11R7/include
x_libraries = /usr/X11R7/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
INCLUDES = $(all_includes)
SUBDIRS = pics toolbar
KDE_ICON = AUTO
xdg_apps_DATA = ksysv.desktop
# Which sources should be compiled for ksysv.
#>- ksysv_SOURCES = main.cpp \
#>- 					ActionList.cpp \
#>- 					IOCore.cpp \
#>- 					ksvdraglist.cpp \
#>- 					RunlevelAuthIcon.cpp \
#>- 					OldView.cpp \
#>- 					Properties.cpp \
#>- 					SpinBox.cpp \
#>- 					ServiceDlg.cpp \
#>- 					TopWidget.cpp \
#>- 					Data.cpp \
#>- 					ksv_conf.cpp \
#>- 					ksvapplication.cpp \
#>- 					kdltooltip.cpp \
#>- 					ksv_core.cpp \
#>- 					ksvdrag.cpp \
#>- 					kscroller.cpp \
#>- 					ksv_service.cpp \
#>- 					leveldb.c \
#>- 					PreferencesDialog.cpp \
#>- 					trash.cpp \
#>- 					pathconfig.ui \
#>- 					ksvpathconfig.cpp \
#>- 					miscconfig.ui \
#>- 					ksvmiscconfig.cpp \
#>- 					lookandfeelconfig.ui \
#>- 					ksvlookandfeel.cpp \
#>- 					configwizard.ui \
#>- 					ksvconfigwizard.cpp \
#>- 					kbusymanager.cpp
#>+ 30
ksysv_SOURCES=main.cpp \
					ActionList.cpp \
					IOCore.cpp \
					ksvdraglist.cpp \
					RunlevelAuthIcon.cpp \
					OldView.cpp \
					Properties.cpp \
					SpinBox.cpp \
					ServiceDlg.cpp \
					TopWidget.cpp \
					Data.cpp \
					ksv_conf.cpp \
					ksvapplication.cpp \
					kdltooltip.cpp \
					ksv_core.cpp \
					ksvdrag.cpp \
					kscroller.cpp \
					ksv_service.cpp \
					leveldb.c \
					PreferencesDialog.cpp \
					trash.cpp \
					 \
					ksvpathconfig.cpp \
					 \
					ksvmiscconfig.cpp \
					 \
					ksvlookandfeel.cpp \
					 \
					ksvconfigwizard.cpp \
					kbusymanager.cpp pathconfig.cpp miscconfig.cpp lookandfeelconfig.cpp configwizard.cpp


# the library search path
#>- ksysv_METASOURCES = AUTO
ksysv_LDFLAGS = $(all_libraries) $(KDE_RPATH)
ksysv_LDADD = $(LIB_KFILE)  -lkdeprint

# this option you can leave out. Just, if you use "make dist", you need it
noinst_HEADERS = ActionList.h \
					IOCore.h \
					OldView.h \
					Properties.h \
					SpinBox.h \
					Data.h \
					ksvapplication.h \
					ServiceDlg.h \
					TopWidget.h \
					kdltooltip.h \
					ksvdrag.h \
					ksv_service.h \
					ksv_conf.h \
					RunlevelAuthIcon.h \
					ksv_core.h \
					kscroller.h \
					ksvdraglist.h \
					leveldb.h \
					PreferencesDialog.h \
					trash.h \
					ksvpathconfig.h \
					ksvmiscconfig.h \
					ksvlookandfeel.h \
					ksvconfigwizard.h \
					kbusymanager.h \
					version.h

rcdir = $(kde_datadir)/ksysv
rc_DATA = ksysvui.rc
kdemime_DATA = x-ksysv.desktop
kdemimedir = $(kde_mimedir)/application
textmime_DATA = x-ksysv-log.desktop
textmimedir = $(kde_mimedir)/text
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  ksysv/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  ksysv/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  ksysv/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  ksysv/Makefile
	cd $(top_srcdir) && perl admin/am_edit ksysv/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
ksysv$(EXEEXT): $(ksysv_OBJECTS) $(ksysv_DEPENDENCIES) 
	@rm -f ksysv$(EXEEXT)
	$(ksysv_LINK) $(ksysv_OBJECTS) $(ksysv_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ActionList.Po
include ./$(DEPDIR)/Data.Po
include ./$(DEPDIR)/IOCore.Po
include ./$(DEPDIR)/OldView.Po
include ./$(DEPDIR)/PreferencesDialog.Po
include ./$(DEPDIR)/Properties.Po
include ./$(DEPDIR)/RunlevelAuthIcon.Po
include ./$(DEPDIR)/ServiceDlg.Po
include ./$(DEPDIR)/SpinBox.Po
include ./$(DEPDIR)/TopWidget.Po
include ./$(DEPDIR)/kbusymanager.Po
include ./$(DEPDIR)/kdltooltip.Po
include ./$(DEPDIR)/kscroller.Po
include ./$(DEPDIR)/ksv_conf.Po
include ./$(DEPDIR)/ksv_core.Po
include ./$(DEPDIR)/ksv_service.Po
include ./$(DEPDIR)/ksvapplication.Po
include ./$(DEPDIR)/ksvconfigwizard.Po
include ./$(DEPDIR)/ksvdrag.Po
include ./$(DEPDIR)/ksvdraglist.Po
include ./$(DEPDIR)/ksvlookandfeel.Po
include ./$(DEPDIR)/ksvmiscconfig.Po
include ./$(DEPDIR)/ksvpathconfig.Po
include ./$(DEPDIR)/leveldb.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/trash.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kdemimeDATA: $(kdemime_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kdemimedir)" || $(MKDIR_P) "$(DESTDIR)$(kdemimedir)"
	@list='$(kdemime_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kdemimeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kdemimedir)/$$f'"; \
	  $(kdemimeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kdemimedir)/$$f"; \
	done

uninstall-kdemimeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdemime_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kdemimedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kdemimedir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-textmimeDATA: $(textmime_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(textmimedir)" || $(MKDIR_P) "$(DESTDIR)$(textmimedir)"
	@list='$(textmime_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(textmimeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(textmimedir)/$$f'"; \
	  $(textmimeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(textmimedir)/$$f"; \
	done

uninstall-textmimeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(textmime_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(textmimedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(textmimedir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kdemimedir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(textmimedir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-kdemimeDATA install-rcDATA \
#>- 	install-textmimeDATA install-xdg_appsDATA
#>+ 2
install-data-am: install-kde-icons  install-kdemimeDATA install-rcDATA \
	install-textmimeDATA install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-kdemimeDATA \
#>- 	uninstall-rcDATA uninstall-textmimeDATA uninstall-xdg_appsDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-kdemimeDATA \
	uninstall-rcDATA uninstall-textmimeDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kdemimeDATA install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-rcDATA \
	install-strip install-textmimeDATA install-xdg_appsDATA \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-kdemimeDATA uninstall-rcDATA \
	uninstall-textmimeDATA uninstall-xdg_appsDATA


# just to make sure, automake makes them 

messages: rc.cpp
	$(XGETTEXT) -C *.cpp -o $(podir)/ksysv.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
ksvconfigwizard.moc: $(srcdir)/ksvconfigwizard.h
	$(MOC) $(srcdir)/ksvconfigwizard.h -o ksvconfigwizard.moc

#>+ 2
mocs: ksvconfigwizard.moc

#>+ 3
ksvmiscconfig.moc: $(srcdir)/ksvmiscconfig.h
	$(MOC) $(srcdir)/ksvmiscconfig.h -o ksvmiscconfig.moc

#>+ 2
mocs: ksvmiscconfig.moc

#>+ 3
OldView.moc: $(srcdir)/OldView.h
	$(MOC) $(srcdir)/OldView.h -o OldView.moc

#>+ 2
mocs: OldView.moc

#>+ 3
Properties.moc: $(srcdir)/Properties.h
	$(MOC) $(srcdir)/Properties.h -o Properties.moc

#>+ 2
mocs: Properties.moc

#>+ 3
ksvapplication.moc: $(srcdir)/ksvapplication.h
	$(MOC) $(srcdir)/ksvapplication.h -o ksvapplication.moc

#>+ 2
mocs: ksvapplication.moc

#>+ 3
SpinBox.moc: $(srcdir)/SpinBox.h
	$(MOC) $(srcdir)/SpinBox.h -o SpinBox.moc

#>+ 2
mocs: SpinBox.moc

#>+ 3
ServiceDlg.moc: $(srcdir)/ServiceDlg.h
	$(MOC) $(srcdir)/ServiceDlg.h -o ServiceDlg.moc

#>+ 2
mocs: ServiceDlg.moc

#>+ 3
ksvdraglist.moc: $(srcdir)/ksvdraglist.h
	$(MOC) $(srcdir)/ksvdraglist.h -o ksvdraglist.moc

#>+ 2
mocs: ksvdraglist.moc

#>+ 3
ksvdrag.moc: $(srcdir)/ksvdrag.h
	$(MOC) $(srcdir)/ksvdrag.h -o ksvdrag.moc

#>+ 2
mocs: ksvdrag.moc

#>+ 3
ksvpathconfig.moc: $(srcdir)/ksvpathconfig.h
	$(MOC) $(srcdir)/ksvpathconfig.h -o ksvpathconfig.moc

#>+ 2
mocs: ksvpathconfig.moc

#>+ 3
RunlevelAuthIcon.moc: $(srcdir)/RunlevelAuthIcon.h
	$(MOC) $(srcdir)/RunlevelAuthIcon.h -o RunlevelAuthIcon.moc

#>+ 2
mocs: RunlevelAuthIcon.moc

#>+ 3
TopWidget.moc: $(srcdir)/TopWidget.h
	$(MOC) $(srcdir)/TopWidget.h -o TopWidget.moc

#>+ 2
mocs: TopWidget.moc

#>+ 3
PreferencesDialog.moc: $(srcdir)/PreferencesDialog.h
	$(MOC) $(srcdir)/PreferencesDialog.h -o PreferencesDialog.moc

#>+ 2
mocs: PreferencesDialog.moc

#>+ 3
trash.moc: $(srcdir)/trash.h
	$(MOC) $(srcdir)/trash.h -o trash.moc

#>+ 2
mocs: trash.moc

#>+ 3
ActionList.moc: $(srcdir)/ActionList.h
	$(MOC) $(srcdir)/ActionList.h -o ActionList.moc

#>+ 2
mocs: ActionList.moc

#>+ 3
ksvlookandfeel.moc: $(srcdir)/ksvlookandfeel.h
	$(MOC) $(srcdir)/ksvlookandfeel.h -o ksvlookandfeel.moc

#>+ 2
mocs: ksvlookandfeel.moc

#>+ 3
kscroller.moc: $(srcdir)/kscroller.h
	$(MOC) $(srcdir)/kscroller.h -o kscroller.moc

#>+ 2
mocs: kscroller.moc

#>+ 3
clean-metasources:
	-rm -f  ksvconfigwizard.moc ksvmiscconfig.moc OldView.moc Properties.moc ksvapplication.moc SpinBox.moc ServiceDlg.moc ksvdraglist.moc ksvdrag.moc ksvpathconfig.moc RunlevelAuthIcon.moc TopWidget.moc PreferencesDialog.moc trash.moc ActionList.moc ksvlookandfeel.moc kscroller.moc

#>+ 2
KDE_DIST=x-ksysv-log.desktop pathconfig.ui hi22-app-ksysv.png configwizard.ui x-ksysv.desktop hi16-app-ksysv.png miscconfig.ui ksysv.desktop hi32-app-ksysv.png hi48-app-ksysv.png configure.in.in Makefile.in genui.sh lookandfeelconfig.ui Makefile.am ksysvui.rc 

#>+ 7
clean-ui:
	-rm -f \
	pathconfig.cpp pathconfig.h pathconfig.moc \
	miscconfig.cpp miscconfig.h miscconfig.moc \
	lookandfeelconfig.cpp lookandfeelconfig.h lookandfeelconfig.moc \
	configwizard.cpp configwizard.h configwizard.moc 

#>+ 2
docs-am:

#>+ 16
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-ksysv.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/ksysv.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-ksysv.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/ksysv.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-ksysv.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/ksysv.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-ksysv.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/ksysv.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/ksysv.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/ksysv.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/ksysv.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/ksysv.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  ksysv/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  ksysv/Makefile
	cd $(top_srcdir) && perl admin/am_edit ksysv/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
ksysv.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/ActionList.cpp $(srcdir)/IOCore.cpp $(srcdir)/ksvdraglist.cpp $(srcdir)/RunlevelAuthIcon.cpp $(srcdir)/OldView.cpp $(srcdir)/Properties.cpp $(srcdir)/SpinBox.cpp $(srcdir)/ServiceDlg.cpp $(srcdir)/TopWidget.cpp $(srcdir)/Data.cpp $(srcdir)/ksv_conf.cpp $(srcdir)/ksvapplication.cpp $(srcdir)/kdltooltip.cpp $(srcdir)/ksv_core.cpp $(srcdir)/ksvdrag.cpp $(srcdir)/kscroller.cpp $(srcdir)/ksv_service.cpp $(srcdir)/PreferencesDialog.cpp $(srcdir)/trash.cpp $(srcdir)/ksvpathconfig.cpp $(srcdir)/ksvmiscconfig.cpp $(srcdir)/ksvlookandfeel.cpp $(srcdir)/ksvconfigwizard.cpp $(srcdir)/kbusymanager.cpp pathconfig.cpp miscconfig.cpp lookandfeelconfig.cpp configwizard.cpp  ksvconfigwizard.moc ksvmiscconfig.moc OldView.moc Properties.moc ksvapplication.moc SpinBox.moc lookandfeelconfig.moc ServiceDlg.moc ksvdraglist.moc ksvdrag.moc ksvpathconfig.moc RunlevelAuthIcon.moc miscconfig.moc TopWidget.moc trash.moc PreferencesDialog.moc ksvlookandfeel.moc ActionList.moc pathconfig.moc kscroller.moc configwizard.moc
	@echo 'creating ksysv.all_cpp.cpp ...'; \
	rm -f ksysv.all_cpp.files ksysv.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> ksysv.all_cpp.final; \
	for file in main.cpp ActionList.cpp IOCore.cpp ksvdraglist.cpp RunlevelAuthIcon.cpp OldView.cpp Properties.cpp SpinBox.cpp ServiceDlg.cpp TopWidget.cpp Data.cpp ksv_conf.cpp ksvapplication.cpp kdltooltip.cpp ksv_core.cpp ksvdrag.cpp kscroller.cpp ksv_service.cpp PreferencesDialog.cpp trash.cpp ksvpathconfig.cpp ksvmiscconfig.cpp ksvlookandfeel.cpp ksvconfigwizard.cpp kbusymanager.cpp pathconfig.cpp miscconfig.cpp lookandfeelconfig.cpp configwizard.cpp ; do \
	  echo "#include \"$$file\"" >> ksysv.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> ksysv.all_cpp.final; \
	done; \
	cat ksysv.all_cpp.final ksysv.all_cpp.files > ksysv.all_cpp.cpp; \
	rm -f ksysv.all_cpp.final ksysv.all_cpp.files

#>+ 3
clean-final:
	-rm -f ksysv.all_cpp.cpp

#>+ 3
final:
	$(MAKE) ksysv_OBJECTS="$(ksysv_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) ksysv_OBJECTS="$(ksysv_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) ksysv_OBJECTS="$(ksysv_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) ksysv_OBJECTS="$(ksysv_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 63
ksvpathconfig.o: ksvpathconfig.moc 
$(srcdir)/ksvpathconfig.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
ksvapplication.o: ksvapplication.moc 
$(srcdir)/main.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
PreferencesDialog.lo: PreferencesDialog.moc 
trash.lo: trash.moc 
ksvlookandfeel.o: ksvlookandfeel.moc 
$(srcdir)/ksv_conf.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/ksvdrag.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/kbusymanager.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
nmcheck-am: nmcheck
ksvmiscconfig.lo: ksvmiscconfig.moc 
ServiceDlg.lo: ServiceDlg.moc 
SpinBox.lo: SpinBox.moc 
ksvdraglist.o: ksvdraglist.moc 
TopWidget.lo: TopWidget.moc 
ServiceDlg.o: ServiceDlg.moc 
ksvdraglist.lo: ksvdraglist.moc 
ksvlookandfeel.lo: ksvlookandfeel.moc 
OldView.lo: OldView.moc 
ksvdrag.lo: ksvdrag.moc 
OldView.o: OldView.moc 
$(srcdir)/kscroller.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/ksv_service.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
ActionList.o: ActionList.moc 
$(srcdir)/Data.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
kscroller.o: kscroller.moc 
TopWidget.o: TopWidget.moc 
ksvdrag.o: ksvdrag.moc 
$(srcdir)/trash.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
RunlevelAuthIcon.o: RunlevelAuthIcon.moc 
trash.o: trash.moc 
$(srcdir)/OldView.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
RunlevelAuthIcon.lo: RunlevelAuthIcon.moc 
$(srcdir)/Properties.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
PreferencesDialog.o: PreferencesDialog.moc 
ksvapplication.lo: ksvapplication.moc 
$(srcdir)/PreferencesDialog.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
Properties.lo: Properties.moc 
ksvmiscconfig.o: ksvmiscconfig.moc 
$(srcdir)/ServiceDlg.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
Properties.o: Properties.moc 
$(srcdir)/RunlevelAuthIcon.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/leveldb.c: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/ksvmiscconfig.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
ksvpathconfig.lo: ksvpathconfig.moc 
$(srcdir)/ksvdraglist.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/IOCore.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
SpinBox.o: SpinBox.moc 
$(srcdir)/ActionList.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
ActionList.lo: ActionList.moc 
ksvconfigwizard.o: ksvconfigwizard.moc 
kscroller.lo: kscroller.moc 
$(srcdir)/kdltooltip.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
nmcheck: 
ksvconfigwizard.lo: ksvconfigwizard.moc 
$(srcdir)/ksvlookandfeel.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/SpinBox.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/ksvconfigwizard.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/ksv_core.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/TopWidget.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 
$(srcdir)/ksvapplication.cpp: pathconfig.h miscconfig.h lookandfeelconfig.h configwizard.h 

#>+ 60
lookandfeelconfig.cpp: $(srcdir)/lookandfeelconfig.ui lookandfeelconfig.h lookandfeelconfig.moc
	rm -f lookandfeelconfig.cpp
	echo '#include <kdialog.h>' > lookandfeelconfig.cpp
	echo '#include <klocale.h>' >> lookandfeelconfig.cpp
	$(UIC) -tr ${UIC_TR} -i lookandfeelconfig.h $(srcdir)/lookandfeelconfig.ui > lookandfeelconfig.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" lookandfeelconfig.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_lookandfeelconfig,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> lookandfeelconfig.cpp ;\
	rm -f lookandfeelconfig.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "lookandfeelconfig.moc"' >> lookandfeelconfig.cpp; else rm -f lookandfeelconfig.cpp ; exit $$ret ; fi

lookandfeelconfig.h: $(srcdir)/lookandfeelconfig.ui
	rm -rf lookandfeelconfig.h;
	$(UIC) $(srcdir)/lookandfeelconfig.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> lookandfeelconfig.h ;
lookandfeelconfig.moc: lookandfeelconfig.h
	$(MOC) lookandfeelconfig.h -o lookandfeelconfig.moc

pathconfig.cpp: $(srcdir)/pathconfig.ui pathconfig.h pathconfig.moc
	rm -f pathconfig.cpp
	echo '#include <kdialog.h>' > pathconfig.cpp
	echo '#include <klocale.h>' >> pathconfig.cpp
	$(UIC) -tr ${UIC_TR} -i pathconfig.h $(srcdir)/pathconfig.ui > pathconfig.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" pathconfig.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_pathconfig,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> pathconfig.cpp ;\
	rm -f pathconfig.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "pathconfig.moc"' >> pathconfig.cpp; else rm -f pathconfig.cpp ; exit $$ret ; fi

pathconfig.h: $(srcdir)/pathconfig.ui
	rm -rf pathconfig.h;
	$(UIC) $(srcdir)/pathconfig.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> pathconfig.h ;
pathconfig.moc: pathconfig.h
	$(MOC) pathconfig.h -o pathconfig.moc

miscconfig.cpp: $(srcdir)/miscconfig.ui miscconfig.h miscconfig.moc
	rm -f miscconfig.cpp
	echo '#include <kdialog.h>' > miscconfig.cpp
	echo '#include <klocale.h>' >> miscconfig.cpp
	$(UIC) -tr ${UIC_TR} -i miscconfig.h $(srcdir)/miscconfig.ui > miscconfig.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" miscconfig.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_miscconfig,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> miscconfig.cpp ;\
	rm -f miscconfig.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "miscconfig.moc"' >> miscconfig.cpp; else rm -f miscconfig.cpp ; exit $$ret ; fi

miscconfig.h: $(srcdir)/miscconfig.ui
	rm -rf miscconfig.h;
	$(UIC) $(srcdir)/miscconfig.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> miscconfig.h ;
miscconfig.moc: miscconfig.h
	$(MOC) miscconfig.h -o miscconfig.moc

configwizard.cpp: $(srcdir)/configwizard.ui configwizard.h configwizard.moc
	rm -f configwizard.cpp
	echo '#include <kdialog.h>' > configwizard.cpp
	echo '#include <klocale.h>' >> configwizard.cpp
	$(UIC) -tr ${UIC_TR} -i configwizard.h $(srcdir)/configwizard.ui > configwizard.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" configwizard.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_configwizard,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> configwizard.cpp ;\
	rm -f configwizard.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "configwizard.moc"' >> configwizard.cpp; else rm -f configwizard.cpp ; exit $$ret ; fi

configwizard.h: $(srcdir)/configwizard.ui
	rm -rf configwizard.h;
	$(UIC) $(srcdir)/configwizard.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> configwizard.h ;
configwizard.moc: configwizard.h
	$(MOC) configwizard.h -o configwizard.moc
