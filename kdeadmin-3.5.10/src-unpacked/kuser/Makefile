# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# kuser/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/kdeadmin
pkglibdir = $(libdir)/kdeadmin
pkgincludedir = $(includedir)/kdeadmin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = kuser$(EXEEXT)
subdir = kuser
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in AUTHORS ChangeLog THANKS TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kuser_OBJECTS = mainWidget.$(OBJEXT) editGroup.$(OBJEXT) \
	kuservw.$(OBJEXT) kgroupvw.$(OBJEXT) delUser.$(OBJEXT) \
	kuser.$(OBJEXT) kgroup.$(OBJEXT) main.$(OBJEXT) \
	mainView.$(OBJEXT) propdlg.$(OBJEXT) misc.$(OBJEXT) \
	pwddlg.$(OBJEXT) addUser.$(OBJEXT) editDefaults.$(OBJEXT) \
	kglobal.$(OBJEXT) sid.$(OBJEXT) kuserfiles.$(OBJEXT) \
	kgroupfiles.$(OBJEXT) kuserldap.$(OBJEXT) kgroupldap.$(OBJEXT) \
	kusersystem.$(OBJEXT) kgroupsystem.$(OBJEXT) \
	selectconn.$(OBJEXT) sha1.$(OBJEXT)
#>- kuser_OBJECTS = $(am_kuser_OBJECTS)
#>+ 12
kuser_final_OBJECTS = kuser.all_cpp.o 
kuser_nofinal_OBJECTS = mainWidget.$(OBJEXT) editGroup.$(OBJEXT) \
	kuservw.$(OBJEXT) kgroupvw.$(OBJEXT) delUser.$(OBJEXT) \
	kuser.$(OBJEXT) kgroup.$(OBJEXT) main.$(OBJEXT) \
	mainView.$(OBJEXT) propdlg.$(OBJEXT) misc.$(OBJEXT) \
	pwddlg.$(OBJEXT) addUser.$(OBJEXT) editDefaults.$(OBJEXT) \
	kglobal.$(OBJEXT) sid.$(OBJEXT) kuserfiles.$(OBJEXT) \
	kgroupfiles.$(OBJEXT) kuserldap.$(OBJEXT) kgroupldap.$(OBJEXT) \
	kusersystem.$(OBJEXT) kgroupsystem.$(OBJEXT) \
	selectconn.$(OBJEXT) sha1.$(OBJEXT) filessettings.$(OBJEXT) generalsettings.$(OBJEXT) ldapsettings.$(OBJEXT) ldapsamba.$(OBJEXT) passwordpolicy.$(OBJEXT) kuserprefs.$(OBJEXT)
kuser_OBJECTS = $(kuser_nofinal_OBJECTS)
#kuser_OBJECTS = $(kuser_final_OBJECTS)
am__DEPENDENCIES_1 =
kuser_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#>- kuser_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kuser_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kuser_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kuser_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kuser_SOURCES)
DIST_SOURCES = $(kuser_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_kcfg_DATA) $(rc_DATA) $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -DNDEBUG -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./kcron/configure.in.in $(top_srcdir)/./kdat/configure.in.in $(top_srcdir)/./knetworkconf/backends/configure.in.in $(top_srcdir)/./ksysv/configure.in.in $(top_srcdir)/./kuser/configure.in.in $(top_srcdir)/./lilo-config/configure.in.in $(top_srcdir)/./lilo-config/qt/configure.in.in
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -DNDEBUG -DNO_DEBUG -O2 -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOPIDLNG = /usr/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
F77 = 
FFLAGS = 
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_GCC_VISIBILITY = 0
INSTALL = /usr/bin/ginstall -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/bin/kconfig_compiler
KDECONFIG = /usr/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_INCLUDES = 
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
KU_FIRSTGID = 
KU_FIRSTUID = 
KU_HOMEDIR_PERM = 
KU_MAILBOX_GID = 
KU_MAILBOX_PERM = 
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = 
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSHADOW = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guest/botva/src/kdeadmin-3.5.10/admin/missing --run makeinfo
MAKEKDEWIDGETS = /usr/bin/makekdewidgets
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MKDIR_P = /usr/bin/mkdir -p
MOC = /usr/lib/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
PACKAGE = kdeadmin
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PAMLIBS = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt3/include
QT_LDFLAGS = -L/usr/lib/qt3/lib
RANLIB = ranlib
SETUIDFLAGS = -m 4755
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  doc kcron kdat kfile-plugins knetworkconf kpackage ksysv kuser lilo-config secpolicy
UIC = /usr/lib/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R7/include
X_LDFLAGS = -L/usr/X11R7/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/guest/botva/src/kdeadmin-3.5.10/kuser
abs_srcdir = /home/guest/botva/src/kdeadmin-3.5.10/kuser
abs_top_builddir = /home/guest/botva/src/kdeadmin-3.5.10
abs_top_srcdir = /home/guest/botva/src/kdeadmin-3.5.10
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
all_includes = -I/usr/lib/qt3/include -I/usr/X11R7/include 
all_libraries = -L/usr/lib -L/usr/lib/qt3/lib -L/usr/X11R7/lib   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guest/botva/src/kdeadmin-3.5.10/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/HTML
kde_libs_prefix = /usr
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/lib/qt3/include
qt_libraries = /usr/lib/qt3/lib
sbindir = ${exec_prefix}/sbin
scriptsdir = /usr/share/apps/knetworkconf/backends
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_builddir = ..
top_srcdir = ..
x_includes = /usr/X11R7/include
x_libraries = /usr/X11R7/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
INCLUDES = -I.. -I$(top_srcdir)/kuser $(all_includes)

# May be -D_XU_QUOTA -D_XU_SHADOW
#AM_CXXFLAGS = 	$(KU_NIS) $(KU_QUOTA) $(QUOTACTL) -D_KU_DEBUG
kuser_LDFLAGS = $(all_libraries) $(KDE_RPATH)
kuser_LDADD = $(LIB_KDEUI) $(LIBCRYPT) $(LIBSHADOW) $(LIBGEN) $(LIB_KABC) -lkntlm

####### Files
#>- kuser_SOURCES = \
#>- 	mainWidget.cpp editGroup.cpp kuservw.cpp \
#>- 	kgroupvw.cpp delUser.cpp \
#>- 	kuser.cpp kgroup.cpp main.cpp mainView.cpp \
#>- 	propdlg.cpp misc.cpp pwddlg.cpp \
#>- 	addUser.cpp editDefaults.cpp \
#>- 	kglobal.cpp sid.cpp\
#>- 	kuserfiles.cpp kgroupfiles.cpp kuserldap.cpp kgroupldap.cpp \
#>- 	kusersystem.cpp kgroupsystem.cpp selectconn.cpp\
#>- 	sha1.cpp kuserprefs.kcfgc \
#>- 	filessettings.ui generalsettings.ui ldapsettings.ui ldapsamba.ui passwordpolicy.ui
#>+ 11
kuser_SOURCES=\
	mainWidget.cpp editGroup.cpp kuservw.cpp \
	kgroupvw.cpp delUser.cpp \
	kuser.cpp kgroup.cpp main.cpp mainView.cpp \
	propdlg.cpp misc.cpp pwddlg.cpp \
	addUser.cpp editDefaults.cpp \
	kglobal.cpp sid.cpp\
	kuserfiles.cpp kgroupfiles.cpp kuserldap.cpp kgroupldap.cpp \
	kusersystem.cpp kgroupsystem.cpp selectconn.cpp\
	sha1.cpp  \
	     filessettings.cpp generalsettings.cpp ldapsettings.cpp ldapsamba.cpp passwordpolicy.cpp kuserprefs.cpp

#>- kuser_METASOURCES = AUTO

# the following are only useful, if you want to use "make dist"
noinst_HEADERS = \
	mainWidget.h editGroup.h kuservw.h \
	kuser.h mainView.h kgroup.h delUser.h \
	kgroupvw.h propdlg.h globals.h misc.h \
	pwddlg.h addUser.h \
	editDefaults.h selectconn.h sha1.h sid.h kglobal_.h \
	kusersystem.h kgroupsystem.h kuserfiles.h kgroupfiles.h kuserldap.h kgroupldap.h

kde_kcfg_DATA = kuser.kcfg
EDITABLE = $(noinst_HEADERS) $(kuser_SOURCES) Makefile.am
EXTRA_DIST = README AUTHORS THANKS kuser.desktop
rcdir = $(kde_datadir)/kuser
rc_DATA = kuserui.rc

# the subdirs we have. Better would be to include pic here too
SUBDIRS = pic toolbar icon
xdg_apps_DATA = kuser.desktop
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kuser/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kuser/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kuser/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kuser/Makefile
	cd $(top_srcdir) && perl admin/am_edit kuser/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kuser$(EXEEXT): $(kuser_OBJECTS) $(kuser_DEPENDENCIES) 
	@rm -f kuser$(EXEEXT)
	$(kuser_LINK) $(kuser_OBJECTS) $(kuser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/addUser.Po
include ./$(DEPDIR)/delUser.Po
include ./$(DEPDIR)/editDefaults.Po
include ./$(DEPDIR)/editGroup.Po
include ./$(DEPDIR)/kglobal.Po
include ./$(DEPDIR)/kgroup.Po
include ./$(DEPDIR)/kgroupfiles.Po
include ./$(DEPDIR)/kgroupldap.Po
include ./$(DEPDIR)/kgroupsystem.Po
include ./$(DEPDIR)/kgroupvw.Po
include ./$(DEPDIR)/kuser.Po
include ./$(DEPDIR)/kuserfiles.Po
include ./$(DEPDIR)/kuserldap.Po
include ./$(DEPDIR)/kusersystem.Po
include ./$(DEPDIR)/kuservw.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mainView.Po
include ./$(DEPDIR)/mainWidget.Po
include ./$(DEPDIR)/misc.Po
include ./$(DEPDIR)/propdlg.Po
include ./$(DEPDIR)/pwddlg.Po
include ./$(DEPDIR)/selectconn.Po
include ./$(DEPDIR)/sha1.Po
include ./$(DEPDIR)/sid.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_kcfgdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_kcfgdir)"
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_kcfgDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  $(kde_kcfgDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-kcfg clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-kde_kcfgDATA install-rcDATA \
	install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-kde_kcfgDATA \
	uninstall-rcDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kde_kcfgDATA install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-rcDATA \
	install-strip install-xdg_appsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-kde_kcfgDATA uninstall-rcDATA \
	uninstall-xdg_appsDATA


edit::
	xemacs -fn "-edict-fixed-medium-r-*-*-*-120-*-*-*-*-koi8-r" -geometry 142x41+0+0 $(EDITABLE)&

messages: rc.cpp
	$(XGETTEXT) *.cpp *.h -o $(podir)/kuser.pot

pot::
	/usr/local/bin/xgettext -ki18n -o kuser.pot -p ../po -d kuser -C -n *.cpp
	/usr/local/bin/msgmerge --strict -v -o $(podir)/kuser.pot
	mv $(podir)/ru/kuser.po
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
mainWidget.moc: $(srcdir)/mainWidget.h
	$(MOC) $(srcdir)/mainWidget.h -o mainWidget.moc

#>+ 2
mocs: mainWidget.moc

#>+ 3
addUser.moc: $(srcdir)/addUser.h
	$(MOC) $(srcdir)/addUser.h -o addUser.moc

#>+ 2
mocs: addUser.moc

#>+ 3
propdlg.moc: $(srcdir)/propdlg.h
	$(MOC) $(srcdir)/propdlg.h -o propdlg.moc

#>+ 2
mocs: propdlg.moc

#>+ 3
pwddlg.moc: $(srcdir)/pwddlg.h
	$(MOC) $(srcdir)/pwddlg.h -o pwddlg.moc

#>+ 2
mocs: pwddlg.moc

#>+ 3
editGroup.moc: $(srcdir)/editGroup.h
	$(MOC) $(srcdir)/editGroup.h -o editGroup.moc

#>+ 2
mocs: editGroup.moc

#>+ 3
kuserldap.moc: $(srcdir)/kuserldap.h
	$(MOC) $(srcdir)/kuserldap.h -o kuserldap.moc

#>+ 2
mocs: kuserldap.moc

#>+ 3
kgroupldap.moc: $(srcdir)/kgroupldap.h
	$(MOC) $(srcdir)/kgroupldap.h -o kgroupldap.moc

#>+ 2
mocs: kgroupldap.moc

#>+ 3
delUser.moc: $(srcdir)/delUser.h
	$(MOC) $(srcdir)/delUser.h -o delUser.moc

#>+ 2
mocs: delUser.moc

#>+ 3
mainView.moc: $(srcdir)/mainView.h
	$(MOC) $(srcdir)/mainView.h -o mainView.moc

#>+ 2
mocs: mainView.moc

#>+ 3
selectconn.moc: $(srcdir)/selectconn.h
	$(MOC) $(srcdir)/selectconn.h -o selectconn.moc

#>+ 2
mocs: selectconn.moc

#>+ 3
kgroupvw.moc: $(srcdir)/kgroupvw.h
	$(MOC) $(srcdir)/kgroupvw.h -o kgroupvw.moc

#>+ 2
mocs: kgroupvw.moc

#>+ 3
editDefaults.moc: $(srcdir)/editDefaults.h
	$(MOC) $(srcdir)/editDefaults.h -o editDefaults.moc

#>+ 2
mocs: editDefaults.moc

#>+ 3
kuservw.moc: $(srcdir)/kuservw.h
	$(MOC) $(srcdir)/kuservw.h -o kuservw.moc

#>+ 2
mocs: kuservw.moc

#>+ 3
clean-metasources:
	-rm -f  mainWidget.moc addUser.moc propdlg.moc pwddlg.moc editGroup.moc kuserldap.moc kgroupldap.moc delUser.moc mainView.moc selectconn.moc kgroupvw.moc editDefaults.moc kuservw.moc

#>+ 2
KDE_DIST=kuserprefs.kcfgc generalsettings.ui passwordpolicy.ui ldapsamba.ui filessettings.ui configure.in.in stamp-h.in kuserui.rc kuser.kcfg Makefile.in ldapsettings.ui Makefile.am 

#>+ 8
clean-ui:
	-rm -f \
	filessettings.cpp filessettings.h filessettings.moc \
	generalsettings.cpp generalsettings.h generalsettings.moc \
	ldapsettings.cpp ldapsettings.h ldapsettings.moc \
	ldapsamba.cpp ldapsamba.h ldapsamba.moc \
	passwordpolicy.cpp passwordpolicy.h passwordpolicy.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	kuserprefs.cpp kuserprefs.h 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kuser/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kuser/Makefile
	cd $(top_srcdir) && perl admin/am_edit kuser/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kuser.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/mainWidget.cpp $(srcdir)/editGroup.cpp $(srcdir)/kuservw.cpp $(srcdir)/kgroupvw.cpp $(srcdir)/delUser.cpp $(srcdir)/kuser.cpp $(srcdir)/kgroup.cpp $(srcdir)/main.cpp $(srcdir)/mainView.cpp $(srcdir)/propdlg.cpp $(srcdir)/misc.cpp $(srcdir)/pwddlg.cpp $(srcdir)/addUser.cpp $(srcdir)/editDefaults.cpp $(srcdir)/kglobal.cpp $(srcdir)/sid.cpp $(srcdir)/kuserfiles.cpp $(srcdir)/kgroupfiles.cpp $(srcdir)/kuserldap.cpp $(srcdir)/kgroupldap.cpp $(srcdir)/kusersystem.cpp $(srcdir)/kgroupsystem.cpp $(srcdir)/selectconn.cpp $(srcdir)/sha1.cpp filessettings.cpp generalsettings.cpp ldapsettings.cpp ldapsamba.cpp passwordpolicy.cpp kuserprefs.cpp  mainWidget.moc addUser.moc generalsettings.moc pwddlg.moc filessettings.moc propdlg.moc ldapsamba.moc kgroupvw.moc editDefaults.moc ldapsettings.moc editGroup.moc kuserldap.moc kgroupldap.moc delUser.moc mainView.moc selectconn.moc passwordpolicy.moc kuservw.moc
	@echo 'creating kuser.all_cpp.cpp ...'; \
	rm -f kuser.all_cpp.files kuser.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kuser.all_cpp.final; \
	for file in mainWidget.cpp editGroup.cpp kuservw.cpp kgroupvw.cpp delUser.cpp kuser.cpp kgroup.cpp main.cpp mainView.cpp propdlg.cpp misc.cpp pwddlg.cpp addUser.cpp editDefaults.cpp kglobal.cpp sid.cpp kuserfiles.cpp kgroupfiles.cpp kuserldap.cpp kgroupldap.cpp kusersystem.cpp kgroupsystem.cpp selectconn.cpp sha1.cpp filessettings.cpp generalsettings.cpp ldapsettings.cpp ldapsamba.cpp passwordpolicy.cpp kuserprefs.cpp ; do \
	  echo "#include \"$$file\"" >> kuser.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kuser.all_cpp.final; \
	done; \
	cat kuser.all_cpp.final kuser.all_cpp.files > kuser.all_cpp.cpp; \
	rm -f kuser.all_cpp.final kuser.all_cpp.files

#>+ 3
clean-final:
	-rm -f kuser.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kuser_OBJECTS="$(kuser_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kuser_OBJECTS="$(kuser_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kuser_OBJECTS="$(kuser_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kuser_OBJECTS="$(kuser_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 53
delUser.lo: delUser.moc 
editGroup.o: editGroup.moc 
$(srcdir)/main.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
editDefaults.o: editDefaults.moc 
$(srcdir)/propdlg.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
kgroupldap.lo: kgroupldap.moc 
kgroupldap.o: kgroupldap.moc 
$(srcdir)/sha1.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
kgroupvw.o: kgroupvw.moc 
$(srcdir)/delUser.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/mainWidget.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
kuserldap.o: kuserldap.moc 
editDefaults.lo: editDefaults.moc 
$(srcdir)/kgroupfiles.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/kgroupldap.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/kglobal.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
addUser.lo: addUser.moc 
propdlg.o: propdlg.moc 
delUser.o: delUser.moc 
nmcheck-am: nmcheck
$(srcdir)/kuserfiles.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
pwddlg.lo: pwddlg.moc 
kuserldap.lo: kuserldap.moc 
$(srcdir)/kuservw.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/addUser.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
kgroupvw.lo: kgroupvw.moc 
mainView.o: mainView.moc 
$(srcdir)/kusersystem.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/misc.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/editDefaults.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/kgroupvw.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
kuservw.o: kuservw.moc 
$(srcdir)/selectconn.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
mainWidget.o: mainWidget.moc 
$(srcdir)/sid.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
editGroup.lo: editGroup.moc 
pwddlg.o: pwddlg.moc 
mainWidget.lo: mainWidget.moc 
$(srcdir)/mainView.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/kgroupsystem.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/pwddlg.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
nmcheck: 
$(srcdir)/kuser.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
selectconn.lo: selectconn.moc 
propdlg.lo: propdlg.moc 
mainView.lo: mainView.moc 
$(srcdir)/kuserldap.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
$(srcdir)/kgroup.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
addUser.o: addUser.moc 
selectconn.o: selectconn.moc 
$(srcdir)/editGroup.cpp: filessettings.h generalsettings.h ldapsettings.h ldapsamba.h passwordpolicy.h kuserprefs.h 
kuservw.lo: kuservw.moc 

#>+ 81
ldapsettings.cpp: $(srcdir)/ldapsettings.ui ldapsettings.h ldapsettings.moc
	rm -f ldapsettings.cpp
	echo '#include <kdialog.h>' > ldapsettings.cpp
	echo '#include <klocale.h>' >> ldapsettings.cpp
	$(UIC) -tr ${UIC_TR} -i ldapsettings.h $(srcdir)/ldapsettings.ui > ldapsettings.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" ldapsettings.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_ldapsettings,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> ldapsettings.cpp ;\
	rm -f ldapsettings.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "ldapsettings.moc"' >> ldapsettings.cpp; else rm -f ldapsettings.cpp ; exit $$ret ; fi

ldapsettings.h: $(srcdir)/ldapsettings.ui
	rm -rf ldapsettings.h;
	$(UIC) $(srcdir)/ldapsettings.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> ldapsettings.h ;
ldapsettings.moc: ldapsettings.h
	$(MOC) ldapsettings.h -o ldapsettings.moc

generalsettings.cpp: $(srcdir)/generalsettings.ui generalsettings.h generalsettings.moc
	rm -f generalsettings.cpp
	echo '#include <kdialog.h>' > generalsettings.cpp
	echo '#include <klocale.h>' >> generalsettings.cpp
	$(UIC) -tr ${UIC_TR} -i generalsettings.h $(srcdir)/generalsettings.ui > generalsettings.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" generalsettings.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_generalsettings,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> generalsettings.cpp ;\
	rm -f generalsettings.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "generalsettings.moc"' >> generalsettings.cpp; else rm -f generalsettings.cpp ; exit $$ret ; fi

generalsettings.h: $(srcdir)/generalsettings.ui
	rm -rf generalsettings.h;
	$(UIC) $(srcdir)/generalsettings.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> generalsettings.h ;
generalsettings.moc: generalsettings.h
	$(MOC) generalsettings.h -o generalsettings.moc

passwordpolicy.cpp: $(srcdir)/passwordpolicy.ui passwordpolicy.h passwordpolicy.moc
	rm -f passwordpolicy.cpp
	echo '#include <kdialog.h>' > passwordpolicy.cpp
	echo '#include <klocale.h>' >> passwordpolicy.cpp
	$(UIC) -tr ${UIC_TR} -i passwordpolicy.h $(srcdir)/passwordpolicy.ui > passwordpolicy.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" passwordpolicy.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_passwordpolicy,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> passwordpolicy.cpp ;\
	rm -f passwordpolicy.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "passwordpolicy.moc"' >> passwordpolicy.cpp; else rm -f passwordpolicy.cpp ; exit $$ret ; fi

passwordpolicy.h: $(srcdir)/passwordpolicy.ui
	rm -rf passwordpolicy.h;
	$(UIC) $(srcdir)/passwordpolicy.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> passwordpolicy.h ;
passwordpolicy.moc: passwordpolicy.h
	$(MOC) passwordpolicy.h -o passwordpolicy.moc

ldapsamba.cpp: $(srcdir)/ldapsamba.ui ldapsamba.h ldapsamba.moc
	rm -f ldapsamba.cpp
	echo '#include <kdialog.h>' > ldapsamba.cpp
	echo '#include <klocale.h>' >> ldapsamba.cpp
	$(UIC) -tr ${UIC_TR} -i ldapsamba.h $(srcdir)/ldapsamba.ui > ldapsamba.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" ldapsamba.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_ldapsamba,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> ldapsamba.cpp ;\
	rm -f ldapsamba.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "ldapsamba.moc"' >> ldapsamba.cpp; else rm -f ldapsamba.cpp ; exit $$ret ; fi

ldapsamba.h: $(srcdir)/ldapsamba.ui
	rm -rf ldapsamba.h;
	$(UIC) $(srcdir)/ldapsamba.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> ldapsamba.h ;
ldapsamba.moc: ldapsamba.h
	$(MOC) ldapsamba.h -o ldapsamba.moc

filessettings.cpp: $(srcdir)/filessettings.ui filessettings.h filessettings.moc
	rm -f filessettings.cpp
	echo '#include <kdialog.h>' > filessettings.cpp
	echo '#include <klocale.h>' >> filessettings.cpp
	$(UIC) -tr ${UIC_TR} -i filessettings.h $(srcdir)/filessettings.ui > filessettings.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" filessettings.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_filessettings,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> filessettings.cpp ;\
	rm -f filessettings.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "filessettings.moc"' >> filessettings.cpp; else rm -f filessettings.cpp ; exit $$ret ; fi

filessettings.h: $(srcdir)/filessettings.ui
	rm -rf filessettings.h;
	$(UIC) $(srcdir)/filessettings.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> filessettings.h ;
filessettings.moc: filessettings.h
	$(MOC) filessettings.h -o filessettings.moc

kuserprefs.cpp: kuserprefs.h
kuserprefs.h: $(srcdir)/kuser.kcfg $(srcdir)/kuserprefs.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/kuser.kcfg $(srcdir)/kuserprefs.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f kuserprefs.h ; exit $$ret ;  fi

