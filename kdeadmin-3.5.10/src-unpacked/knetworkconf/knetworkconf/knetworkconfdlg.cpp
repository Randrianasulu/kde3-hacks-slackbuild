#include <kdialog.h>
#include <klocale.h>
/****************************************************************************
** Form implementation generated from reading ui file './knetworkconfdlg.ui'
**
** Created: Вс фев 1 00:56:21 2015
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "knetworkconfdlg.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qtabwidget.h>
#include <qlabel.h>
#include <qheader.h>
#include <klistview.h>
#include <kpushbutton.h>
#include <qgroupbox.h>
#include <klineedit.h>
#include <kcombobox.h>
#include <klistbox.h>
#include <qbuttongroup.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "./knetworkconfdlg.ui.h"
static const unsigned char img0_knetworkconfdlg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x04,
    0x1b, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0x9d, 0x95, 0x61, 0x48, 0xa3,
    0x75, 0x1c, 0xc7, 0xbf, 0xf3, 0xec, 0xb6, 0xbb, 0x14, 0x9e, 0x81, 0x86,
    0xc2, 0xf5, 0x62, 0x90, 0x91, 0x2b, 0x38, 0xf6, 0x90, 0x84, 0x17, 0x05,
    0x8b, 0x04, 0x3d, 0x7b, 0x95, 0x04, 0xa5, 0xf5, 0x22, 0xf5, 0x45, 0x9d,
    0x16, 0xc8, 0xcd, 0xa2, 0xd4, 0x5e, 0x94, 0x41, 0x74, 0x8b, 0x38, 0x72,
    0x1d, 0xd2, 0xf6, 0x22, 0x72, 0x08, 0xea, 0x2c, 0x74, 0xd3, 0x38, 0xce,
    0x5d, 0x4c, 0x9c, 0xa0, 0xee, 0x91, 0x3a, 0xa6, 0x71, 0xca, 0x1e, 0xd2,
    0x63, 0xcf, 0xdc, 0xd6, 0x9e, 0xe7, 0x6a, 0xe9, 0xd2, 0xe9, 0xb7, 0x17,
    0x53, 0x4f, 0x42, 0x1d, 0xf5, 0x83, 0x87, 0xdf, 0x9b, 0x87, 0x2f, 0x9f,
    0xe7, 0xfb, 0xf9, 0x3f, 0xcf, 0x03, 0x92, 0x38, 0xee, 0x02, 0x80, 0xbe,
    0xeb, 0x7d, 0x4f, 0x93, 0x0c, 0x31, 0xc2, 0x0c, 0xc9, 0xcc, 0x89, 0x7b,
    0x8d, 0x19, 0x92, 0x5b, 0xa1, 0x60, 0xc8, 0xcf, 0x9b, 0xac, 0x00, 0x80,
    0x63, 0x43, 0x0f, 0x82, 0xe9, 0xe6, 0xab, 0xd1, 0x68, 0x2a, 0x45, 0x37,
    0xf9, 0xc9, 0x50, 0x84, 0x24, 0xe9, 0xf4, 0xa7, 0x72, 0x3b, 0x90, 0xdb,
    0xd7, 0xc6, 0x22, 0xa4, 0x9b, 0x74, 0x8e, 0x45, 0x48, 0x32, 0xd6, 0xf5,
    0x41, 0x57, 0x4d, 0xde, 0xe0, 0x11, 0xf7, 0x48, 0x23, 0x49, 0xf5, 0x72,
    0xcf, 0x0c, 0x43, 0x73, 0xe4, 0xcb, 0xd7, 0xc9, 0x54, 0x94, 0x6c, 0x76,
    0x93, 0xa9, 0x38, 0xd9, 0xd8, 0x4f, 0x86, 0x7f, 0x21, 0xab, 0x3b, 0x43,
    0xdc, 0xbc, 0x4b, 0x72, 0x89, 0x1b, 0xf4, 0xb3, 0x16, 0x00, 0x0a, 0x70,
    0xca, 0x34, 0xd4, 0x35, 0x40, 0x5e, 0x57, 0xb0, 0x95, 0xbe, 0x84, 0xd6,
    0x41, 0x09, 0x6a, 0x1a, 0x78, 0xfd, 0x3b, 0x19, 0x5a, 0x72, 0x7f, 0x6b,
    0x40, 0xeb, 0xa0, 0x04, 0x2d, 0x2d, 0xa2, 0x75, 0x50, 0x02, 0x2a, 0x01,
    0xdb, 0xa4, 0x0d, 0x79, 0x83, 0x3d, 0xb7, 0x3c, 0x30, 0x3d, 0x5a, 0x0e,
    0x4d, 0xf3, 0x41, 0x79, 0x4a, 0x84, 0x96, 0x94, 0xd0, 0x55, 0x6d, 0x82,
    0x92, 0x04, 0xb6, 0xaa, 0x4c, 0x50, 0x92, 0x12, 0xba, 0xaa, 0x44, 0x28,
    0xeb, 0x3e, 0xf4, 0x3e, 0x27, 0x42, 0x9a, 0x97, 0x60, 0xaf, 0xb3, 0xe7,
    0x0f, 0x6e, 0xa8, 0x6d, 0x80, 0xb2, 0xae, 0xc2, 0x60, 0xa8, 0x47, 0xe6,
    0x47, 0x1f, 0x54, 0x4d, 0x44, 0xeb, 0x60, 0x10, 0x99, 0x34, 0x10, 0x1b,
    0x0e, 0x22, 0xa3, 0x89, 0x68, 0x1d, 0xf6, 0x03, 0xd9, 0x7a, 0xb4, 0x4f,
    0xfa, 0x21, 0x56, 0x89, 0xe8, 0x9e, 0xec, 0x7e, 0x10, 0x70, 0x8a, 0xfd,
    0x6d, 0x92, 0x0c, 0xdf, 0x65, 0x6e, 0x72, 0xfe, 0x38, 0x30, 0x11, 0x62,
    0x38, 0x40, 0x5a, 0x3a, 0xc9, 0xca, 0x51, 0xb2, 0xec, 0x95, 0x29, 0x46,
    0x03, 0x24, 0x83, 0xff, 0xea, 0xb8, 0xad, 0xa4, 0xed, 0x31, 0x45, 0x51,
    0x4d, 0x98, 0x85, 0xbe, 0x77, 0x58, 0xd6, 0xc3, 0x04, 0xbd, 0xeb, 0xb6,
    0xaa, 0x87, 0x09, 0x0f, 0xb9, 0xa6, 0x55, 0x98, 0x2b, 0x00, 0xfb, 0xb8,
    0x0c, 0xcc, 0x02, 0xae, 0x71, 0x19, 0x4d, 0x75, 0x22, 0x3e, 0x9d, 0x0d,
    0xa2, 0xbc, 0x04, 0x10, 0xe6, 0x25, 0x18, 0x4b, 0x5e, 0x80, 0x6d, 0x5a,
    0x02, 0xaa, 0x1f, 0x74, 0xfc, 0xff, 0xec, 0xef, 0x3f, 0x41, 0x78, 0x89,
    0x24, 0x99, 0xa5, 0xc4, 0x2c, 0xc9, 0xdd, 0xa9, 0x89, 0xa9, 0x08, 0x27,
    0xf8, 0x3c, 0x00, 0xe8, 0x00, 0x80, 0x29, 0x36, 0xca, 0x69, 0xc5, 0xd1,
    0xf2, 0x65, 0xb9, 0xa0, 0x41, 0x82, 0x50, 0x22, 0xe2, 0x5c, 0xa1, 0x0c,
    0x83, 0xc1, 0x84, 0x4c, 0x56, 0x06, 0xb2, 0x26, 0xa8, 0x9a, 0x04, 0x4d,
    0x13, 0x61, 0x29, 0x93, 0xe0, 0xfe, 0x48, 0x84, 0x6f, 0xd2, 0x87, 0xfa,
    0xba, 0x7a, 0xfa, 0xc6, 0x7d, 0xf1, 0x7a, 0xa5, 0x7e, 0xc6, 0x91, 0x75,
    0x28, 0xaa, 0xa6, 0x2e, 0x2f, 0xce, 0x2f, 0x0e, 0x8d, 0xfe, 0x30, 0x9a,
    0xc8, 0x11, 0x0f, 0xe5, 0x88, 0x2d, 0x6f, 0x7a, 0x59, 0xe6, 0x22, 0x2d,
    0x1d, 0x21, 0xce, 0x04, 0xc8, 0xea, 0x1e, 0xd2, 0x1a, 0x20, 0x2d, 0x9d,
    0x21, 0x7a, 0x47, 0x49, 0xe1, 0x25, 0x2f, 0x23, 0x7e, 0x32, 0x24, 0x85,
    0x73, 0xc8, 0x39, 0xf2, 0xad, 0xd0, 0x5c, 0xc8, 0xcb, 0x39, 0x56, 0x59,
    0x5f, 0xb4, 0xea, 0x49, 0xea, 0x0e, 0x3b, 0xfe, 0xcf, 0xf6, 0x2d, 0x66,
    0x04, 0xa7, 0x83, 0x40, 0x05, 0x20, 0xcb, 0xf2, 0x19, 0xb1, 0x4a, 0x34,
    0x76, 0x8f, 0x77, 0x9f, 0xad, 0xac, 0xa8, 0xdc, 0xd6, 0xe9, 0x74, 0x3c,
    0xec, 0xd8, 0x3b, 0xe6, 0x6d, 0x24, 0xa9, 0x5a, 0x3b, 0x66, 0xe8, 0x1d,
    0x22, 0x2d, 0x1d, 0x39, 0x52, 0x6b, 0x4f, 0x98, 0xa1, 0xe3, 0xed, 0xef,
    0x71, 0x8d, 0xaa, 0xd3, 0xe5, 0xf4, 0x73, 0x89, 0x5f, 0x5d, 0x7d, 0xe7,
    0x6a, 0x4d, 0xb8, 0x36, 0x5c, 0x7c, 0xf4, 0xa8, 0xe6, 0x3a, 0xde, 0x64,
    0x93, 0xa2, 0xa9, 0x7d, 0xed, 0xdf, 0x18, 0x05, 0x39, 0x2d, 0xa1, 0x5c,
    0x10, 0x61, 0x28, 0x92, 0x61, 0x28, 0xcc, 0x75, 0x9c, 0xc9, 0x1c, 0xe9,
    0xf8, 0x82, 0x04, 0xf7, 0x87, 0x62, 0xd6, 0xfe, 0xb9, 0xfd, 0xd7, 0x58,
    0x4c, 0xfb, 0x58, 0x28, 0x11, 0x96, 0xba, 0x2f, 0xd8, 0xb6, 0x7a, 0xef,
    0x39, 0xfe, 0x34, 0x14, 0xb6, 0x25, 0x3b, 0xdf, 0x3f, 0x42, 0x3c, 0xe0,
    0x1e, 0xb8, 0x4c, 0x72, 0x8d, 0x71, 0xee, 0x92, 0xcc, 0x32, 0xca, 0xdd,
    0xa3, 0xe7, 0x76, 0xdf, 0xfe, 0x1e, 0x25, 0xee, 0x91, 0xe4, 0xd4, 0xcd,
    0xa9, 0x3d, 0x6e, 0x72, 0x7b, 0xe0, 0xdb, 0x91, 0x75, 0xa6, 0x28, 0x79,
    0x27, 0xa6, 0x16, 0x28, 0xf1, 0xb3, 0xc6, 0xd7, 0x9a, 0xcf, 0x1d, 0x64,
    0x9e, 0x01, 0x00, 0xcb, 0x45, 0x8b, 0x96, 0x88, 0x27, 0xee, 0x9b, 0x9f,
    0x30, 0xff, 0xe6, 0x19, 0xf3, 0xfc, 0x6e, 0x7e, 0xc6, 0x5c, 0x2e, 0x2f,
    0xcb, 0x7a, 0x63, 0x85, 0x11, 0x4b, 0x77, 0x96, 0x60, 0x7e, 0xb2, 0x94,
    0x9e, 0xef, 0x3d, 0x7f, 0x9b, 0xef, 0x98, 0xe3, 0xf6, 0x19, 0xfb, 0x8e,
    0x12, 0x55, 0xfe, 0xf2, 0x07, 0xfc, 0xc9, 0xf6, 0x7b, 0x6f, 0x6d, 0xd8,
    0x7e, 0xb2, 0xad, 0xc6, 0xe2, 0x89, 0xa4, 0xcb, 0xdb, 0xbf, 0xa2, 0x25,
    0x92, 0xf3, 0x2b, 0x91, 0x95, 0xec, 0x21, 0x31, 0x83, 0xd4, 0x45, 0x5d,
    0x51, 0xbd, 0xb3, 0xdf, 0x69, 0x25, 0x39, 0xcd, 0x78, 0xee, 0x8d, 0x63,
    0x9c, 0x79, 0xed, 0x9f, 0xf4, 0x75, 0x2c, 0x00, 0x00, 0xdd, 0x25, 0x1d,
    0xdd, 0x9a, 0x7b, 0xa7, 0xa5, 0xa8, 0x05, 0xd2, 0xa2, 0xa4, 0x47, 0x29,
    0x74, 0xca, 0xba, 0x02, 0x94, 0x02, 0xb2, 0x2c, 0xe7, 0xb7, 0x9f, 0x6f,
    0xae, 0xbc, 0x7d, 0xa5, 0x98, 0x12, 0x6b, 0x9c, 0xfd, 0xce, 0x3e, 0xc6,
    0x39, 0x4d, 0x3f, 0xef, 0xf3, 0x0f, 0x6e, 0x9c, 0x66, 0xff, 0x24, 0x62,
    0xdd, 0xc1, 0x0d, 0xd7, 0xbe, 0x70, 0x16, 0xd8, 0xd0, 0xf2, 0x88, 0xbb,
    0xcc, 0x73, 0xbe, 0x29, 0xd6, 0x50, 0x6c, 0xcf, 0x3a, 0x9e, 0xb5, 0xbd,
    0xd7, 0xd6, 0xee, 0xf8, 0xda, 0x95, 0x90, 0x57, 0xe5, 0xbe, 0x93, 0xec,
    0x1f, 0xfc, 0x14, 0x4e, 0x1c, 0xfa, 0xf9, 0x70, 0x9f, 0xc3, 0x79, 0x83,
    0xe4, 0x82, 0x77, 0x8c, 0x3f, 0x73, 0x9b, 0x89, 0xb0, 0x14, 0xde, 0x21,
    0x99, 0x39, 0xcd, 0x7e, 0x5e, 0xe2, 0xc6, 0x37, 0x9a, 0x0d, 0x82, 0x60,
    0x7c, 0xd7, 0x28, 0x08, 0x17, 0x7b, 0xd1, 0x7d, 0xb6, 0xb7, 0xb0, 0xf7,
    0x71, 0x83, 0xc1, 0x70, 0x1e, 0x59, 0xc0, 0xa6, 0xd9, 0x52, 0xb6, 0xac,
    0x2d, 0x62, 0x28, 0x12, 0xf6, 0xe4, 0xd5, 0xe5, 0x05, 0x2d, 0xa1, 0xdd,
    0x98, 0xb8, 0x35, 0x91, 0x39, 0x8d, 0xf8, 0x1f, 0x24, 0xef, 0xf6, 0x5c,
    0xe0, 0x0d, 0xe8, 0xce, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char img1_knetworkconfdlg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0xa4, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0x75, 0x95, 0x41, 0x48, 0x5c,
    0x57, 0x14, 0x86, 0x3f, 0xed, 0x13, 0xe6, 0x81, 0x85, 0x79, 0x90, 0x42,
    0x66, 0xd1, 0x85, 0xd0, 0x45, 0x33, 0x20, 0xe5, 0xcd, 0x6e, 0x06, 0x2c,
    0xb5, 0xe0, 0xc2, 0x58, 0x0b, 0x66, 0xc8, 0xa2, 0x91, 0x2e, 0x74, 0x98,
    0xc2, 0xd8, 0xa6, 0x90, 0x36, 0x2d, 0x48, 0x5d, 0xa5, 0xd2, 0x45, 0x9a,
    0x2e, 0x52, 0xe8, 0xa2, 0xc5, 0x87, 0x9b, 0xd8, 0x2c, 0x12, 0x5d, 0x8c,
    0xc6, 0x82, 0x45, 0x17, 0x96, 0x79, 0x59, 0x8d, 0x16, 0x8b, 0xcf, 0x45,
    0x4b, 0x84, 0x36, 0x38, 0x12, 0x42, 0x9e, 0x94, 0xc1, 0x19, 0x9a, 0x81,
    0xbf, 0x8b, 0x3b, 0x4e, 0xe6, 0x8d, 0xe6, 0x6c, 0xfe, 0x7b, 0xee, 0x39,
    0xf7, 0xdc, 0xff, 0x9e, 0x7b, 0xef, 0x39, 0x48, 0x42, 0xbe, 0x90, 0x44,
    0xc9, 0x2f, 0xd1, 0xae, 0xbb, 0x85, 0x5d, 0x95, 0x57, 0x25, 0xb7, 0x20,
    0xb9, 0xab, 0x92, 0x5b, 0x28, 0x1b, 0x3d, 0x2f, 0xb9, 0x45, 0xa9, 0xd3,
    0xbf, 0x5d, 0xef, 0x2a, 0xf9, 0x25, 0x32, 0xe9, 0x0c, 0xfe, 0x43, 0x3f,
    0x82, 0xa9, 0xa9, 0x40, 0x90, 0x04, 0x02, 0xa2, 0xb8, 0x05, 0xa4, 0x0c,
    0x36, 0x52, 0xb8, 0xe4, 0xf0, 0x7e, 0xf2, 0xba, 0x3a, 0xd7, 0x9f, 0xda,
    0xc9, 0x30, 0xdb, 0x55, 0x79, 0x4d, 0x4a, 0x7f, 0x21, 0x3d, 0x0b, 0xa4,
    0x29, 0x4f, 0x92, 0xa4, 0xb9, 0x55, 0x49, 0xff, 0x4a, 0x57, 0xbe, 0x93,
    0x1e, 0xf9, 0xcd, 0x93, 0x14, 0x25, 0x37, 0xbf, 0x2e, 0x15, 0xa5, 0x76,
    0xe6, 0xad, 0xa0, 0x25, 0xbf, 0x84, 0x5b, 0x30, 0x41, 0xdd, 0xab, 0xd2,
    0xe4, 0xed, 0x67, 0x92, 0xa4, 0x47, 0x7f, 0x1f, 0x4b, 0x92, 0x8e, 0x0d,
    0xb4, 0x70, 0x7d, 0xe7, 0x58, 0xf2, 0xa4, 0xf4, 0xb5, 0x47, 0x72, 0x0b,
    0x52, 0x3a, 0xbf, 0xae, 0xc9, 0xfc, 0x64, 0x2b, 0x3d, 0xa7, 0x98, 0xee,
    0x6e, 0x4a, 0x5f, 0x2f, 0x99, 0xc5, 0x7a, 0xd2, 0x44, 0xb3, 0x87, 0xee,
    0x6f, 0x46, 0x75, 0x1d, 0x18, 0xb8, 0x38, 0x6d, 0xee, 0x20, 0xdd, 0xc6,
    0xbc, 0x95, 0xe3, 0xd4, 0x54, 0x20, 0xac, 0x24, 0x97, 0x06, 0x42, 0x66,
    0x2e, 0x3b, 0x04, 0xff, 0xd4, 0x48, 0xbe, 0x6e, 0xb7, 0xb0, 0x53, 0x3a,
    0xed, 0x99, 0xcf, 0xf6, 0xa9, 0x57, 0xfb, 0x70, 0xc9, 0x19, 0x07, 0x73,
    0xfb, 0x65, 0x95, 0xd7, 0xa4, 0xc9, 0xdb, 0x86, 0x41, 0x39, 0x68, 0x32,
    0x3a, 0xc1, 0xff, 0x74, 0xb6, 0x34, 0xed, 0xa5, 0x1d, 0x73, 0x3a, 0xf7,
    0xaa, 0x94, 0x2e, 0x4a, 0x93, 0xf9, 0x49, 0xbd, 0x52, 0x7c, 0xf2, 0xbe,
    0x20, 0xc5, 0xda, 0xe3, 0x7d, 0x8a, 0x33, 0x0e, 0x1b, 0xdb, 0x21, 0x99,
    0x7e, 0x9b, 0x8d, 0xed, 0x90, 0xbe, 0x7e, 0x9b, 0xda, 0x73, 0xe8, 0xe9,
    0x39, 0x45, 0xd8, 0xc8, 0x6b, 0xb0, 0xb1, 0x1d, 0xf2, 0xf6, 0x5b, 0x36,
    0xde, 0x66, 0x85, 0x3f, 0x0f, 0x5f, 0xa5, 0xfa, 0xbb, 0x4f, 0x57, 0xe3,
    0x08, 0x4e, 0xde, 0xe9, 0xc1, 0x8e, 0x74, 0x67, 0xad, 0x23, 0x97, 0x2f,
    0x63, 0xda, 0x21, 0x57, 0x7e, 0x30, 0xaf, 0x27, 0x3d, 0x2d, 0x95, 0x8b,
    0xd2, 0xe0, 0xc4, 0x1d, 0x75, 0xb9, 0x85, 0xb2, 0x20, 0x85, 0xfb, 0x66,
    0x88, 0xf7, 0xa9, 0x83, 0xf7, 0x4b, 0x85, 0xdc, 0x70, 0x82, 0x5a, 0x0d,
    0xec, 0xd3, 0xa9, 0x3d, 0x25, 0xb5, 0xe7, 0x60, 0xf7, 0x40, 0xe6, 0x06,
    0xd0, 0x80, 0xfa, 0xd3, 0x2d, 0xe2, 0x8d, 0x14, 0xdd, 0x8c, 0xa6, 0x80,
    0x00, 0x6f, 0xcc, 0xe1, 0xd6, 0x3d, 0xc8, 0xbd, 0x93, 0x80, 0x8e, 0xa0,
    0x8b, 0xbf, 0x45, 0x83, 0x2d, 0xb4, 0xe9, 0x76, 0x33, 0x4d, 0xeb, 0x13,
    0xcd, 0x89, 0xd1, 0x14, 0xb0, 0x48, 0x37, 0xcb, 0x5b, 0x40, 0x92, 0xf1,
    0x7b, 0x21, 0xd7, 0x43, 0xb8, 0x7e, 0xb7, 0x02, 0x6d, 0x41, 0x67, 0x7e,
    0xae, 0xb1, 0xfa, 0x47, 0x34, 0xf0, 0xfe, 0x00, 0x8c, 0xdc, 0x8c, 0xce,
    0x8d, 0xdc, 0x6d, 0x0e, 0x96, 0x03, 0x20, 0x4b, 0xf7, 0xdc, 0x68, 0x0a,
    0x80, 0xca, 0x90, 0x43, 0xb6, 0x0a, 0x5f, 0xa5, 0x13, 0x64, 0x6f, 0x42,
    0xb8, 0x07, 0xef, 0x7e, 0x03, 0xb9, 0x7e, 0x9b, 0xc3, 0x6a, 0xc7, 0xf9,
    0x97, 0x21, 0x1c, 0x32, 0xc7, 0x0f, 0xb6, 0x0d, 0xd6, 0x87, 0x8c, 0x69,
    0x6e, 0x38, 0x09, 0x2c, 0xd0, 0xe5, 0xe6, 0xcb, 0xc2, 0x4a, 0x41, 0xbc,
    0x46, 0xbc, 0xf7, 0xec, 0xa4, 0xda, 0x16, 0x3c, 0xf8, 0x32, 0x3a, 0x97,
    0xb9, 0xf1, 0x62, 0x1c, 0xb3, 0x0c, 0x1e, 0x55, 0x81, 0x68, 0x8e, 0xb7,
    0x98, 0x1b, 0xb2, 0xb1, 0x2d, 0x58, 0x18, 0x23, 0x82, 0x8c, 0x9e, 0xde,
    0x68, 0x76, 0xd9, 0xd8, 0x63, 0x16, 0xc4, 0xda, 0xfc, 0xa9, 0x9b, 0x1c,
    0x3b, 0xcc, 0x98, 0x9f, 0xf7, 0xc9, 0x7c, 0x46, 0xc4, 0x02, 0x12, 0xe7,
    0x93, 0xc4, 0x7b, 0x6b, 0x98, 0x24, 0xbf, 0xc0, 0x98, 0x65, 0xe3, 0x4d,
    0x45, 0x83, 0x8f, 0x7f, 0x1f, 0xf5, 0x3b, 0xaa, 0x86, 0x54, 0x1e, 0x3b,
    0xc4, 0xea, 0x8b, 0x5c, 0xb0, 0x56, 0xe9, 0xce, 0xa4, 0x33, 0xe6, 0x1b,
    0x0e, 0x27, 0xa9, 0x1d, 0x05, 0x2c, 0x5c, 0xb6, 0x49, 0xf4, 0xc2, 0xc2,
    0x07, 0x51, 0x6c, 0x17, 0xef, 0xd7, 0xa8, 0x3d, 0x1e, 0x83, 0xda, 0x80,
    0x03, 0x0d, 0x1f, 0x7f, 0x2c, 0x0b, 0xd0, 0x56, 0x2b, 0x3e, 0xf2, 0x85,
    0x95, 0x21, 0x71, 0x2e, 0xe0, 0xc1, 0x1b, 0x49, 0x66, 0xad, 0x0a, 0x90,
    0x00, 0x2a, 0xcc, 0x90, 0xc0, 0x73, 0x42, 0x72, 0xc3, 0x0e, 0x8b, 0x0f,
    0x43, 0xb2, 0xfb, 0x0e, 0xb3, 0x18, 0x7b, 0xbd, 0x51, 0x61, 0xfb, 0xaf,
    0x04, 0x95, 0x43, 0x9f, 0x78, 0x23, 0x43, 0x9f, 0xd5, 0x56, 0x2b, 0x4a,
    0x7e, 0x09, 0x15, 0xa5, 0x74, 0x7e, 0x45, 0xee, 0xaa, 0x74, 0x71, 0x7a,
    0x57, 0x3a, 0x90, 0xbe, 0x5d, 0x32, 0xbf, 0xef, 0x65, 0xf8, 0xf9, 0x8f,
    0xd2, 0x81, 0x2f, 0xb9, 0xf9, 0x92, 0x0e, 0x96, 0x4c, 0x8d, 0x50, 0xb3,
    0xb3, 0x44, 0x3a, 0x88, 0x37, 0xef, 0x69, 0x8f, 0x4b, 0xd4, 0x19, 0x21,
    0xd6, 0xbb, 0x45, 0xe2, 0x5c, 0x8a, 0x0b, 0xe7, 0xf7, 0x89, 0x7f, 0xd8,
    0x87, 0xbd, 0x12, 0xf2, 0xf1, 0x7b, 0x0e, 0xb7, 0x56, 0x2a, 0x1c, 0x85,
    0x09, 0xf6, 0x0e, 0x03, 0x2a, 0x4f, 0x93, 0xd4, 0xab, 0x51, 0xa6, 0xb9,
    0x89, 0x5c, 0x57, 0xab, 0x83, 0x44, 0x7a, 0x56, 0xb3, 0x3a, 0xa5, 0x8b,
    0x86, 0x49, 0xb9, 0x68, 0x6a, 0xc9, 0xe0, 0x86, 0x34, 0x78, 0x2d, 0xda,
    0xf3, 0xd2, 0x13, 0xf7, 0x75, 0xe2, 0xaf, 0x8e, 0x1e, 0x78, 0x66, 0xcf,
    0xf3, 0xe6, 0x3d, 0x01, 0x1c, 0x36, 0xfa, 0xa8, 0xd1, 0x07, 0xd6, 0x38,
    0xb0, 0x08, 0x64, 0x81, 0x05, 0x68, 0x8c, 0xe3, 0x30, 0x43, 0xdc, 0xaa,
    0xb4, 0x2e, 0xf4, 0x84, 0xe9, 0x49, 0x9c, 0xff, 0x01, 0xb1, 0xf3, 0x46,
    0x11, 0xa3, 0xab, 0x60, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char img2_knetworkconfdlg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0xc3, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0x75, 0x95, 0x4d, 0x48, 0x1c,
    0x67, 0x18, 0xc7, 0x7f, 0xca, 0x1e, 0x1c, 0xf0, 0xb0, 0x03, 0x16, 0xb2,
    0xd0, 0x1e, 0x84, 0x04, 0xe2, 0x42, 0xa1, 0x33, 0xb7, 0x59, 0x28, 0xd4,
    0xd0, 0x1c, 0x4c, 0x2b, 0xd4, 0x48, 0x0e, 0x4d, 0xe8, 0x21, 0xbb, 0x6c,
    0x41, 0xf3, 0x01, 0x21, 0xed, 0x21, 0xd4, 0x5e, 0x9a, 0xdc, 0x62, 0x0f,
    0x16, 0x42, 0x69, 0x71, 0x90, 0x82, 0x7b, 0x09, 0x1a, 0xca, 0xd6, 0x6e,
    0x20, 0xa9, 0x1e, 0x52, 0x76, 0xbc, 0x74, 0x15, 0x2c, 0xbb, 0x42, 0x5a,
    0x0c, 0xd8, 0xb2, 0x23, 0x25, 0xb8, 0x12, 0xc4, 0x5d, 0xca, 0xc2, 0xbf,
    0x87, 0x77, 0x67, 0x75, 0x34, 0x7d, 0x2e, 0xff, 0x79, 0xbf, 0x9e, 0xf9,
    0xbd, 0xcf, 0xfb, 0xbe, 0xcf, 0x83, 0x24, 0x14, 0x08, 0x49, 0x94, 0x83,
    0x32, 0x47, 0xdb, 0xce, 0x44, 0x55, 0x95, 0x92, 0xe4, 0x4c, 0x48, 0x4e,
    0x49, 0x72, 0x26, 0x2a, 0xa6, 0x9d, 0x97, 0x9c, 0xa2, 0x74, 0x7c, 0xfe,
    0xd1, 0x76, 0x4f, 0x39, 0x28, 0x93, 0xf1, 0x32, 0x04, 0xab, 0x41, 0x4c,
    0xdd, 0xc9, 0x9a, 0x20, 0x0d, 0xd4, 0x88, 0xeb, 0x1a, 0xe0, 0x1a, 0x6d,
    0xbb, 0x38, 0xe4, 0xf0, 0xbf, 0xf7, 0x7b, 0x8e, 0xaf, 0x3f, 0xf1, 0x27,
    0x43, 0x56, 0x55, 0xe5, 0x89, 0xe4, 0x7d, 0x2e, 0xed, 0xd6, 0xa4, 0x49,
    0x5f, 0x92, 0xa4, 0xd9, 0x92, 0xa4, 0x57, 0xd2, 0xe5, 0xaf, 0xa5, 0xad,
    0xa0, 0xb3, 0x93, 0xa2, 0xe4, 0xe4, 0x97, 0xa5, 0xa2, 0x74, 0x94, 0xbc,
    0xeb, 0xb4, 0x1c, 0x94, 0x71, 0x26, 0x8c, 0x53, 0xe7, 0x86, 0x94, 0x9d,
    0xd9, 0x95, 0x24, 0x6d, 0x6d, 0x1f, 0x48, 0x92, 0x0e, 0x8c, 0x74, 0x75,
    0x79, 0xe3, 0x40, 0xf2, 0x25, 0xef, 0xd6, 0x96, 0x9c, 0x09, 0xc9, 0xcb,
    0x2f, 0x2b, 0x9b, 0xcf, 0x76, 0xc3, 0x73, 0x82, 0xb4, 0xfa, 0x4c, 0xba,
    0xfb, 0xc8, 0x2c, 0xd6, 0x3f, 0x71, 0x5d, 0x0a, 0x8e, 0xf5, 0xd7, 0x8d,
    0x5c, 0xb8, 0x63, 0xce, 0xc0, 0x3b, 0x42, 0xde, 0x25, 0x8e, 0x48, 0xef,
    0x3e, 0x34, 0xa4, 0xd5, 0x0e, 0x69, 0xa4, 0xbb, 0xaf, 0x8c, 0x93, 0xad,
    0xfa, 0xc1, 0x6b, 0xc7, 0xbd, 0x5b, 0x5b, 0x72, 0xf2, 0x52, 0x36, 0x9f,
    0x55, 0x36, 0x9f, 0x8d, 0x4e, 0xbf, 0xa2, 0xca, 0x13, 0x29, 0x3b, 0x63,
    0x16, 0x57, 0x6a, 0x1d, 0xa2, 0x48, 0x3b, 0x64, 0x91, 0x55, 0x9e, 0xc7,
    0xc7, 0xcb, 0x1b, 0x66, 0x17, 0xce, 0x0d, 0xc9, 0x2b, 0x1a, 0xe7, 0xbd,
    0xee, 0xe4, 0x9a, 0xc0, 0xe5, 0xfa, 0xd3, 0x17, 0xf8, 0x37, 0x61, 0x65,
    0xbd, 0x81, 0x3b, 0x64, 0x94, 0x48, 0x53, 0xc4, 0xcc, 0x3d, 0x13, 0x1f,
    0xcf, 0xbc, 0x0d, 0xfe, 0x6f, 0x21, 0xc9, 0x7e, 0x68, 0xfd, 0x14, 0xb0,
    0xd3, 0x1e, 0x84, 0xe8, 0x9e, 0xd6, 0x37, 0xa4, 0xf9, 0x27, 0x86, 0x60,
    0xe1, 0x59, 0x5c, 0xf5, 0x5c, 0x31, 0x5b, 0xe8, 0xc4, 0x7a, 0x7e, 0x45,
    0xd2, 0xbf, 0xd2, 0xe5, 0x07, 0xe6, 0xf6, 0x78, 0x77, 0xa4, 0x4a, 0x51,
    0x1a, 0xbe, 0x3a, 0xaf, 0x1e, 0x67, 0xa2, 0x22, 0x70, 0x71, 0xce, 0x36,
    0xf0, 0x6f, 0xda, 0xf8, 0x8f, 0x43, 0x72, 0xef, 0xa7, 0x98, 0xfe, 0xb1,
    0x01, 0x1f, 0xd9, 0xd8, 0xbf, 0x84, 0xe4, 0x46, 0x8e, 0x21, 0x03, 0xfe,
    0xe3, 0x90, 0xf0, 0xbd, 0x14, 0xeb, 0xdf, 0x36, 0x09, 0xf7, 0x2d, 0xd3,
    0xd9, 0x86, 0xd6, 0xcb, 0x35, 0x92, 0x6d, 0x97, 0xee, 0x6d, 0xd0, 0xb6,
    0x74, 0xff, 0xa1, 0xa4, 0x57, 0xd2, 0xec, 0x4a, 0x87, 0xe8, 0x99, 0xa4,
    0x03, 0x69, 0x79, 0x2d, 0x4e, 0xfc, 0xc5, 0x0f, 0x92, 0xb6, 0x25, 0x6d,
    0x98, 0xf6, 0xc5, 0x19, 0xa9, 0xba, 0x26, 0x79, 0x5f, 0x9a, 0xdb, 0x31,
    0x9c, 0x5f, 0x38, 0x24, 0x1e, 0x3a, 0xdd, 0xa0, 0xd0, 0x6f, 0x33, 0xfd,
    0x46, 0x83, 0xcf, 0xc6, 0xec, 0x2e, 0xd9, 0xe2, 0x6a, 0x93, 0x71, 0xcf,
    0x8a, 0xd1, 0x8e, 0x7f, 0x03, 0xb7, 0x47, 0x20, 0x73, 0xe6, 0xb0, 0x2f,
    0xf3, 0x55, 0x44, 0x5c, 0x23, 0xd9, 0x4e, 0xd3, 0x3b, 0x3b, 0xea, 0x02,
    0x10, 0x9e, 0xb7, 0x19, 0xdf, 0x87, 0x6b, 0xef, 0xd8, 0xf0, 0xc7, 0x11,
    0x27, 0x9e, 0x05, 0x7f, 0xc5, 0xc3, 0xb0, 0x38, 0x1a, 0x77, 0xfa, 0xe0,
    0x29, 0x30, 0x6a, 0xbe, 0x67, 0x47, 0xd2, 0x40, 0x81, 0x1e, 0x27, 0x5f,
    0x11, 0x09, 0x17, 0x92, 0x4d, 0x92, 0xfd, 0x86, 0xcc, 0x4a, 0xc0, 0xed,
    0x51, 0x38, 0x37, 0x74, 0x22, 0xb4, 0x27, 0x6c, 0xfa, 0x31, 0x94, 0xd6,
    0xcd, 0xf7, 0xde, 0x3e, 0xd0, 0x89, 0x71, 0x2f, 0xa3, 0x26, 0xa1, 0xcc,
    0x9e, 0xb7, 0xb0, 0x12, 0x50, 0x18, 0x33, 0x93, 0x9c, 0x04, 0x31, 0xf2,
    0xd7, 0xd9, 0x83, 0xa7, 0x50, 0x7a, 0x93, 0xc3, 0x75, 0x2d, 0x60, 0xd4,
    0xc5, 0x66, 0xca, 0x64, 0xb7, 0xeb, 0x73, 0x19, 0xd1, 0x57, 0x23, 0x75,
    0x2a, 0x4d, 0xb2, 0xbf, 0x09, 0x58, 0x40, 0x93, 0x64, 0x9f, 0x45, 0x6e,
    0xd8, 0xdc, 0xdb, 0xe3, 0x56, 0xf8, 0xb5, 0xc9, 0xca, 0xef, 0x16, 0xad,
    0xb6, 0x99, 0xbf, 0xb7, 0xdf, 0x20, 0xfc, 0xdb, 0xa6, 0xaf, 0xb5, 0xc8,
    0x50, 0xa2, 0x44, 0x6f, 0xc6, 0xcb, 0xe0, 0x90, 0x83, 0x91, 0x34, 0xcd,
    0xbd, 0x1a, 0x85, 0x4b, 0x16, 0xa9, 0x7e, 0x28, 0x7c, 0x6c, 0x76, 0xe0,
    0x0e, 0x70, 0x32, 0xc6, 0xab, 0x70, 0xe5, 0xac, 0x85, 0xdd, 0x67, 0xe6,
    0x25, 0xfb, 0xa0, 0xf9, 0xae, 0x0d, 0xed, 0x80, 0x60, 0x6c, 0x1c, 0xe0,
    0x30, 0x1f, 0xbb, 0x9f, 0x06, 0x22, 0x91, 0x21, 0x35, 0x50, 0xe3, 0xe7,
    0xd3, 0x69, 0xee, 0x25, 0x42, 0xcc, 0x93, 0x0b, 0x99, 0xba, 0x94, 0xa2,
    0xb6, 0xd3, 0x24, 0xfd, 0x96, 0xc5, 0xca, 0x7a, 0x93, 0x73, 0x9b, 0x16,
    0xf7, 0x30, 0xe3, 0xad, 0x76, 0xc8, 0xfa, 0x9f, 0x29, 0xc2, 0x9d, 0x80,
    0x64, 0x3b, 0xc3, 0x60, 0x22, 0x67, 0xfe, 0xae, 0x28, 0x1f, 0x17, 0x25,
    0x2f, 0xbf, 0x24, 0xa7, 0x24, 0x5d, 0xb8, 0x53, 0x95, 0xea, 0xd2, 0xfd,
    0x47, 0xe6, 0x65, 0xfd, 0x9f, 0xde, 0xfe, 0x4e, 0xaa, 0x07, 0x92, 0x93,
    0x2f, 0xab, 0xfe, 0xc8, 0xe4, 0x08, 0x75, 0x2a, 0x4b, 0xac, 0x82, 0xf8,
    0x73, 0xbe, 0x36, 0xb9, 0x48, 0x8b, 0x0f, 0xe8, 0xeb, 0x5f, 0x23, 0x35,
    0xe0, 0x32, 0x74, 0xea, 0x05, 0xc9, 0x4f, 0x06, 0xb1, 0x96, 0x1a, 0x5c,
    0xfb, 0xd0, 0x66, 0x7a, 0x29, 0x64, 0xaf, 0x91, 0x62, 0x73, 0xa7, 0x46,
    0xf8, 0x32, 0x4d, 0x6b, 0x3f, 0x4e, 0x9a, 0xbb, 0x9a, 0xeb, 0xe9, 0x56,
    0x90, 0x58, 0xcd, 0xea, 0x64, 0x27, 0xaf, 0x68, 0x48, 0x2a, 0x45, 0x93,
    0x4b, 0x86, 0x57, 0xa4, 0xe1, 0x5b, 0xf1, 0x9a, 0xe7, 0x5d, 0x5d, 0x50,
    0x34, 0x5f, 0xc7, 0x6a, 0xe0, 0x6b, 0x6b, 0x9e, 0x3f, 0xe7, 0x0b, 0x60,
    0xa7, 0x3d, 0x48, 0x93, 0x41, 0x48, 0x5c, 0x01, 0x16, 0x81, 0x71, 0xa0,
    0x00, 0xed, 0x2b, 0xd8, 0x4c, 0x91, 0x4c, 0x84, 0xdd, 0x03, 0x8d, 0x48,
    0x23, 0x3f, 0xff, 0x01, 0xda, 0x21, 0xbe, 0x24, 0x65, 0xfe, 0xd8, 0x6a,
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a KNetworkConfDlg as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 */
KNetworkConfDlg::KNetworkConfDlg( QWidget* parent, const char* name, WFlags fl )
    : QWidget( parent, name, fl )
{
    QImage img;
    img.loadFromData( img0_knetworkconfdlg, sizeof( img0_knetworkconfdlg ), "PNG" );
    image0 = img;
    img.loadFromData( img1_knetworkconfdlg, sizeof( img1_knetworkconfdlg ), "PNG" );
    image1 = img;
    img.loadFromData( img2_knetworkconfdlg, sizeof( img2_knetworkconfdlg ), "PNG" );
    image2 = img;
    if ( !name )
	setName( "KNetworkConfDlg" );
    setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 0, 0, sizePolicy().hasHeightForWidth() ) );
    setMinimumSize( QSize( 510, 410 ) );
    setMaximumSize( QSize( 32767, 32767 ) );
    setIcon( image0 );
    KNetworkConfDlgLayout = new QHBoxLayout( this, 11, 6, "KNetworkConfDlgLayout"); 

    tabWidget = new QTabWidget( this, "tabWidget" );
    tabWidget->setTabShape( QTabWidget::Rounded );

    tab = new QWidget( tabWidget, "tab" );
    tabLayout = new QVBoxLayout( tab, 11, 6, "tabLayout"); 

    layout16 = new QHBoxLayout( 0, 0, 6, "layout16"); 

    textLabel1_2 = new QLabel( tab, "textLabel1_2" );
    layout16->addWidget( textLabel1_2 );
    spacer24 = new QSpacerItem( 301, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout16->addItem( spacer24 );
    tabLayout->addLayout( layout16 );

    klvCardList = new KListView( tab, "klvCardList" );
    klvCardList->addColumn( tr2i18n( "Interface" ) );
    klvCardList->addColumn( tr2i18n( "IP Address" ) );
    klvCardList->addColumn( tr2i18n( "Protocol" ) );
    klvCardList->addColumn( tr2i18n( "State" ) );
    klvCardList->addColumn( tr2i18n( "Comment" ) );
    klvCardList->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 0, 0, klvCardList->sizePolicy().hasHeightForWidth() ) );
    tabLayout->addWidget( klvCardList );

    layout11 = new QHBoxLayout( 0, 0, 6, "layout11"); 

    kpbConfigureNetworkInterface = new KPushButton( tab, "kpbConfigureNetworkInterface" );
    kpbConfigureNetworkInterface->setEnabled( FALSE );
    layout11->addWidget( kpbConfigureNetworkInterface );

    kpbUpButton = new KPushButton( tab, "kpbUpButton" );
    kpbUpButton->setEnabled( FALSE );
    layout11->addWidget( kpbUpButton );

    kpbDownButton = new KPushButton( tab, "kpbDownButton" );
    kpbDownButton->setEnabled( FALSE );
    layout11->addWidget( kpbDownButton );
    tabLayout->addLayout( layout11 );
    spacer23 = new QSpacerItem( 20, 230, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout->addItem( spacer23 );
    tabWidget->insertTab( tab, QString::fromLatin1("") );

    tab_2 = new QWidget( tabWidget, "tab_2" );
    tabLayout_2 = new QVBoxLayout( tab_2, 11, 6, "tabLayout_2"); 

    gbDefaultGateway = new QGroupBox( tab_2, "gbDefaultGateway" );
    gbDefaultGateway->setColumnLayout(0, Qt::Vertical );
    gbDefaultGateway->layout()->setSpacing( 6 );
    gbDefaultGateway->layout()->setMargin( 11 );
    gbDefaultGatewayLayout = new QVBoxLayout( gbDefaultGateway->layout() );
    gbDefaultGatewayLayout->setAlignment( Qt::AlignTop );

    Layout11 = new QHBoxLayout( 0, 0, 6, "Layout11"); 

    TextLabel3 = new QLabel( gbDefaultGateway, "TextLabel3" );
    Layout11->addWidget( TextLabel3 );
    Spacer4 = new QSpacerItem( 181, 0, QSizePolicy::Expanding, QSizePolicy::Minimum );
    Layout11->addItem( Spacer4 );
    gbDefaultGatewayLayout->addLayout( Layout11 );

    Layout27 = new QHBoxLayout( 0, 0, 6, "Layout27"); 

    kleDefaultRoute = new KLineEdit( gbDefaultGateway, "kleDefaultRoute" );
    kleDefaultRoute->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)0, 0, 0, kleDefaultRoute->sizePolicy().hasHeightForWidth() ) );
    Layout27->addWidget( kleDefaultRoute );
    Spacer12 = new QSpacerItem( 31, 0, QSizePolicy::Expanding, QSizePolicy::Minimum );
    Layout27->addItem( Spacer12 );

    TextLabel1_2 = new QLabel( gbDefaultGateway, "TextLabel1_2" );
    Layout27->addWidget( TextLabel1_2 );

    kcbGwDevice = new KComboBox( FALSE, gbDefaultGateway, "kcbGwDevice" );
    kcbGwDevice->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)0, 0, 0, kcbGwDevice->sizePolicy().hasHeightForWidth() ) );
    kcbGwDevice->setMinimumSize( QSize( 70, 0 ) );
    kcbGwDevice->setMaximumSize( QSize( 65, 32767 ) );
    Layout27->addWidget( kcbGwDevice );
    gbDefaultGatewayLayout->addLayout( Layout27 );
    tabLayout_2->addWidget( gbDefaultGateway );
    Spacer7 = new QSpacerItem( 0, 90, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_2->addItem( Spacer7 );
    tabWidget->insertTab( tab_2, QString::fromLatin1("") );

    tab_3 = new QWidget( tabWidget, "tab_3" );
    tabLayout_3 = new QGridLayout( tab_3, 1, 1, 11, 6, "tabLayout_3"); 

    gbDNSServersList = new QGroupBox( tab_3, "gbDNSServersList" );
    gbDNSServersList->setColumnLayout(0, Qt::Vertical );
    gbDNSServersList->layout()->setSpacing( 6 );
    gbDNSServersList->layout()->setMargin( 11 );
    gbDNSServersListLayout = new QHBoxLayout( gbDNSServersList->layout() );
    gbDNSServersListLayout->setAlignment( Qt::AlignTop );

    klbDomainServerList = new KListBox( gbDNSServersList, "klbDomainServerList" );
    gbDNSServersListLayout->addWidget( klbDomainServerList );

    layout23 = new QVBoxLayout( 0, 0, 6, "layout23"); 
    Spacer10 = new QSpacerItem( 16, 20, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout23->addItem( Spacer10 );

    kpbUpDomainServerList = new KPushButton( gbDNSServersList, "kpbUpDomainServerList" );
    kpbUpDomainServerList->setPixmap( image1 );
    layout23->addWidget( kpbUpDomainServerList );

    kpbDownDomainServerList = new KPushButton( gbDNSServersList, "kpbDownDomainServerList" );
    kpbDownDomainServerList->setPixmap( image2 );
    layout23->addWidget( kpbDownDomainServerList );
    Spacer11 = new QSpacerItem( 16, 16, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout23->addItem( Spacer11 );
    gbDNSServersListLayout->addLayout( layout23 );

    layout25 = new QVBoxLayout( 0, 0, 6, "layout25"); 
    spacer27 = new QSpacerItem( 20, 21, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout25->addItem( spacer27 );

    kpbAddDomainServer = new KPushButton( gbDNSServersList, "kpbAddDomainServer" );
    kpbAddDomainServer->setMaximumSize( QSize( 32767, 32767 ) );
    layout25->addWidget( kpbAddDomainServer );

    kpbEditDomainServer = new KPushButton( gbDNSServersList, "kpbEditDomainServer" );
    kpbEditDomainServer->setMaximumSize( QSize( 32767, 32767 ) );
    layout25->addWidget( kpbEditDomainServer );

    kpbRemoveDomainServer = new KPushButton( gbDNSServersList, "kpbRemoveDomainServer" );
    kpbRemoveDomainServer->setMaximumSize( QSize( 32767, 32767 ) );
    layout25->addWidget( kpbRemoveDomainServer );
    spacer27_2 = new QSpacerItem( 20, 21, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout25->addItem( spacer27_2 );
    gbDNSServersListLayout->addLayout( layout25 );

    tabLayout_3->addMultiCellWidget( gbDNSServersList, 2, 2, 0, 1 );

    gbKnownHostsList = new QGroupBox( tab_3, "gbKnownHostsList" );
    gbKnownHostsList->setColumnLayout(0, Qt::Vertical );
    gbKnownHostsList->layout()->setSpacing( 6 );
    gbKnownHostsList->layout()->setMargin( 11 );
    gbKnownHostsListLayout = new QVBoxLayout( gbKnownHostsList->layout() );
    gbKnownHostsListLayout->setAlignment( Qt::AlignTop );

    klvKnownHosts = new KListView( gbKnownHostsList, "klvKnownHosts" );
    klvKnownHosts->addColumn( tr2i18n( "IP Address" ) );
    klvKnownHosts->addColumn( tr2i18n( "Aliases" ) );
    gbKnownHostsListLayout->addWidget( klvKnownHosts );

    layout20 = new QHBoxLayout( 0, 0, 6, "layout20"); 

    kpbAddKnownHost = new KPushButton( gbKnownHostsList, "kpbAddKnownHost" );
    kpbAddKnownHost->setMaximumSize( QSize( 32767, 32767 ) );
    layout20->addWidget( kpbAddKnownHost );

    kpbEditKnownHost = new KPushButton( gbKnownHostsList, "kpbEditKnownHost" );
    kpbEditKnownHost->setMaximumSize( QSize( 32767, 32767 ) );
    layout20->addWidget( kpbEditKnownHost );

    kpbRemoveKnownHost = new KPushButton( gbKnownHostsList, "kpbRemoveKnownHost" );
    kpbRemoveKnownHost->setMaximumSize( QSize( 32767, 32767 ) );
    layout20->addWidget( kpbRemoveKnownHost );
    gbKnownHostsListLayout->addLayout( layout20 );

    tabLayout_3->addMultiCellWidget( gbKnownHostsList, 3, 3, 0, 1 );

    tlHostName = new QLabel( tab_3, "tlHostName" );

    tabLayout_3->addWidget( tlHostName, 0, 0 );

    kleHostName = new KLineEdit( tab_3, "kleHostName" );

    tabLayout_3->addWidget( kleHostName, 0, 1 );

    kleDomainName = new KLineEdit( tab_3, "kleDomainName" );

    tabLayout_3->addWidget( kleDomainName, 1, 1 );

    tlDomainName = new QLabel( tab_3, "tlDomainName" );

    tabLayout_3->addWidget( tlDomainName, 1, 0 );
    tabWidget->insertTab( tab_3, QString::fromLatin1("") );

    TabPage = new QWidget( tabWidget, "TabPage" );
    TabPageLayout = new QVBoxLayout( TabPage, 11, 6, "TabPageLayout"); 

    buttonGroup2 = new QButtonGroup( TabPage, "buttonGroup2" );
    buttonGroup2->setColumnLayout(0, Qt::Vertical );
    buttonGroup2->layout()->setSpacing( 6 );
    buttonGroup2->layout()->setMargin( 11 );
    buttonGroup2Layout = new QGridLayout( buttonGroup2->layout() );
    buttonGroup2Layout->setAlignment( Qt::AlignTop );

    klvProfilesList = new KListView( buttonGroup2, "klvProfilesList" );
    klvProfilesList->addColumn( tr2i18n( "Name" ) );
    klvProfilesList->setItemsRenameable( TRUE );

    buttonGroup2Layout->addMultiCellWidget( klvProfilesList, 0, 1, 0, 0 );

    layout28 = new QVBoxLayout( 0, 0, 6, "layout28"); 

    kpbEnableProfile = new KPushButton( buttonGroup2, "kpbEnableProfile" );
    layout28->addWidget( kpbEnableProfile );

    kpbSaveProfile = new KPushButton( buttonGroup2, "kpbSaveProfile" );
    layout28->addWidget( kpbSaveProfile );

    kpbCreateProfile = new KPushButton( buttonGroup2, "kpbCreateProfile" );
    layout28->addWidget( kpbCreateProfile );

    kpbDeleteProfile = new KPushButton( buttonGroup2, "kpbDeleteProfile" );
    layout28->addWidget( kpbDeleteProfile );

    buttonGroup2Layout->addLayout( layout28, 0, 1 );
    spacer25 = new QSpacerItem( 21, 51, QSizePolicy::Minimum, QSizePolicy::Expanding );
    buttonGroup2Layout->addItem( spacer25, 1, 1 );
    TabPageLayout->addWidget( buttonGroup2 );
    spacer18 = new QSpacerItem( 20, 150, QSizePolicy::Minimum, QSizePolicy::Expanding );
    TabPageLayout->addItem( spacer18 );
    tabWidget->insertTab( TabPage, QString::fromLatin1("") );
    KNetworkConfDlgLayout->addWidget( tabWidget );
    languageChange();
    resize( QSize(510, 410).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( kpbDownButton, SIGNAL( clicked() ), this, SLOT( disableInterfaceSlot() ) );
    connect( kpbUpButton, SIGNAL( clicked() ), this, SLOT( enableInterfaceSlot() ) );
    connect( kpbConfigureNetworkInterface, SIGNAL( clicked() ), this, SLOT( configureDeviceSlot() ) );
    connect( klvCardList, SIGNAL( rightButtonClicked(QListViewItem*,const QPoint&,int) ), this, SLOT( showInterfaceContextMenuSlot() ) );
    connect( klvCardList, SIGNAL( doubleClicked(QListViewItem*) ), this, SLOT( configureDeviceSlot() ) );
    connect( klvCardList, SIGNAL( selectionChanged() ), this, SLOT( enableButtonsSlot() ) );
    connect( klbDomainServerList, SIGNAL( doubleClicked(QListBoxItem*) ), this, SLOT( editServerSlot() ) );
    connect( kpbEditDomainServer, SIGNAL( clicked() ), this, SLOT( editServerSlot() ) );
    connect( kpbUpDomainServerList, SIGNAL( clicked() ), this, SLOT( moveUpServerSlot() ) );
    connect( kpbRemoveKnownHost, SIGNAL( clicked() ), this, SLOT( removeKnownHostSlot() ) );
    connect( kpbRemoveDomainServer, SIGNAL( clicked() ), this, SLOT( removeServerSlot() ) );
    connect( kpbEditKnownHost, SIGNAL( clicked() ), this, SLOT( editKnownHostSlot() ) );
    connect( kpbDownDomainServerList, SIGNAL( clicked() ), this, SLOT( moveDownServerSlot() ) );
    connect( kpbAddKnownHost, SIGNAL( clicked() ), this, SLOT( addKnownHostSlot() ) );
    connect( kpbAddDomainServer, SIGNAL( clicked() ), this, SLOT( addServerSlot() ) );
    connect( klvKnownHosts, SIGNAL( doubleClicked(QListViewItem*) ), this, SLOT( editKnownHostSlot() ) );
    connect( kcbGwDevice, SIGNAL( activated(const QString&) ), this, SLOT( enableApplyButtonSlot(const QString&) ) );
    connect( klvProfilesList, SIGNAL( itemRenamed(QListViewItem*) ), this, SLOT( updateProfileNameSlot(QListViewItem*) ) );
    connect( kpbCreateProfile, SIGNAL( clicked() ), this, SLOT( createProfileSlot() ) );
    connect( klvProfilesList, SIGNAL( itemRenamed(QListViewItem*) ), this, SLOT( updateProfileNameSlot(QListViewItem*) ) );
    connect( kpbDeleteProfile, SIGNAL( clicked() ), this, SLOT( removeProfileSlot() ) );
    connect( kpbEnableProfile, SIGNAL( clicked() ), this, SLOT( enableProfileSlot() ) );
    connect( kpbSaveProfile, SIGNAL( clicked() ), this, SLOT( updateProfileSlot() ) );
}

/*
 *  Destroys the object and frees any allocated resources
 */
KNetworkConfDlg::~KNetworkConfDlg()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void KNetworkConfDlg::languageChange()
{
    setCaption( tr2i18n( "Network Settings" ) );
    setIconText( tr2i18n( "Configure your TCP/IP settings" ) );
    QToolTip::add( this, tr2i18n( "Change TCP/IP settings" ) );
    QToolTip::add( tabWidget, QString::null );
    textLabel1_2->setText( tr2i18n( "Available Network Interfaces" ) );
    klvCardList->header()->setLabel( 0, tr2i18n( "Interface" ) );
    klvCardList->header()->setLabel( 1, tr2i18n( "IP Address" ) );
    klvCardList->header()->setLabel( 2, tr2i18n( "Protocol" ) );
    klvCardList->header()->setLabel( 3, tr2i18n( "State" ) );
    klvCardList->header()->setLabel( 4, tr2i18n( "Comment" ) );
    QToolTip::add( klvCardList, tr2i18n( "List of configured network devices" ) );
    kpbConfigureNetworkInterface->setText( tr2i18n( "Configure Interface..." ) );
    QToolTip::add( kpbConfigureNetworkInterface, tr2i18n( "Change the settings of the selected device" ) );
    kpbUpButton->setText( tr2i18n( "Enable Interface" ) );
    kpbDownButton->setText( tr2i18n( "Disable Interface" ) );
    tabWidget->changeTab( tab, tr2i18n( "Network Interfaces" ) );
    gbDefaultGateway->setTitle( tr2i18n( "Default Gateway" ) );
    TextLabel3->setText( tr2i18n( "IP address:" ) );
    kleDefaultRoute->setText( QString::null );
    QToolTip::add( kleDefaultRoute, tr2i18n( "Default Gateway IP address" ) );
    TextLabel1_2->setText( tr2i18n( "Device:" ) );
    QToolTip::add( kcbGwDevice, tr2i18n( "Network device where to send packets" ) );
    tabWidget->changeTab( tab_2, tr2i18n( "Routes" ) );
    gbDNSServersList->setTitle( tr2i18n( "Domain Name Servers" ) );
    QToolTip::add( klbDomainServerList, QString::null );
    kpbUpDomainServerList->setText( QString::null );
    QToolTip::add( kpbUpDomainServerList, tr2i18n( "Move up the selected server on the list (higher priority)" ) );
    kpbDownDomainServerList->setText( QString::null );
    QToolTip::add( kpbDownDomainServerList, tr2i18n( "Move down the selected server on the list (less priority)" ) );
    kpbAddDomainServer->setText( tr2i18n( "&Add..." ) );
    QToolTip::add( kpbAddDomainServer, QString::null );
    kpbEditDomainServer->setText( tr2i18n( "&Edit..." ) );
    QToolTip::add( kpbEditDomainServer, QString::null );
    kpbRemoveDomainServer->setText( tr2i18n( "&Remove" ) );
    QToolTip::add( kpbRemoveDomainServer, QString::null );
    gbKnownHostsList->setTitle( tr2i18n( "Static Hosts" ) );
    klvKnownHosts->header()->setLabel( 0, tr2i18n( "IP Address" ) );
    klvKnownHosts->header()->setLabel( 1, tr2i18n( "Aliases" ) );
    kpbAddKnownHost->setText( tr2i18n( "&Add..." ) );
    QToolTip::add( kpbAddKnownHost, QString::null );
    kpbEditKnownHost->setText( tr2i18n( "&Edit..." ) );
    QToolTip::add( kpbEditKnownHost, QString::null );
    kpbRemoveKnownHost->setText( tr2i18n( "&Remove" ) );
    QToolTip::add( kpbRemoveKnownHost, QString::null );
    tlHostName->setText( tr2i18n( "Host name:" ) );
    QToolTip::add( kleHostName, QString::null );
    QToolTip::add( kleDomainName, QString::null );
    tlDomainName->setText( tr2i18n( "Domain name:" ) );
    tabWidget->changeTab( tab_3, tr2i18n( "Domain Name System" ) );
    buttonGroup2->setTitle( tr2i18n( "Available Network Profiles" ) );
    klvProfilesList->header()->setLabel( 0, tr2i18n( "Name" ) );
    kpbEnableProfile->setText( tr2i18n( "&Load Selected" ) );
    kpbSaveProfile->setText( tr2i18n( "&Save Selected" ) );
    kpbCreateProfile->setText( tr2i18n( "&Create New..." ) );
    kpbDeleteProfile->setText( tr2i18n( "&Delete Selected" ) );
    tabWidget->changeTab( TabPage, tr2i18n( "Network Profiles" ) );
}

#include "knetworkconfdlg.moc"
