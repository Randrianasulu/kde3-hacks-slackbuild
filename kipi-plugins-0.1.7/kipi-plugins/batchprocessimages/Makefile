# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# kipi-plugins/batchprocessimages/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/kipi-plugins-0.1.7
pkglibdir = $(libdir)/kipi-plugins-0.1.7
pkgincludedir = $(includedir)/kipi-plugins-0.1.7
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
subdir = kipi-plugins/batchprocessimages
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(kde_moduledir)" \
	"$(DESTDIR)$(kde_servicesdir)"
kde_moduleLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(kde_module_LTLIBRARIES)
am__DEPENDENCIES_1 =
am_kipiplugin_batchprocessimages_la_OBJECTS =  \
	plugin_batchprocessimages.lo batchprocessimagesitem.lo \
	outputdialog.lo imagepreview.lo renameimagesdialog.lo \
	borderimagesdialog.lo borderoptionsdialog.lo \
	convertimagesdialog.lo convertoptionsdialog.lo \
	filterimagesdialog.lo filteroptionsdialog.lo \
	colorimagesdialog.lo coloroptionsdialog.lo \
	effectimagesdialog.lo effectoptionsdialog.lo \
	recompressimagesdialog.lo recompressoptionsdialog.lo \
	resizeimagesdialog.lo resizeoptionsdialog.lo \
	batchprocessimagesdialog.lo batchprocessimageslist.lo \
	renameimageswidget.lo
#>- kipiplugin_batchprocessimages_la_OBJECTS =  \
#>- 	$(am_kipiplugin_batchprocessimages_la_OBJECTS)
#>+ 14
kipiplugin_batchprocessimages_la_final_OBJECTS = kipiplugin_batchprocessimages_la.all_cpp.lo 
kipiplugin_batchprocessimages_la_nofinal_OBJECTS = plugin_batchprocessimages.lo batchprocessimagesitem.lo \
	outputdialog.lo imagepreview.lo renameimagesdialog.lo \
	borderimagesdialog.lo borderoptionsdialog.lo \
	convertimagesdialog.lo convertoptionsdialog.lo \
	filterimagesdialog.lo filteroptionsdialog.lo \
	colorimagesdialog.lo coloroptionsdialog.lo \
	effectimagesdialog.lo effectoptionsdialog.lo \
	recompressimagesdialog.lo recompressoptionsdialog.lo \
	resizeimagesdialog.lo resizeoptionsdialog.lo \
	batchprocessimagesdialog.lo batchprocessimageslist.lo \
	renameimageswidget.lo renameimagesbase.lo
#kipiplugin_batchprocessimages_la_OBJECTS = $(kipiplugin_batchprocessimages_la_nofinal_OBJECTS)
kipiplugin_batchprocessimages_la_OBJECTS = $(kipiplugin_batchprocessimages_la_final_OBJECTS)
#>- kipiplugin_batchprocessimages_la_LINK = $(LIBTOOL) --tag=CXX \
#>- 	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kipiplugin_batchprocessimages_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 4
kipiplugin_batchprocessimages_la_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kipiplugin_batchprocessimages_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kipiplugin_batchprocessimages_la_SOURCES)
DIST_SOURCES = $(kipiplugin_batchprocessimages_la_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
kde_servicesDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_services_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/guest/botva/src/kipi-plugins-0.1.7/admin/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/guest/botva/src/kipi-plugins-0.1.7/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/guest/botva/src/kipi-plugins-0.1.7/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guest/botva/src/kipi-plugins-0.1.7/admin/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -DNDEBUG -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./kipi-plugins/configure.in.bot $(top_srcdir)/./kipi-plugins/configure.in.in
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -DNDEBUG -DNO_DEBUG -O2 -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOPIDLNG = /usr/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DOXYGEN_PROJECT_NAME = KEG Libraries API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.10
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
F77 = 
FFLAGS = 
FRAMEWORK_COREAUDIO = 
GL_LIBS = -lGL
GMSGFMT = /usr/bin/msgfmt
GPHOTO_CFLAGS = -I/usr/include/gphoto2
GPHOTO_CONFIG = /usr/bin/gphoto2-config
GPHOTO_PORT_CONFIG = /usr/bin/gphoto2-port-config
GREP = /usr/bin/grep
HAVE_GCC_VISIBILITY = 0
INSTALL = /usr/bin/ginstall -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/bin/kconfig_compiler
KDECONFIG = /usr/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = yes
KDE_HAVE_DOT = NO
KDE_INCLUDES = 
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = #
KDE_USE_FINAL_TRUE = 
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
KIPI_PLUGINS_COMMON_INCLUDE = -I$(top_srcdir)/kipi-plugins/common/include
KIPI_PLUGINS_COMMON_LDFLAGS = -L$(top_builddir)/kipi-plugins/common/libkipiplugins
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGPOD_CFLAGS = 
LIBGPOD_LIBS = 
LIBJPEG = -ljpeg
LIBKDCRAW_CFLAGS =  
LIBKDCRAW_LIBS = -lkdcraw  
LIBKDCRAW_LIBS_DEP = 
LIBKEXIV2_CFLAGS =  
LIBKEXIV2_LIBS = -lkexiv2  
LIBKEXIV2_LIBS_DEP = 
LIBKIPI_CFLAGS =  
LIBKIPI_LIBS = -lkipi  
LIBKIPI_LIBS_DEP = 
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBXSLT_CFLAGS = -I/usr/include/libxml2
LIBXSLT_LIBS = -L/usr/lib -lxslt -lxml2 -lz -lm
LIBZ = -lz
LIB_GPHOTO = -L/usr/lib -lgphoto2 -lgphoto2_port -lm -L/usr/lib -lgphoto2_port
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KCAL = -llibkcal
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_TIFF = -ltiff
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guest/botva/src/kipi-plugins-0.1.7/admin/missing --run makeinfo
MAKEKDEWIDGETS = 
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MKDIR_P = /usr/bin/mkdir -p
MOC = /usr/lib/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
PACKAGE = kipi-plugins-0.1.7
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGCONFIGFOUND = yes
PKG_CONFIG = /usr/bin/pkg-config
QTDOCDIR = /usr/lib/qt3/doc/html
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt3/include
QT_LDFLAGS = -L/usr/lib/qt3/lib
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  doc kipi-plugins po
UIC = /usr/lib/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
XSLT_CONFIG = /usr/bin/xslt-config
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R7/include
X_LDFLAGS = -L/usr/X11R7/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /home/guest/botva/src/kipi-plugins-0.1.7/kipi-plugins/batchprocessimages
abs_srcdir = /home/guest/botva/src/kipi-plugins-0.1.7/kipi-plugins/batchprocessimages
abs_top_builddir = /home/guest/botva/src/kipi-plugins-0.1.7
abs_top_srcdir = /home/guest/botva/src/kipi-plugins-0.1.7
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
all_includes = -I/usr/lib/qt3/include -I/usr/X11R7/include 
all_libraries = -L/usr/lib -L/usr/lib/qt3/lib -L/usr/X11R7/lib   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guest/botva/src/kipi-plugins-0.1.7/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/HTML
kde_libs_prefix = /usr
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/lib/qt3/include
qt_libraries = /usr/lib/qt3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_builddir = ../..
top_srcdir = ../..
x_includes = /usr/X11R7/include
x_libraries = /usr/X11R7/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
INCLUDES = $(KIPI_PLUGINS_COMMON_INCLUDE) $(LIBKIPI_CFLAGS) $(LIBKEXIV2_CFLAGS) $(all_includes)
#>- METASOURCES = AUTO
SUBDIRS = data

# Install this plugin in the KDE modules directory
kde_module_LTLIBRARIES = kipiplugin_batchprocessimages.la
kipiplugin_batchprocessimages_la_DEPENDENCIES = $(LIBKIPI_LIBS_DEP) $(LIBKEXIV2_LIBS_DEP)
# Srcs for the plugin
#>- kipiplugin_batchprocessimages_la_SOURCES = plugin_batchprocessimages.cpp batchprocessimagesitem.cpp \
#>- 			   	           outputdialog.cpp imagepreview.cpp renameimagesdialog.cpp \
#>- 					   borderimagesdialog.cpp borderoptionsdialog.cpp \
#>- 					   convertimagesdialog.cpp convertoptionsdialog.cpp \
#>- 					   filterimagesdialog.cpp filteroptionsdialog.cpp \
#>- 					   colorimagesdialog.cpp coloroptionsdialog.cpp \
#>- 					   effectimagesdialog.cpp effectoptionsdialog.cpp \
#>- 					   recompressimagesdialog.cpp recompressoptionsdialog.cpp \
#>- 					   resizeimagesdialog.cpp resizeoptionsdialog.cpp \
#>- 					   batchprocessimagesdialog.cpp \
#>- 					   batchprocessimageslist.cpp \
#>- 					   renameimagesbase.ui renameimageswidget.cpp
#>+ 12
kipiplugin_batchprocessimages_la_SOURCES=plugin_batchprocessimages.cpp batchprocessimagesitem.cpp \
			   	           outputdialog.cpp imagepreview.cpp renameimagesdialog.cpp \
					   borderimagesdialog.cpp borderoptionsdialog.cpp \
					   convertimagesdialog.cpp convertoptionsdialog.cpp \
					   filterimagesdialog.cpp filteroptionsdialog.cpp \
					   colorimagesdialog.cpp coloroptionsdialog.cpp \
					   effectimagesdialog.cpp effectoptionsdialog.cpp \
					   recompressimagesdialog.cpp recompressoptionsdialog.cpp \
					   resizeimagesdialog.cpp resizeoptionsdialog.cpp \
					   batchprocessimagesdialog.cpp \
					   batchprocessimageslist.cpp \
					    renameimageswidget.cpp renameimagesbase.cpp


# Libs needed by the plugin
kipiplugin_batchprocessimages_la_LIBADD = $(LIBKIPI_LIBS) $(LIBKEXIV2_LIBS) $(LIB_KIO) $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_QT)

# LD flags for the plugin
kipiplugin_batchprocessimages_la_LDFLAGS = $(KIPI_PLUGINS_COMMON_LDFLAGS) -module $(KDE_PLUGIN) $(all_libraries) -lkipiplugins

# Install the desktop file needed to detect the plugin
kde_services_DATA = kipiplugin_batchprocessimages.desktop
kipibatchprocessimagesicondir = $(kde_datadir)/kipiplugin_batchprocessimages/icons
kipibatchprocessimagesicon_ICON = AUTO
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  kipi-plugins/batchprocessimages/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  kipi-plugins/batchprocessimages/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  kipi-plugins/batchprocessimages/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  kipi-plugins/batchprocessimages/Makefile
	cd $(top_srcdir) && perl admin/am_edit kipi-plugins/batchprocessimages/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(kde_moduledir)" || $(MKDIR_P) "$(DESTDIR)$(kde_moduledir)"
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(kde_moduledir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(kde_moduledir)/$$f"; \
	  else :; fi; \
	done

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(kde_moduledir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(kde_moduledir)/$$p"; \
	done

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
kipiplugin_batchprocessimages.la: $(kipiplugin_batchprocessimages_la_OBJECTS) $(kipiplugin_batchprocessimages_la_DEPENDENCIES) 
	$(kipiplugin_batchprocessimages_la_LINK) -rpath $(kde_moduledir) $(kipiplugin_batchprocessimages_la_OBJECTS) $(kipiplugin_batchprocessimages_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/batchprocessimagesdialog.Plo
include ./$(DEPDIR)/batchprocessimagesitem.Plo
include ./$(DEPDIR)/batchprocessimageslist.Plo
include ./$(DEPDIR)/borderimagesdialog.Plo
include ./$(DEPDIR)/borderoptionsdialog.Plo
include ./$(DEPDIR)/colorimagesdialog.Plo
include ./$(DEPDIR)/coloroptionsdialog.Plo
include ./$(DEPDIR)/convertimagesdialog.Plo
include ./$(DEPDIR)/convertoptionsdialog.Plo
include ./$(DEPDIR)/effectimagesdialog.Plo
include ./$(DEPDIR)/effectoptionsdialog.Plo
include ./$(DEPDIR)/filterimagesdialog.Plo
include ./$(DEPDIR)/filteroptionsdialog.Plo
include ./$(DEPDIR)/imagepreview.Plo
include ./$(DEPDIR)/outputdialog.Plo
include ./$(DEPDIR)/plugin_batchprocessimages.Plo
include ./$(DEPDIR)/recompressimagesdialog.Plo
include ./$(DEPDIR)/recompressoptionsdialog.Plo
include ./$(DEPDIR)/renameimagesdialog.Plo
include ./$(DEPDIR)/renameimageswidget.Plo
include ./$(DEPDIR)/resizeimagesdialog.Plo
include ./$(DEPDIR)/resizeoptionsdialog.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_servicesDATA: $(kde_services_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_servicesdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_servicesdir)"
	@list='$(kde_services_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_servicesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_servicesdir)/$$f'"; \
	  $(kde_servicesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_servicesdir)/$$f"; \
	done

uninstall-kde_servicesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_services_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_servicesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_servicesdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(kde_servicesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-kde_moduleLTLIBRARIES \
#>- 	install-kde_servicesDATA
#>+ 2
install-data-am: install-kde-icons   \
	install-kde_servicesDATA

install-dvi: install-dvi-recursive

#>- install-exec-am:
#>+ 1
install-exec-am:  install-kde_moduleLTLIBRARIES

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-kde_moduleLTLIBRARIES \
#>- 	uninstall-kde_servicesDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-kde_moduleLTLIBRARIES \
	uninstall-kde_servicesDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic \
	clean-kde_moduleLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kde_moduleLTLIBRARIES \
	install-kde_servicesDATA install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-kde_moduleLTLIBRARIES uninstall-kde_servicesDATA


# i18n translation messages
messages: rc.cpp
	$(XGETTEXT) *.cpp *.h -o $(podir)/kipiplugin_batchprocessimages.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
plugin_batchprocessimages.moc: $(srcdir)/plugin_batchprocessimages.h
	$(MOC) $(srcdir)/plugin_batchprocessimages.h -o plugin_batchprocessimages.moc

#>+ 2
mocs: plugin_batchprocessimages.moc

#>+ 3
borderoptionsdialog.moc: $(srcdir)/borderoptionsdialog.h
	$(MOC) $(srcdir)/borderoptionsdialog.h -o borderoptionsdialog.moc

#>+ 2
mocs: borderoptionsdialog.moc

#>+ 3
borderimagesdialog.moc: $(srcdir)/borderimagesdialog.h
	$(MOC) $(srcdir)/borderimagesdialog.h -o borderimagesdialog.moc

#>+ 2
mocs: borderimagesdialog.moc

#>+ 3
renameimagesdialog.moc: $(srcdir)/renameimagesdialog.h
	$(MOC) $(srcdir)/renameimagesdialog.h -o renameimagesdialog.moc

#>+ 2
mocs: renameimagesdialog.moc

#>+ 3
colorimagesdialog.moc: $(srcdir)/colorimagesdialog.h
	$(MOC) $(srcdir)/colorimagesdialog.h -o colorimagesdialog.moc

#>+ 2
mocs: colorimagesdialog.moc

#>+ 3
outputdialog.moc: $(srcdir)/outputdialog.h
	$(MOC) $(srcdir)/outputdialog.h -o outputdialog.moc

#>+ 2
mocs: outputdialog.moc

#>+ 3
coloroptionsdialog.moc: $(srcdir)/coloroptionsdialog.h
	$(MOC) $(srcdir)/coloroptionsdialog.h -o coloroptionsdialog.moc

#>+ 2
mocs: coloroptionsdialog.moc

#>+ 3
convertoptionsdialog.moc: $(srcdir)/convertoptionsdialog.h
	$(MOC) $(srcdir)/convertoptionsdialog.h -o convertoptionsdialog.moc

#>+ 2
mocs: convertoptionsdialog.moc

#>+ 3
convertimagesdialog.moc: $(srcdir)/convertimagesdialog.h
	$(MOC) $(srcdir)/convertimagesdialog.h -o convertimagesdialog.moc

#>+ 2
mocs: convertimagesdialog.moc

#>+ 3
effectimagesdialog.moc: $(srcdir)/effectimagesdialog.h
	$(MOC) $(srcdir)/effectimagesdialog.h -o effectimagesdialog.moc

#>+ 2
mocs: effectimagesdialog.moc

#>+ 3
filterimagesdialog.moc: $(srcdir)/filterimagesdialog.h
	$(MOC) $(srcdir)/filterimagesdialog.h -o filterimagesdialog.moc

#>+ 2
mocs: filterimagesdialog.moc

#>+ 3
imagepreview.moc: $(srcdir)/imagepreview.h
	$(MOC) $(srcdir)/imagepreview.h -o imagepreview.moc

#>+ 2
mocs: imagepreview.moc

#>+ 3
filteroptionsdialog.moc: $(srcdir)/filteroptionsdialog.h
	$(MOC) $(srcdir)/filteroptionsdialog.h -o filteroptionsdialog.moc

#>+ 2
mocs: filteroptionsdialog.moc

#>+ 3
effectoptionsdialog.moc: $(srcdir)/effectoptionsdialog.h
	$(MOC) $(srcdir)/effectoptionsdialog.h -o effectoptionsdialog.moc

#>+ 2
mocs: effectoptionsdialog.moc

#>+ 3
renameimageswidget.moc: $(srcdir)/renameimageswidget.h
	$(MOC) $(srcdir)/renameimageswidget.h -o renameimageswidget.moc

#>+ 2
mocs: renameimageswidget.moc

#>+ 3
resizeimagesdialog.moc: $(srcdir)/resizeimagesdialog.h
	$(MOC) $(srcdir)/resizeimagesdialog.h -o resizeimagesdialog.moc

#>+ 2
mocs: resizeimagesdialog.moc

#>+ 3
batchprocessimageslist.moc: $(srcdir)/batchprocessimageslist.h
	$(MOC) $(srcdir)/batchprocessimageslist.h -o batchprocessimageslist.moc

#>+ 2
mocs: batchprocessimageslist.moc

#>+ 3
recompressoptionsdialog.moc: $(srcdir)/recompressoptionsdialog.h
	$(MOC) $(srcdir)/recompressoptionsdialog.h -o recompressoptionsdialog.moc

#>+ 2
mocs: recompressoptionsdialog.moc

#>+ 3
resizeoptionsdialog.moc: $(srcdir)/resizeoptionsdialog.h
	$(MOC) $(srcdir)/resizeoptionsdialog.h -o resizeoptionsdialog.moc

#>+ 2
mocs: resizeoptionsdialog.moc

#>+ 3
recompressimagesdialog.moc: $(srcdir)/recompressimagesdialog.h
	$(MOC) $(srcdir)/recompressimagesdialog.h -o recompressimagesdialog.moc

#>+ 2
mocs: recompressimagesdialog.moc

#>+ 3
batchprocessimagesdialog.moc: $(srcdir)/batchprocessimagesdialog.h
	$(MOC) $(srcdir)/batchprocessimagesdialog.h -o batchprocessimagesdialog.moc

#>+ 2
mocs: batchprocessimagesdialog.moc

#>+ 3
clean-metasources:
	-rm -f  plugin_batchprocessimages.moc borderoptionsdialog.moc borderimagesdialog.moc renameimagesdialog.moc colorimagesdialog.moc outputdialog.moc coloroptionsdialog.moc convertoptionsdialog.moc convertimagesdialog.moc effectimagesdialog.moc filterimagesdialog.moc imagepreview.moc filteroptionsdialog.moc effectoptionsdialog.moc renameimageswidget.moc resizeimagesdialog.moc batchprocessimageslist.moc recompressoptionsdialog.moc resizeoptionsdialog.moc recompressimagesdialog.moc batchprocessimagesdialog.moc

#>+ 2
KDE_DIST=hi32-action-recompressimages.png effectoptionsdialog.h filteroptionsdialog.h resizeoptionsdialog.h recompressoptionsdialog.h batchprocessimagesitem.h hi32-action-renameimages.png renameimageswidget.h colorimagesdialog.h recompressimagesdialog.h hi32-action-effectimages.png filterimagesdialog.h convertimagesdialog.h outputdialog.h batchprocessimagesdialog.h hi32-action-colorimages.png batchprocessimageslist.h hi32-action-borderimages.png Makefile.in plugin_batchprocessimages.h hi32-action-convertimages.png borderimagesdialog.h kipiplugin_batchprocessimages.desktop convertoptionsdialog.h hi32-action-resizeimages.png effectimagesdialog.h renameimagesdialog.h coloroptionsdialog.h imagepreview.h hi32-action-filterimages.png renameimagesbase.ui Makefile.am resizeimagesdialog.h borderoptionsdialog.h 

#>+ 4
clean-ui:
	-rm -f \
	renameimagesbase.cpp renameimagesbase.h renameimagesbase.moc 

#>+ 2
docs-am:

#>+ 21
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions
	$(INSTALL_DATA) $(srcdir)/hi32-action-effectimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/effectimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-recompressimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/recompressimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-filterimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/filterimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-renameimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/renameimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-convertimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/convertimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-borderimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/borderimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-resizeimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/resizeimages.png
	$(INSTALL_DATA) $(srcdir)/hi32-action-colorimages.png $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/colorimages.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/effectimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/recompressimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/filterimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/renameimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/convertimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/borderimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/resizeimages.png
	-rm -f $(DESTDIR)$(kipibatchprocessimagesicondir)/hicolor/32x32/actions/colorimages.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  kipi-plugins/batchprocessimages/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  kipi-plugins/batchprocessimages/Makefile
	cd $(top_srcdir) && perl admin/am_edit kipi-plugins/batchprocessimages/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kipiplugin_batchprocessimages_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/plugin_batchprocessimages.cpp $(srcdir)/batchprocessimagesitem.cpp $(srcdir)/outputdialog.cpp $(srcdir)/imagepreview.cpp $(srcdir)/renameimagesdialog.cpp $(srcdir)/borderimagesdialog.cpp $(srcdir)/borderoptionsdialog.cpp $(srcdir)/convertimagesdialog.cpp $(srcdir)/convertoptionsdialog.cpp $(srcdir)/filterimagesdialog.cpp $(srcdir)/filteroptionsdialog.cpp $(srcdir)/colorimagesdialog.cpp $(srcdir)/coloroptionsdialog.cpp $(srcdir)/effectimagesdialog.cpp $(srcdir)/effectoptionsdialog.cpp $(srcdir)/recompressimagesdialog.cpp $(srcdir)/recompressoptionsdialog.cpp $(srcdir)/resizeimagesdialog.cpp $(srcdir)/resizeoptionsdialog.cpp $(srcdir)/batchprocessimagesdialog.cpp $(srcdir)/batchprocessimageslist.cpp $(srcdir)/renameimageswidget.cpp renameimagesbase.cpp  plugin_batchprocessimages.moc renameimagesbase.moc borderoptionsdialog.moc borderimagesdialog.moc renameimagesdialog.moc colorimagesdialog.moc outputdialog.moc coloroptionsdialog.moc effectimagesdialog.moc convertimagesdialog.moc convertoptionsdialog.moc filterimagesdialog.moc imagepreview.moc filteroptionsdialog.moc effectoptionsdialog.moc renameimageswidget.moc resizeimagesdialog.moc batchprocessimageslist.moc recompressoptionsdialog.moc recompressimagesdialog.moc resizeoptionsdialog.moc batchprocessimagesdialog.moc
	@echo 'creating kipiplugin_batchprocessimages_la.all_cpp.cpp ...'; \
	rm -f kipiplugin_batchprocessimages_la.all_cpp.files kipiplugin_batchprocessimages_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kipiplugin_batchprocessimages_la.all_cpp.final; \
	for file in plugin_batchprocessimages.cpp batchprocessimagesitem.cpp outputdialog.cpp imagepreview.cpp renameimagesdialog.cpp borderimagesdialog.cpp borderoptionsdialog.cpp convertimagesdialog.cpp convertoptionsdialog.cpp filterimagesdialog.cpp filteroptionsdialog.cpp colorimagesdialog.cpp coloroptionsdialog.cpp effectimagesdialog.cpp effectoptionsdialog.cpp recompressimagesdialog.cpp recompressoptionsdialog.cpp resizeimagesdialog.cpp resizeoptionsdialog.cpp batchprocessimagesdialog.cpp batchprocessimageslist.cpp renameimageswidget.cpp renameimagesbase.cpp ; do \
	  echo "#include \"$$file\"" >> kipiplugin_batchprocessimages_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kipiplugin_batchprocessimages_la.all_cpp.final; \
	done; \
	cat kipiplugin_batchprocessimages_la.all_cpp.final kipiplugin_batchprocessimages_la.all_cpp.files > kipiplugin_batchprocessimages_la.all_cpp.cpp; \
	rm -f kipiplugin_batchprocessimages_la.all_cpp.final kipiplugin_batchprocessimages_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f kipiplugin_batchprocessimages_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kipiplugin_batchprocessimages_la_OBJECTS="$(kipiplugin_batchprocessimages_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kipiplugin_batchprocessimages_la_OBJECTS="$(kipiplugin_batchprocessimages_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kipiplugin_batchprocessimages_la_OBJECTS="$(kipiplugin_batchprocessimages_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kipiplugin_batchprocessimages_la_OBJECTS="$(kipiplugin_batchprocessimages_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 67
$(srcdir)/recompressoptionsdialog.cpp: renameimagesbase.h 
borderoptionsdialog.o: borderoptionsdialog.moc 
imagepreview.o: imagepreview.moc 
effectimagesdialog.o: effectimagesdialog.moc 
outputdialog.o: outputdialog.moc 
$(srcdir)/effectoptionsdialog.cpp: renameimagesbase.h 
$(srcdir)/recompressimagesdialog.cpp: renameimagesbase.h 
effectoptionsdialog.o: effectoptionsdialog.moc 
renameimagesdialog.o: renameimagesdialog.moc 
batchprocessimageslist.o: batchprocessimageslist.moc 
recompressimagesdialog.o: recompressimagesdialog.moc 
coloroptionsdialog.o: coloroptionsdialog.moc 
nmcheck-am: nmcheck
borderimagesdialog.o: borderimagesdialog.moc 
convertimagesdialog.o: convertimagesdialog.moc 
$(srcdir)/imagepreview.cpp: renameimagesbase.h 
convertimagesdialog.lo: convertimagesdialog.moc 
$(srcdir)/batchprocessimagesdialog.cpp: renameimagesbase.h 
borderimagesdialog.lo: borderimagesdialog.moc 
resizeimagesdialog.lo: resizeimagesdialog.moc 
$(srcdir)/plugin_batchprocessimages.cpp: renameimagesbase.h 
colorimagesdialog.lo: colorimagesdialog.moc 
recompressoptionsdialog.lo: recompressoptionsdialog.moc 
coloroptionsdialog.lo: coloroptionsdialog.moc 
plugin_batchprocessimages.o: plugin_batchprocessimages.moc 
recompressoptionsdialog.o: recompressoptionsdialog.moc 
resizeoptionsdialog.o: resizeoptionsdialog.moc 
effectoptionsdialog.lo: effectoptionsdialog.moc 
batchprocessimageslist.lo: batchprocessimageslist.moc 
renameimagesdialog.lo: renameimagesdialog.moc 
borderoptionsdialog.lo: borderoptionsdialog.moc 
batchprocessimagesdialog.o: batchprocessimagesdialog.moc 
plugin_batchprocessimages.lo: plugin_batchprocessimages.moc 
outputdialog.lo: outputdialog.moc 
$(srcdir)/convertoptionsdialog.cpp: renameimagesbase.h 
$(srcdir)/convertimagesdialog.cpp: renameimagesbase.h 
$(srcdir)/outputdialog.cpp: renameimagesbase.h 
$(srcdir)/borderimagesdialog.cpp: renameimagesbase.h 
$(srcdir)/coloroptionsdialog.cpp: renameimagesbase.h 
convertoptionsdialog.lo: convertoptionsdialog.moc 
effectimagesdialog.lo: effectimagesdialog.moc 
filterimagesdialog.lo: filterimagesdialog.moc 
resizeimagesdialog.o: resizeimagesdialog.moc 
resizeoptionsdialog.lo: resizeoptionsdialog.moc 
renameimageswidget.lo: renameimageswidget.moc 
batchprocessimagesdialog.lo: batchprocessimagesdialog.moc 
$(srcdir)/colorimagesdialog.cpp: renameimagesbase.h 
imagepreview.lo: imagepreview.moc 
$(srcdir)/resizeimagesdialog.cpp: renameimagesbase.h 
filterimagesdialog.o: filterimagesdialog.moc 
recompressimagesdialog.lo: recompressimagesdialog.moc 
$(srcdir)/borderoptionsdialog.cpp: renameimagesbase.h 
colorimagesdialog.o: colorimagesdialog.moc 
filteroptionsdialog.o: filteroptionsdialog.moc 
$(srcdir)/filterimagesdialog.cpp: renameimagesbase.h 
nmcheck: 
renameimageswidget.o: renameimageswidget.moc 
$(srcdir)/resizeoptionsdialog.cpp: renameimagesbase.h 
$(srcdir)/renameimagesdialog.cpp: renameimagesbase.h 
$(srcdir)/effectimagesdialog.cpp: renameimagesbase.h 
filteroptionsdialog.lo: filteroptionsdialog.moc 
convertoptionsdialog.o: convertoptionsdialog.moc 
$(srcdir)/renameimageswidget.cpp: renameimagesbase.h 
$(srcdir)/batchprocessimageslist.cpp: renameimagesbase.h 
$(srcdir)/batchprocessimagesitem.cpp: renameimagesbase.h 
$(srcdir)/filteroptionsdialog.cpp: renameimagesbase.h 

#>+ 15
renameimagesbase.cpp: $(srcdir)/renameimagesbase.ui renameimagesbase.h renameimagesbase.moc
	rm -f renameimagesbase.cpp
	echo '#include <kdialog.h>' > renameimagesbase.cpp
	echo '#include <klocale.h>' >> renameimagesbase.cpp
	$(UIC) -tr ${UIC_TR} -i renameimagesbase.h $(srcdir)/renameimagesbase.ui > renameimagesbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" renameimagesbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_renameimagesbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> renameimagesbase.cpp ;\
	rm -f renameimagesbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "renameimagesbase.moc"' >> renameimagesbase.cpp; else rm -f renameimagesbase.cpp ; exit $$ret ; fi

renameimagesbase.h: $(srcdir)/renameimagesbase.ui
	rm -rf renameimagesbase.h;
	$(UIC) $(srcdir)/renameimagesbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> renameimagesbase.h ;
renameimagesbase.moc: renameimagesbase.h
	$(MOC) renameimagesbase.h -o renameimagesbase.moc
