# Makefile.in generated by automake 1.9.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# kdebluetooth/libqobex/qobex/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#   This file is part of libqobex.
#
#   Copyright (c) 2003 Mathias Froehlich <Mathias.Froehlich@web.de>
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Library General Public
#   License as published by the Free Software Foundation; either
#   version 2 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public License
#   along with this library; see the file COPYING.LIB.  If not, write to
#   the Free Software Foundation, Inc., 51 Franklin Steet, Fifth Floor,
#   Boston, MA 02110-1301, USA.
#


srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/kdebluetooth-1.0~beta9~r769275
pkglibdir = $(libdir)/kdebluetooth-1.0~beta9~r769275
pkgincludedir = $(includedir)/kdebluetooth-1.0~beta9~r769275
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/ginstall -c -p
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
subdir = kdebluetooth/libqobex/qobex
DIST_COMMON = $(qobexinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(qobexincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libqobex_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libqobex_la_OBJECTS = qobexobject.lo qobexheader.lo \
	qobexlengthvaluebase.lo qobexauth.lo qobexapparam.lo \
	qobexbase.lo qobexclient.lo qobextransport.lo qobexuuid.lo \
	qobexserver.lo qobexserverconnection.lo qobexserverops.lo \
	qobexnullserverops.lo qobexbfbtransport.lo qbfbframe.lo \
	qbfbdata.lo qttylock.lo qserialdevice.lo \
	qobexericssontransport.lo qobexserialtransport.lo \
	qobexintransport.lo qobexirdatransport.lo qobexbttransport.lo
#>- libqobex_la_OBJECTS = $(am_libqobex_la_OBJECTS)
#>+ 11
libqobex_la_final_OBJECTS = libqobex_la.all_cpp.lo 
libqobex_la_nofinal_OBJECTS = qobexobject.lo qobexheader.lo \
	qobexlengthvaluebase.lo qobexauth.lo qobexapparam.lo \
	qobexbase.lo qobexclient.lo qobextransport.lo qobexuuid.lo \
	qobexserver.lo qobexserverconnection.lo qobexserverops.lo \
	qobexnullserverops.lo qobexbfbtransport.lo qbfbframe.lo \
	qbfbdata.lo qttylock.lo qserialdevice.lo \
	qobexericssontransport.lo qobexserialtransport.lo \
	qobexintransport.lo qobexirdatransport.lo qobexbttransport.lo
libqobex_la_OBJECTS = $(libqobex_la_nofinal_OBJECTS)
#libqobex_la_OBJECTS = $(libqobex_la_final_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libqobex_la_SOURCES)
DIST_SOURCES = $(libqobex_la_SOURCES)
qobexincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(qobexinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = ${SHELL} /home/guest/botva/src/kdebluetooth-1.0~beta9~r769275/admin/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/guest/botva/src/kdebluetooth-1.0~beta9~r769275/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/guest/botva/src/kdebluetooth-1.0~beta9~r769275/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guest/botva/src/kdebluetooth-1.0~beta9~r769275/admin/missing --run automake-1.9
AWK = gawk
BLUETOOTH_CFLAGS =  
BLUETOOTH_LIBS = -lbluetooth  
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -DNDEBUG -O2  -g -O2 -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./kdebluetooth/configure.in.bot $(top_srcdir)/./kdebluetooth/configure.in.in $(top_srcdir)/./kdebluetooth/kbtobexsrv/configure.in.in $(top_srcdir)/./kdebluetooth/kdebluetooth-common/dunhandler/configure.in.in $(top_srcdir)/./kdebluetooth/kdebluetooth-common/faxhandler/configure.in.in $(top_srcdir)/./kdebluetooth/libkobex/configure.in.in $(top_srcdir)/./kdebluetooth/libqobex/configure.in.in
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -DNDEBUG -DNO_DEBUG -O2 -g -O2 -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION
CYGPATH_W = echo
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include  
DBUS_LIBS = -ldbus-1  
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOPIDLNG = /usr/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DOXYGEN_PROJECT_NAME = The API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.7
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
F77 = 
FFLAGS = 
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_GCC_VISIBILITY = 0
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
KBTOBEXSRV_BINDIR = /usr/lib/kdebluetooth/servers
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/bin/kconfig_compiler
KDECONFIG = /usr/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = yes
KDE_HAVE_DOT = NO
KDE_INCLUDES = 
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_ARTS = -lartskde
LIB_BLUETOOTH = 
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_LOCKDEV = 
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SDP = 
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guest/botva/src/kdebluetooth-1.0~beta9~r769275/admin/missing --run makeinfo
MAKEKDEWIDGETS = 
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MOC = /usr/lib/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
OPENOBEX_CFLAGS =  
OPENOBEX_LIBS = -lopenobex  
PACKAGE = kdebluetooth-1.0~beta9~r769275
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
QOBEX_BTTRANSPORT_FALSE = 
QOBEX_BTTRANSPORT_TRUE = #
QOBEX_IRDATRANSPORT_FALSE = #
QOBEX_IRDATRANSPORT_TRUE = 
QTDOCDIR = /usr/lib/qt3/doc/html
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt3/include
QT_LDFLAGS = -L/usr/lib/qt3/lib
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  doc kdebluetooth po
UIC = /usr/lib/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.7
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R7/include
X_LDFLAGS = -L/usr/X11R7/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
all_includes = -I/usr/lib/qt3/include -I/usr/X11R7/include 
all_libraries = -L/usr/lib -L/usr/lib/qt3/lib -L/usr/X11R7/lib   
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
doc_SUBDIR_included_FALSE = #
doc_SUBDIR_included_TRUE = 
docdir = ${datarootdir}/doc/${PACKAGE}
dunhandler_dir = /usr/share/apps
dvidir = ${docdir}
exec_prefix = ${prefix}
faxhandler_dir = /usr/share/apps
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
include_ARTS_FALSE = #
include_ARTS_TRUE = 
include_x11_FALSE = #
include_x11_TRUE = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/guest/botva/src/kdebluetooth-1.0~beta9~r769275/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/HTML
kde_libs_prefix = /usr
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
kdebluetooth_SUBDIR_included_FALSE = #
kdebluetooth_SUBDIR_included_TRUE = 
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
po_SUBDIR_included_FALSE = #
po_SUBDIR_included_TRUE = 
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/lib/qt3/include
qt_libraries = /usr/lib/qt3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
unsermake_enable_pch_FALSE = 
unsermake_enable_pch_TRUE = #
x_includes = /usr/X11R7/include
x_libraries = /usr/X11R7/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
AM_CPPFLAGS = $(QT_INCLUDES)
lib_LTLIBRARIES = libqobex.la
QOBEX_VERSION = 0:9:0
INCLUDES = -I$(top_srcdir)/kdebluetooth -Ikio $(all_includes) $(OPENOBEX_CFLAGS) $(BLUETOOTH_CFLAGS)
qobexincludedir = $(includedir)/qobex
qobexinclude_HEADERS = \
  qobexobject.h qobexheader.h \
  qobexlengthvaluebase.h qobexauth.h qobexapparam.h \
  qobexbase.h qobexclient.h qobextransport.h qobexuuid.h qobexarray.h \
  qobexserver.h qobexserverconnection.h \
  qobexserverops.h \
  qobexbfbtransport.h qbfbframe.h qbfbdata.h \
  qttylock.h qserialdevice.h qbytebuffer.h \
  qobexericssontransport.h \
  qobexserialtransport.h \
  qobexintransport.h \
  qobexirdatransport.h \
  qobexbttransport.h

libqobex_la_SOURCES = \
  qobexobject.cpp qobexheader.cpp \
  qobexlengthvaluebase.cpp qobexauth.cpp qobexapparam.cpp \
  qobexbase.cpp qobexclient.cpp qobextransport.cpp qobexuuid.cpp \
  qobexserver.cpp qobexserverconnection.cpp \
  qobexserverops.cpp qobexnullserverops.cpp \
  qobexbfbtransport.cpp qbfbframe.cpp qbfbdata.cpp \
  qttylock.cpp qserialdevice.cpp \
  qobexericssontransport.cpp \
  qobexserialtransport.cpp \
  qobexintransport.cpp \
  qobexirdatransport.cpp \
  qobexbttransport.cpp

libqobex_la_LIBADD = $(BTTRANSPORT_OBJ) $(IRDATRANSPORT_OBJ) $(KDE_RPATH) $(OPENOBEX_LIBS) -lkio $(LIB_KDEUI)
libqobex_la_LDFLAGS = -version-info $(QOBEX_VERSION) $(QT_LDFLAGS) $(LIB_QT) \
  $(BLUETOOTH_LIBS) $(LIB_LOCKDEV) $(all_libraries) $(all_libraries)

#>- METASOURCES = AUTO
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdebluetooth/libqobex/qobex/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kdebluetooth/libqobex/qobex/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdebluetooth/libqobex/qobex/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kdebluetooth/libqobex/qobex/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdebluetooth/libqobex/qobex/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libqobex.la: $(libqobex_la_OBJECTS) $(libqobex_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libqobex_la_LDFLAGS) $(libqobex_la_OBJECTS) $(libqobex_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/qbfbdata.Plo
include ./$(DEPDIR)/qbfbframe.Plo
include ./$(DEPDIR)/qobexapparam.Plo
include ./$(DEPDIR)/qobexauth.Plo
include ./$(DEPDIR)/qobexbase.Plo
include ./$(DEPDIR)/qobexbfbtransport.Plo
include ./$(DEPDIR)/qobexbttransport.Plo
include ./$(DEPDIR)/qobexclient.Plo
include ./$(DEPDIR)/qobexericssontransport.Plo
include ./$(DEPDIR)/qobexheader.Plo
include ./$(DEPDIR)/qobexintransport.Plo
include ./$(DEPDIR)/qobexirdatransport.Plo
include ./$(DEPDIR)/qobexlengthvaluebase.Plo
include ./$(DEPDIR)/qobexnullserverops.Plo
include ./$(DEPDIR)/qobexobject.Plo
include ./$(DEPDIR)/qobexserialtransport.Plo
include ./$(DEPDIR)/qobexserver.Plo
include ./$(DEPDIR)/qobexserverconnection.Plo
include ./$(DEPDIR)/qobexserverops.Plo
include ./$(DEPDIR)/qobextransport.Plo
include ./$(DEPDIR)/qobexuuid.Plo
include ./$(DEPDIR)/qserialdevice.Plo
include ./$(DEPDIR)/qttylock.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-qobexincludeHEADERS: $(qobexinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(qobexincludedir)" || $(mkdir_p) "$(DESTDIR)$(qobexincludedir)"
	@list='$(qobexinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(qobexincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(qobexincludedir)/$$f'"; \
	  $(qobexincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(qobexincludedir)/$$f"; \
	done

uninstall-qobexincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(qobexinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(qobexincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(qobexincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(qobexincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-bcheck clean-final  clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-qobexincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-qobexincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-qobexincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-qobexincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


#>+ 3
qobexbase.moc: $(srcdir)/qobexbase.h
	$(MOC) $(srcdir)/qobexbase.h -o qobexbase.moc

#>+ 2
mocs: qobexbase.moc

#>+ 3
qobexbfbtransport.moc: $(srcdir)/qobexbfbtransport.h
	$(MOC) $(srcdir)/qobexbfbtransport.h -o qobexbfbtransport.moc

#>+ 2
mocs: qobexbfbtransport.moc

#>+ 3
qobexserver.moc: $(srcdir)/qobexserver.h
	$(MOC) $(srcdir)/qobexserver.h -o qobexserver.moc

#>+ 2
mocs: qobexserver.moc

#>+ 3
qobexericssontransport.moc: $(srcdir)/qobexericssontransport.h
	$(MOC) $(srcdir)/qobexericssontransport.h -o qobexericssontransport.moc

#>+ 2
mocs: qobexericssontransport.moc

#>+ 3
qobextransport.moc: $(srcdir)/qobextransport.h
	$(MOC) $(srcdir)/qobextransport.h -o qobextransport.moc

#>+ 2
mocs: qobextransport.moc

#>+ 3
qobexclient.moc: $(srcdir)/qobexclient.h
	$(MOC) $(srcdir)/qobexclient.h -o qobexclient.moc

#>+ 2
mocs: qobexclient.moc

#>+ 3
qobexserverconnection.moc: $(srcdir)/qobexserverconnection.h
	$(MOC) $(srcdir)/qobexserverconnection.h -o qobexserverconnection.moc

#>+ 2
mocs: qobexserverconnection.moc

#>+ 3
clean-metasources:
	-rm -f  qobexbase.moc qobexbfbtransport.moc qobexserver.moc qobexericssontransport.moc qobextransport.moc qobexclient.moc qobexserverconnection.moc

#>+ 2
KDE_DIST=qobexnullserverops.h Makefile.in Makefile.am 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdebluetooth/libqobex/qobex/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kdebluetooth/libqobex/qobex/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdebluetooth/libqobex/qobex/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in $(qobexinclude_HEADERS); do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libqobex_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/qobexobject.cpp $(srcdir)/qobexheader.cpp $(srcdir)/qobexlengthvaluebase.cpp $(srcdir)/qobexauth.cpp $(srcdir)/qobexapparam.cpp $(srcdir)/qobexbase.cpp $(srcdir)/qobexclient.cpp $(srcdir)/qobextransport.cpp $(srcdir)/qobexuuid.cpp $(srcdir)/qobexserver.cpp $(srcdir)/qobexserverconnection.cpp $(srcdir)/qobexserverops.cpp $(srcdir)/qobexnullserverops.cpp $(srcdir)/qobexbfbtransport.cpp $(srcdir)/qbfbframe.cpp $(srcdir)/qbfbdata.cpp $(srcdir)/qttylock.cpp $(srcdir)/qserialdevice.cpp $(srcdir)/qobexericssontransport.cpp $(srcdir)/qobexserialtransport.cpp $(srcdir)/qobexintransport.cpp $(srcdir)/qobexirdatransport.cpp $(srcdir)/qobexbttransport.cpp  qobexbase.moc qobexbfbtransport.moc qobexericssontransport.moc qobexserver.moc qobextransport.moc qobexserverconnection.moc qobexclient.moc
	@echo 'creating libqobex_la.all_cpp.cpp ...'; \
	rm -f libqobex_la.all_cpp.files libqobex_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libqobex_la.all_cpp.final; \
	for file in qobexobject.cpp qobexheader.cpp qobexlengthvaluebase.cpp qobexauth.cpp qobexapparam.cpp qobexbase.cpp qobexclient.cpp qobextransport.cpp qobexuuid.cpp qobexserver.cpp qobexserverconnection.cpp qobexserverops.cpp qobexnullserverops.cpp qobexbfbtransport.cpp qbfbframe.cpp qbfbdata.cpp qttylock.cpp qserialdevice.cpp qobexericssontransport.cpp qobexserialtransport.cpp qobexintransport.cpp qobexirdatransport.cpp qobexbttransport.cpp ; do \
	  echo "#include \"$$file\"" >> libqobex_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libqobex_la.all_cpp.final; \
	done; \
	cat libqobex_la.all_cpp.final libqobex_la.all_cpp.files > libqobex_la.all_cpp.cpp; \
	rm -f libqobex_la.all_cpp.final libqobex_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libqobex_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libqobex_la_OBJECTS="$(libqobex_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libqobex_la_OBJECTS="$(libqobex_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libqobex_la_OBJECTS="$(libqobex_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libqobex_la_OBJECTS="$(libqobex_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 17
qobexericssontransport.o: qobexericssontransport.moc 
qobexclient.lo: qobexclient.moc 
qobexserverconnection.o: qobexserverconnection.moc 
qobexserver.o: qobexserver.moc 
qobexserverconnection.lo: qobexserverconnection.moc 
qobexbase.o: qobexbase.moc 
qobexclient.o: qobexclient.moc 
qobexericssontransport.lo: qobexericssontransport.moc 
nmcheck: 
qobexbfbtransport.o: qobexbfbtransport.moc 
nmcheck-am: nmcheck
qobexbase.lo: qobexbase.moc 
qobexserver.lo: qobexserver.moc 
qobextransport.o: qobextransport.moc 
qobextransport.lo: qobextransport.moc 
qobexbfbtransport.lo: qobexbfbtransport.moc 
