# Makefile.in generated by automake 1.9.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = kdebluetooth/libkbluetooth
DIST_COMMON = README $(libkbluetoothinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in AUTHORS COPYING \
	ChangeLog INSTALL
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libkbluetoothincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libkbluetooth_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libkbluetooth_la_OBJECTS = adapter.lo authagent.lo dbusinit.lo \
	dbussignal.lo dbusfilter.lo manager.lo service.lo \
	passkeyagent.lo servicerecord.lo devicemimeconverter.lo \
	inputdevice.lo inputmanager.lo deviceaddress.lo \
	rfcommsocket.lo servicediscovery.lo sdpservice.lo sdpdevice.lo \
	sdpattribute.lo serviceselectionwidget.lo inquiry.lo \
	hcisocket.lo hcidefault.lo namerequest.lo adapter_old.lo \
	obexmanager.lo obexsession.lo
#>- libkbluetooth_la_OBJECTS = $(am_libkbluetooth_la_OBJECTS)
#>+ 11
libkbluetooth_la_final_OBJECTS = libkbluetooth_la.all_cpp.lo 
libkbluetooth_la_nofinal_OBJECTS = adapter.lo authagent.lo dbusinit.lo \
	dbussignal.lo dbusfilter.lo manager.lo service.lo \
	passkeyagent.lo servicerecord.lo devicemimeconverter.lo \
	inputdevice.lo inputmanager.lo deviceaddress.lo \
	rfcommsocket.lo servicediscovery.lo sdpservice.lo sdpdevice.lo \
	sdpattribute.lo serviceselectionwidget.lo inquiry.lo \
	hcisocket.lo hcidefault.lo namerequest.lo adapter_old.lo \
	obexmanager.lo obexsession.lo serviceselectionwidgetbase.lo
@KDE_USE_FINAL_FALSE@libkbluetooth_la_OBJECTS = $(libkbluetooth_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkbluetooth_la_OBJECTS = $(libkbluetooth_la_final_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libkbluetooth_la_SOURCES)
DIST_SOURCES = $(libkbluetooth_la_SOURCES)
libkbluetoothincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libkbluetoothinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLUETOOTH_CFLAGS = @BLUETOOTH_CFLAGS@
BLUETOOTH_LIBS = @BLUETOOTH_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KBTOBEXSRV_BINDIR = @KBTOBEXSRV_BINDIR@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_ARTS = @LIB_ARTS@
LIB_BLUETOOTH = @LIB_BLUETOOTH@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_LOCKDEV = @LIB_LOCKDEV@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SDP = @LIB_SDP@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OPENOBEX_CFLAGS = @OPENOBEX_CFLAGS@
OPENOBEX_LIBS = @OPENOBEX_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QOBEX_BTTRANSPORT_FALSE = @QOBEX_BTTRANSPORT_FALSE@
QOBEX_BTTRANSPORT_TRUE = @QOBEX_BTTRANSPORT_TRUE@
QOBEX_IRDATRANSPORT_FALSE = @QOBEX_IRDATRANSPORT_FALSE@
QOBEX_IRDATRANSPORT_TRUE = @QOBEX_IRDATRANSPORT_TRUE@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
doc_SUBDIR_included_FALSE = @doc_SUBDIR_included_FALSE@
doc_SUBDIR_included_TRUE = @doc_SUBDIR_included_TRUE@
docdir = @docdir@
dunhandler_dir = @dunhandler_dir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
faxhandler_dir = @faxhandler_dir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdebluetooth_SUBDIR_included_FALSE = @kdebluetooth_SUBDIR_included_FALSE@
kdebluetooth_SUBDIR_included_TRUE = @kdebluetooth_SUBDIR_included_TRUE@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
po_SUBDIR_included_FALSE = @po_SUBDIR_included_FALSE@
po_SUBDIR_included_TRUE = @po_SUBDIR_included_TRUE@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
lib_LTLIBRARIES = libkbluetooth.la
INCLUDES = $(all_includes) $(DBUS_CFLAGS) $(BLUETOOTH_CFLAGS)
#>- libkbluetooth_la_SOURCES = adapter.cpp authagent.cpp dbusinit.cpp dbussignal.cpp dbusfilter.cpp \
#>- 			   manager.cpp service.cpp passkeyagent.cpp \
#>- 			   servicerecord.cpp devicemimeconverter.cpp inputdevice.cpp inputmanager.cpp deviceaddress.cpp \
#>- 			   rfcommsocket.cpp serviceselectionwidgetbase.ui servicediscovery.cpp sdpservice.cpp \
#>- 			   sdpdevice.cpp sdpattribute.cpp serviceselectionwidget.cpp inquiry.cpp hcisocket.cpp hcidefault.cpp \
#>- 			   namerequest.cpp adapter_old.cpp obexmanager.cpp obexsession.cpp
#>+ 6
libkbluetooth_la_SOURCES=adapter.cpp authagent.cpp dbusinit.cpp dbussignal.cpp dbusfilter.cpp \
			   manager.cpp service.cpp passkeyagent.cpp \
			   servicerecord.cpp devicemimeconverter.cpp inputdevice.cpp inputmanager.cpp deviceaddress.cpp \
			   rfcommsocket.cpp  servicediscovery.cpp sdpservice.cpp \
			   sdpdevice.cpp sdpattribute.cpp serviceselectionwidget.cpp inquiry.cpp hcisocket.cpp hcidefault.cpp \
			   namerequest.cpp adapter_old.cpp obexmanager.cpp obexsession.cpp serviceselectionwidgetbase.cpp

libkbluetooth_la_LDFLAGS = $(all_libraries)
libkbluetooth_la_LIBADD = $(LIB_KDECORE) $(DBUS_LIBS) $(LIB_KIO) $(BLUETOOTH_LIBS) -ldbus-qt-1
libkbluetoothincludedir = $(includedir)/libkbluetooth
libkbluetoothinclude_HEADERS = adapter.h dbusinit.h dbussignal.h dbussignal.h manager.h inputdevice.h inputmanager.h \
			       security.h dbusfilter.h service.h passkeyagent.h servicerecord.h devicemimeconverter.h \
                               deviceaddress.h rfcommsocket.h servicediscovery.h sdpservice.h namerequest.h adapter_old.h \
                               sdpdevice.h sdpattribute.h serviceselectionwidget.h inquiry.h hcisocket.h hcidefault.h \
 	 	 	 	 	 	 	    obexmanager.cpp obexsession.cpp

#>- METASOURCES = AUTO
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdebluetooth/libkbluetooth/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kdebluetooth/libkbluetooth/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdebluetooth/libkbluetooth/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kdebluetooth/libkbluetooth/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdebluetooth/libkbluetooth/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libkbluetooth.la: $(libkbluetooth_la_OBJECTS) $(libkbluetooth_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libkbluetooth_la_LDFLAGS) $(libkbluetooth_la_OBJECTS) $(libkbluetooth_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adapter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adapter_old.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/authagent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbusfilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbusinit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbussignal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deviceaddress.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicemimeconverter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hcidefault.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hcisocket.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inputdevice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inputmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inquiry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/manager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/namerequest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/obexmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/obexsession.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/passkeyagent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rfcommsocket.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sdpattribute.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sdpdevice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sdpservice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/service.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/servicediscovery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/servicerecord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serviceselectionwidget.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libkbluetoothincludeHEADERS: $(libkbluetoothinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libkbluetoothincludedir)" || $(mkdir_p) "$(DESTDIR)$(libkbluetoothincludedir)"
	@list='$(libkbluetoothinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libkbluetoothincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libkbluetoothincludedir)/$$f'"; \
	  $(libkbluetoothincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libkbluetoothincludedir)/$$f"; \
	done

uninstall-libkbluetoothincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libkbluetoothinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libkbluetoothincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libkbluetoothincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libkbluetoothincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libkbluetoothincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libkbluetoothincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-libkbluetoothincludeHEADERS \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libkbluetoothincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


#>+ 3
hcidefault.moc: $(srcdir)/hcidefault.h
	$(MOC) $(srcdir)/hcidefault.h -o hcidefault.moc

#>+ 2
mocs: hcidefault.moc

#>+ 3
obexmanager.moc: $(srcdir)/obexmanager.h
	$(MOC) $(srcdir)/obexmanager.h -o obexmanager.moc

#>+ 2
mocs: obexmanager.moc

#>+ 3
inputmanager.moc: $(srcdir)/inputmanager.h
	$(MOC) $(srcdir)/inputmanager.h -o inputmanager.moc

#>+ 2
mocs: inputmanager.moc

#>+ 3
rfcommsocket.moc: $(srcdir)/rfcommsocket.h
	$(MOC) $(srcdir)/rfcommsocket.h -o rfcommsocket.moc

#>+ 2
mocs: rfcommsocket.moc

#>+ 3
dbusinit.moc: $(srcdir)/dbusinit.h
	$(MOC) $(srcdir)/dbusinit.h -o dbusinit.moc

#>+ 2
mocs: dbusinit.moc

#>+ 3
serviceselectionwidget.moc: $(srcdir)/serviceselectionwidget.h
	$(MOC) $(srcdir)/serviceselectionwidget.h -o serviceselectionwidget.moc

#>+ 2
mocs: serviceselectionwidget.moc

#>+ 3
inputdevice.moc: $(srcdir)/inputdevice.h
	$(MOC) $(srcdir)/inputdevice.h -o inputdevice.moc

#>+ 2
mocs: inputdevice.moc

#>+ 3
authagent.moc: $(srcdir)/authagent.h
	$(MOC) $(srcdir)/authagent.h -o authagent.moc

#>+ 2
mocs: authagent.moc

#>+ 3
passkeyagent.moc: $(srcdir)/passkeyagent.h
	$(MOC) $(srcdir)/passkeyagent.h -o passkeyagent.moc

#>+ 2
mocs: passkeyagent.moc

#>+ 3
inquiry.moc: $(srcdir)/inquiry.h
	$(MOC) $(srcdir)/inquiry.h -o inquiry.moc

#>+ 2
mocs: inquiry.moc

#>+ 3
service.moc: $(srcdir)/service.h
	$(MOC) $(srcdir)/service.h -o service.moc

#>+ 2
mocs: service.moc

#>+ 3
manager.moc: $(srcdir)/manager.h
	$(MOC) $(srcdir)/manager.h -o manager.moc

#>+ 2
mocs: manager.moc

#>+ 3
adapter.moc: $(srcdir)/adapter.h
	$(MOC) $(srcdir)/adapter.h -o adapter.moc

#>+ 2
mocs: adapter.moc

#>+ 3
servicediscovery.moc: $(srcdir)/servicediscovery.h
	$(MOC) $(srcdir)/servicediscovery.h -o servicediscovery.moc

#>+ 2
mocs: servicediscovery.moc

#>+ 3
hcisocket.moc: $(srcdir)/hcisocket.h
	$(MOC) $(srcdir)/hcisocket.h -o hcisocket.moc

#>+ 2
mocs: hcisocket.moc

#>+ 3
obexsession.moc: $(srcdir)/obexsession.h
	$(MOC) $(srcdir)/obexsession.h -o obexsession.moc

#>+ 2
mocs: obexsession.moc

#>+ 3
namerequest.moc: $(srcdir)/namerequest.h
	$(MOC) $(srcdir)/namerequest.h -o namerequest.moc

#>+ 2
mocs: namerequest.moc

#>+ 3
clean-metasources:
	-rm -f  hcidefault.moc obexmanager.moc inputmanager.moc rfcommsocket.moc dbusinit.moc serviceselectionwidget.moc inputdevice.moc authagent.moc passkeyagent.moc inquiry.moc service.moc manager.moc adapter.moc servicediscovery.moc hcisocket.moc obexsession.moc namerequest.moc

#>+ 2
KDE_DIST=obexmanager.h Doxyfile Makefile.in serviceselectionwidgetbase.ui authagent.h obexsession.h Makefile.am 

#>+ 4
clean-ui:
	-rm -f \
	serviceselectionwidgetbase.cpp serviceselectionwidgetbase.h serviceselectionwidgetbase.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdebluetooth/libkbluetooth/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kdebluetooth/libkbluetooth/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdebluetooth/libkbluetooth/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in $(libkbluetoothinclude_HEADERS); do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkbluetooth_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/adapter.cpp $(srcdir)/authagent.cpp $(srcdir)/dbusinit.cpp $(srcdir)/dbussignal.cpp $(srcdir)/dbusfilter.cpp $(srcdir)/manager.cpp $(srcdir)/service.cpp $(srcdir)/passkeyagent.cpp $(srcdir)/servicerecord.cpp $(srcdir)/devicemimeconverter.cpp $(srcdir)/inputdevice.cpp $(srcdir)/inputmanager.cpp $(srcdir)/deviceaddress.cpp $(srcdir)/rfcommsocket.cpp $(srcdir)/servicediscovery.cpp $(srcdir)/sdpservice.cpp $(srcdir)/sdpdevice.cpp $(srcdir)/sdpattribute.cpp $(srcdir)/serviceselectionwidget.cpp $(srcdir)/inquiry.cpp $(srcdir)/hcisocket.cpp $(srcdir)/hcidefault.cpp $(srcdir)/namerequest.cpp $(srcdir)/adapter_old.cpp $(srcdir)/obexmanager.cpp $(srcdir)/obexsession.cpp serviceselectionwidgetbase.cpp  hcidefault.moc serviceselectionwidgetbase.moc obexmanager.moc inputmanager.moc rfcommsocket.moc dbusinit.moc serviceselectionwidget.moc inputdevice.moc authagent.moc passkeyagent.moc inquiry.moc service.moc manager.moc adapter.moc obexsession.moc servicediscovery.moc hcisocket.moc namerequest.moc
	@echo 'creating libkbluetooth_la.all_cpp.cpp ...'; \
	rm -f libkbluetooth_la.all_cpp.files libkbluetooth_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkbluetooth_la.all_cpp.final; \
	for file in adapter.cpp authagent.cpp dbusinit.cpp dbussignal.cpp dbusfilter.cpp manager.cpp service.cpp passkeyagent.cpp servicerecord.cpp devicemimeconverter.cpp inputdevice.cpp inputmanager.cpp deviceaddress.cpp rfcommsocket.cpp servicediscovery.cpp sdpservice.cpp sdpdevice.cpp sdpattribute.cpp serviceselectionwidget.cpp inquiry.cpp hcisocket.cpp hcidefault.cpp namerequest.cpp adapter_old.cpp obexmanager.cpp obexsession.cpp serviceselectionwidgetbase.cpp ; do \
	  echo "#include \"$$file\"" >> libkbluetooth_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkbluetooth_la.all_cpp.final; \
	done; \
	cat libkbluetooth_la.all_cpp.final libkbluetooth_la.all_cpp.files > libkbluetooth_la.all_cpp.cpp; \
	rm -f libkbluetooth_la.all_cpp.final libkbluetooth_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkbluetooth_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libkbluetooth_la_OBJECTS="$(libkbluetooth_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkbluetooth_la_OBJECTS="$(libkbluetooth_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkbluetooth_la_OBJECTS="$(libkbluetooth_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkbluetooth_la_OBJECTS="$(libkbluetooth_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 63
inputmanager.o: inputmanager.moc 
serviceselectionwidget.o: serviceselectionwidget.moc 
dbusinit.o: dbusinit.moc 
hcisocket.lo: hcisocket.moc 
inquiry.lo: inquiry.moc 
rfcommsocket.o: rfcommsocket.moc 
$(srcdir)/devicemimeconverter.cpp: serviceselectionwidgetbase.h 
nmcheck-am: nmcheck
authagent.lo: authagent.moc 
$(srcdir)/passkeyagent.cpp: serviceselectionwidgetbase.h 
namerequest.lo: namerequest.moc 
serviceselectionwidget.lo: serviceselectionwidget.moc 
$(srcdir)/obexsession.cpp: serviceselectionwidgetbase.h 
rfcommsocket.lo: rfcommsocket.moc 
adapter.o: adapter.moc 
passkeyagent.lo: passkeyagent.moc 
$(srcdir)/service.cpp: serviceselectionwidgetbase.h 
$(srcdir)/obexmanager.cpp: serviceselectionwidgetbase.h 
obexsession.o: obexsession.moc 
$(srcdir)/adapter_old.cpp: serviceselectionwidgetbase.h 
$(srcdir)/servicerecord.cpp: serviceselectionwidgetbase.h 
passkeyagent.o: passkeyagent.moc 
$(srcdir)/sdpattribute.cpp: serviceselectionwidgetbase.h 
inputdevice.o: inputdevice.moc 
adapter.lo: adapter.moc 
servicediscovery.o: servicediscovery.moc 
$(srcdir)/namerequest.cpp: serviceselectionwidgetbase.h 
authagent.o: authagent.moc 
obexsession.lo: obexsession.moc 
$(srcdir)/inquiry.cpp: serviceselectionwidgetbase.h 
$(srcdir)/serviceselectionwidget.cpp: serviceselectionwidgetbase.h 
$(srcdir)/sdpservice.cpp: serviceselectionwidgetbase.h 
$(srcdir)/dbusinit.cpp: serviceselectionwidgetbase.h 
$(srcdir)/servicediscovery.cpp: serviceselectionwidgetbase.h 
$(srcdir)/manager.cpp: serviceselectionwidgetbase.h 
$(srcdir)/rfcommsocket.cpp: serviceselectionwidgetbase.h 
obexmanager.lo: obexmanager.moc 
inputmanager.lo: inputmanager.moc 
$(srcdir)/hcidefault.cpp: serviceselectionwidgetbase.h 
dbusinit.lo: dbusinit.moc 
hcidefault.lo: hcidefault.moc 
obexmanager.o: obexmanager.moc 
service.lo: service.moc 
$(srcdir)/sdpdevice.cpp: serviceselectionwidgetbase.h 
$(srcdir)/dbusfilter.cpp: serviceselectionwidgetbase.h 
$(srcdir)/deviceaddress.cpp: serviceselectionwidgetbase.h 
hcidefault.o: hcidefault.moc 
inquiry.o: inquiry.moc 
$(srcdir)/dbussignal.cpp: serviceselectionwidgetbase.h 
namerequest.o: namerequest.moc 
$(srcdir)/adapter.cpp: serviceselectionwidgetbase.h 
$(srcdir)/inputmanager.cpp: serviceselectionwidgetbase.h 
$(srcdir)/authagent.cpp: serviceselectionwidgetbase.h 
nmcheck: 
hcisocket.o: hcisocket.moc 
$(srcdir)/inputdevice.cpp: serviceselectionwidgetbase.h 
manager.o: manager.moc 
servicediscovery.lo: servicediscovery.moc 
service.o: service.moc 
$(srcdir)/hcisocket.cpp: serviceselectionwidgetbase.h 
manager.lo: manager.moc 
inputdevice.lo: inputdevice.moc 

#>+ 15
serviceselectionwidgetbase.cpp: $(srcdir)/serviceselectionwidgetbase.ui serviceselectionwidgetbase.h serviceselectionwidgetbase.moc
	rm -f serviceselectionwidgetbase.cpp
	echo '#include <kdialog.h>' > serviceselectionwidgetbase.cpp
	echo '#include <klocale.h>' >> serviceselectionwidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i serviceselectionwidgetbase.h $(srcdir)/serviceselectionwidgetbase.ui > serviceselectionwidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" serviceselectionwidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_serviceselectionwidgetbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> serviceselectionwidgetbase.cpp ;\
	rm -f serviceselectionwidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "serviceselectionwidgetbase.moc"' >> serviceselectionwidgetbase.cpp; else rm -f serviceselectionwidgetbase.cpp ; exit $$ret ; fi

serviceselectionwidgetbase.h: $(srcdir)/serviceselectionwidgetbase.ui
	rm -rf serviceselectionwidgetbase.h;
	$(UIC) $(srcdir)/serviceselectionwidgetbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> serviceselectionwidgetbase.h ;
serviceselectionwidgetbase.moc: serviceselectionwidgetbase.h
	$(MOC) serviceselectionwidgetbase.h -o serviceselectionwidgetbase.moc
