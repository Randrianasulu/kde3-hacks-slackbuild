Index: kdepim-3.5.10/kmail/kmsystemtray.cpp
===================================================================
--- kdepim-3.5.10.orig/kmail/kmsystemtray.cpp
+++ kdepim-3.5.10/kmail/kmsystemtray.cpp
@@ -474,9 +474,9 @@ void KMSystemTray::updateNewMessages()
   /** The number of unread messages in that folder */
   int unread = fldr->countUnread();
 
-  QMap<QGuardedPtr<KMFolder>, int>::Iterator it =
+  QMap<QGuardedPtr<KMFolder>, int>::Iterator unread_it =
       mFoldersWithUnread.find(fldr);
-  bool unmapped = (it == mFoldersWithUnread.end());
+  bool unmapped = (unread_it == mFoldersWithUnread.end());
 
   /** If the folder is not mapped yet, increment count by numUnread
       in folder */
@@ -485,7 +485,7 @@
    * our last known version, and adjust mCount with that difference */
   else
   {
-    int diff = unread - it.data();
+    int diff = unread - unread_it.data();
     mCount += diff;
   }
 
Index: kdepim-3.5.10/libkcal/listbase.h
===================================================================
--- kdepim-3.5.10.orig/libkcal/listbase.h
+++ kdepim-3.5.10/libkcal/listbase.h
@@ -67,7 +67,7 @@ class ListBase : public QValueList<T *>
 
     bool removeRef( T *t )
     {
-      QValueListIterator<T *> it = find( t );
+      QValueListIterator<T *> it = this->find( t );
       if ( it == QValueList<T*>::end() ) {
         return false;
       } else {
Index: kdepim-3.5.10/korganizer/korgac/alarmdialog.cpp
===================================================================
--- kdepim-3.5.10.orig/korganizer/korgac/alarmdialog.cpp
+++ kdepim-3.5.10/korganizer/korgac/alarmdialog.cpp
@@ -324,9 +324,9 @@ void AlarmDialog::eventNotification()
     found = true;
     item->mNotified = true;
     Alarm::List alarms = item->mIncidence->alarms();
-    Alarm::List::ConstIterator it;
-    for ( it = alarms.begin(); it != alarms.end(); ++it ) {
-      Alarm *alarm = *it;
+    Alarm::List::ConstIterator it2;
+    for ( it2 = alarms.begin(); it2 != alarms.end(); ++it2 ) {
+      Alarm *alarm = *it2;
       // FIXME: Check whether this should be done for all multiple alarms
       if (alarm->type() == Alarm::Procedure) {
         // FIXME: Add a message box asking whether the procedure should really be executed
