# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# libkdcraw/test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/libkdcraw-0.1.9
pkglibdir = $(libdir)/libkdcraw-0.1.9
pkgincludedir = $(includedir)/libkdcraw-0.1.9
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = raw2png$(EXEEXT) identify$(EXEEXT) \
	simple_dcraw$(EXEEXT) mem_image$(EXEEXT) dcraw_emu$(EXEEXT) \
	4channels$(EXEEXT) unprocessed_raw$(EXEEXT)
subdir = libkdcraw/test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am_4channels_OBJECTS = 4channels.$(OBJEXT)
#>- 4channels_OBJECTS = $(am_4channels_OBJECTS)
#>+ 1
4channels_OBJECTS = 4channels.$(OBJEXT)
4channels_LDADD = $(LDADD)
#>- 4channels_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(4channels_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
4channels_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(4channels_LDFLAGS) $(LDFLAGS) -o $@
am_dcraw_emu_OBJECTS = dcraw_emu.$(OBJEXT)
#>- dcraw_emu_OBJECTS = $(am_dcraw_emu_OBJECTS)
#>+ 1
dcraw_emu_OBJECTS = dcraw_emu.$(OBJEXT)
dcraw_emu_LDADD = $(LDADD)
#>- dcraw_emu_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(dcraw_emu_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
dcraw_emu_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(dcraw_emu_LDFLAGS) $(LDFLAGS) -o $@
am_identify_OBJECTS = identify.$(OBJEXT)
#>- identify_OBJECTS = $(am_identify_OBJECTS)
#>+ 1
identify_OBJECTS = identify.$(OBJEXT)
identify_LDADD = $(LDADD)
#>- identify_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(identify_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
identify_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(identify_LDFLAGS) $(LDFLAGS) -o $@
am_mem_image_OBJECTS = mem_image.$(OBJEXT)
#>- mem_image_OBJECTS = $(am_mem_image_OBJECTS)
#>+ 1
mem_image_OBJECTS = mem_image.$(OBJEXT)
mem_image_LDADD = $(LDADD)
#>- mem_image_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(mem_image_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
mem_image_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(mem_image_LDFLAGS) $(LDFLAGS) -o $@
am_raw2png_OBJECTS = raw2png.$(OBJEXT)
#>- raw2png_OBJECTS = $(am_raw2png_OBJECTS)
#>+ 1
raw2png_OBJECTS = raw2png.$(OBJEXT)
raw2png_LDADD = $(LDADD)
#>- raw2png_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(raw2png_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
raw2png_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(raw2png_LDFLAGS) $(LDFLAGS) -o $@
am_simple_dcraw_OBJECTS = simple_dcraw.$(OBJEXT)
#>- simple_dcraw_OBJECTS = $(am_simple_dcraw_OBJECTS)
#>+ 1
simple_dcraw_OBJECTS = simple_dcraw.$(OBJEXT)
simple_dcraw_LDADD = $(LDADD)
#>- simple_dcraw_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(simple_dcraw_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
simple_dcraw_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(simple_dcraw_LDFLAGS) $(LDFLAGS) -o $@
am_unprocessed_raw_OBJECTS = unprocessed_raw.$(OBJEXT)
#>- unprocessed_raw_OBJECTS = $(am_unprocessed_raw_OBJECTS)
#>+ 1
unprocessed_raw_OBJECTS = unprocessed_raw.$(OBJEXT)
unprocessed_raw_LDADD = $(LDADD)
#>- unprocessed_raw_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(unprocessed_raw_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
unprocessed_raw_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(unprocessed_raw_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(4channels_SOURCES) $(dcraw_emu_SOURCES) \
	$(identify_SOURCES) $(mem_image_SOURCES) $(raw2png_SOURCES) \
	$(simple_dcraw_SOURCES) $(unprocessed_raw_SOURCES)
DIST_SOURCES = $(4channels_SOURCES) $(dcraw_emu_SOURCES) \
	$(identify_SOURCES) $(mem_image_SOURCES) $(raw2png_SOURCES) \
	$(simple_dcraw_SOURCES) $(unprocessed_raw_SOURCES)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ABI_MAJOR = 4
ACLOCAL = ${SHELL} /dev/shm/libkdcraw-0.1.9/admin/missing --run aclocal-1.10
AMTAR = ${SHELL} /dev/shm/libkdcraw-0.1.9/admin/missing --run tar
AR = ar
ARTSCCONFIG = /usr/bin/artsc-config
AUTOCONF = $(SHELL) $(top_srcdir)/admin/cvs.sh configure || touch configure
AUTODIRS = 
AUTOHEADER = ${SHELL} /dev/shm/libkdcraw-0.1.9/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /dev/shm/libkdcraw-0.1.9/admin/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=iso9899:1990 -W -Wall -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -DNDEBUG -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./libkdcraw/configure.in.bot $(top_srcdir)/./libkdcraw/configure.in.in
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long -Wundef -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -DNDEBUG -DNO_DEBUG -O2 -Wformat-security -Wmissing-format-attribute -Wno-non-virtual-dtor -fno-exceptions -fno-check-new -fno-common -DQT_CLEAN_NAMESPACE -DQT_NO_ASCII_CAST -DQT_NO_STL -DQT_NO_COMPAT -DQT_NO_TRANSLATION -fopenmp
CYGPATH_W = echo
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOPIDLNG = /usr/bin/dcopidlng
DCOP_DEPENDENCIES = $(DCOPIDL) $(DCOPIDLNG)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DOXYGEN_PROJECT_NAME = KEG Libraries API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.5.10
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_PERMISSIVE_FLAG = -fpermissive
EXEEXT = 
F77 = 
FFLAGS = 
FRAMEWORK_COREAUDIO = 
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_GCC_VISIBILITY = 0
INSTALL = /usr/bin/ginstall -c -p
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KCFG_DEPENDENCIES = $(KCONFIG_COMPILER)
KCONFIG_COMPILER = /usr/bin/kconfig_compiler
KDECONFIG = /usr/bin/kde-config
KDE_CHECK_PLUGIN = $(KDE_PLUGIN) -rpath $(libdir)
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = yes
KDE_HAVE_DOT = NO
KDE_INCLUDES = 
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_NO_UNDEFINED = -Wl,--no-undefined -Wl,--allow-shlib-undefined
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_NO_UNDEFINED) $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(libdir) -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = 
KDE_USE_CLOSURE_TRUE = #
KDE_USE_FINAL_FALSE = #
KDE_USE_FINAL_TRUE = 
KDE_USE_FPIE = -fPIE
KDE_USE_NMCHECK_FALSE = 
KDE_USE_NMCHECK_TRUE = #
KDE_USE_PIE = -pie
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
LCMS_LIBS = -llcms
LDFLAGS = 
LDFLAGS_AS_NEEDED = 
LDFLAGS_NEW_DTAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBZ = -lz
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDED = 
LIB_KDEPIM = -lkdepim
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KDNSSD = -lkdnssd
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMPROXY = -lkimproxy
LIB_KIO = -lkio
LIB_KJS = -lkjs
LIB_KNEWSTUFF = -lknewstuff
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_KUNITTEST = -lkunittest
LIB_KUTILS = -lkutils
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBZ) $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LIB_XRENDER = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /dev/shm/libkdcraw-0.1.9/admin/missing --run makeinfo
MAKEKDEWIDGETS = 
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MKDIR_P = /usr/bin/mkdir -p
MOC = /usr/lib/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
OBJEXT = o
OPENMP_LDFLAGS =  -lgomp 
PACKAGE = libkdcraw-0.1.9
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGCONFIGFOUND = yes
PKG_CONFIG = /usr/bin/pkg-config
QTDOCDIR = /usr/lib/qt3/doc/html
QTE_NORTTI = 
QT_INCLUDES = -I/usr/lib/qt3/include
QT_LDFLAGS = -L/usr/lib/qt3/lib
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  libkdcraw po
UIC = /usr/lib/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.5.10
VERSION_INFO = 4:3:0
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = /usr/bin/xmllint
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R7/include
X_LDFLAGS = -L/usr/X11R7/lib
X_PRE_LIBS = 
X_RPATH = -R $(x_libraries)
abs_builddir = /dev/shm/libkdcraw-0.1.9/libkdcraw/test
abs_srcdir = /dev/shm/libkdcraw-0.1.9/libkdcraw/test
abs_top_builddir = /dev/shm/libkdcraw-0.1.9
abs_top_srcdir = /dev/shm/libkdcraw-0.1.9
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
all_includes = -I/usr/lib/qt3/include -I/usr/X11R7/include 
all_libraries = -L/usr/lib -L/usr/lib/qt3/lib -L/usr/X11R7/lib   
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /dev/shm/libkdcraw-0.1.9/admin/install-sh
kde_appsdir = ${datadir}/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${datadir}/config
kde_datadir = ${datadir}/apps
kde_htmldir = ${datadir}/doc/HTML
kde_icondir = ${datadir}/icons
kde_includes = /usr/include
kde_kcfgdir = ${datadir}/config.kcfg
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/HTML
kde_libs_prefix = /usr
kde_locale = ${datadir}/locale
kde_mimedir = ${datadir}/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${datadir}/services
kde_servicetypesdir = ${datadir}/servicetypes
kde_sounddir = ${datadir}/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${datadir}/templates
kde_wallpaperdir = ${datadir}/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
kdeinitdir = $(kde_moduledir)
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
qt_includes = /usr/lib/qt3/include
qt_libraries = /usr/lib/qt3/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_builddir = ../..
top_srcdir = ../..
x_includes = /usr/X11R7/include
x_libraries = /usr/X11R7/lib
xdg_appsdir = ${datadir}/applications/kde
xdg_directorydir = ${datadir}/desktop-directories
xdg_menudir = ${sysconfdir}/xdg/menus
KDE_OPTIONS = nofinal
#>- METASOURCES = AUTO

# LibRaw definitions
KDE_CXXFLAGS = $(USE_EXCEPTIONS) -DDCRAW_VERBOSE -DUSE_LCMS
INCLUDES = -I../libraw -I../libkdcraw $(all_includes)

# -------------------------------------------------------------
raw2png_CFLAGS = $(all_includes)
raw2png_SOURCES = raw2png.cpp
raw2png_LDFLAGS = $(all_libraries) ../libkdcraw/libkdcraw.la

# -------------------------------------------------------------
identify_CFLAGS = $(all_includes)
identify_SOURCES = ../libraw/samples/identify.cpp
identify_LDFLAGS = $(all_libraries) ../libraw/libraw.la

# -------------------------------------------------------------
simple_dcraw_CFLAGS = $(all_includes)
simple_dcraw_SOURCES = ../libraw/samples/simple_dcraw.cpp
simple_dcraw_LDFLAGS = $(all_libraries) ../libraw/libraw.la

# -------------------------------------------------------------
mem_image_CFLAGS = $(all_includes)
mem_image_SOURCES = ../libraw/samples/mem_image.cpp
mem_image_LDFLAGS = $(all_libraries) ../libraw/libraw.la

# -------------------------------------------------------------
dcraw_emu_CFLAGS = $(all_includes)
dcraw_emu_SOURCES = ../libraw/samples/dcraw_emu.cpp
dcraw_emu_LDFLAGS = $(all_libraries) ../libraw/libraw.la

# -------------------------------------------------------------
4channels_CFLAGS = $(all_includes)
4channels_SOURCES = ../libraw/samples/4channels.cpp
4channels_LDFLAGS = $(all_libraries) ../libraw/libraw.la

# -------------------------------------------------------------
unprocessed_raw_CFLAGS = $(all_includes)
unprocessed_raw_SOURCES = ../libraw/samples/unprocessed_raw.cpp
unprocessed_raw_LDFLAGS = $(all_libraries) ../libraw/libraw.la
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libkdcraw/test/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  libkdcraw/test/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libkdcraw/test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libkdcraw/test/Makefile
	cd $(top_srcdir) && perl admin/am_edit libkdcraw/test/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
4channels$(EXEEXT): $(4channels_OBJECTS) $(4channels_DEPENDENCIES) 
	@rm -f 4channels$(EXEEXT)
	$(4channels_LINK) $(4channels_OBJECTS) $(4channels_LDADD) $(LIBS)
dcraw_emu$(EXEEXT): $(dcraw_emu_OBJECTS) $(dcraw_emu_DEPENDENCIES) 
	@rm -f dcraw_emu$(EXEEXT)
	$(dcraw_emu_LINK) $(dcraw_emu_OBJECTS) $(dcraw_emu_LDADD) $(LIBS)
identify$(EXEEXT): $(identify_OBJECTS) $(identify_DEPENDENCIES) 
	@rm -f identify$(EXEEXT)
	$(identify_LINK) $(identify_OBJECTS) $(identify_LDADD) $(LIBS)
mem_image$(EXEEXT): $(mem_image_OBJECTS) $(mem_image_DEPENDENCIES) 
	@rm -f mem_image$(EXEEXT)
	$(mem_image_LINK) $(mem_image_OBJECTS) $(mem_image_LDADD) $(LIBS)
raw2png$(EXEEXT): $(raw2png_OBJECTS) $(raw2png_DEPENDENCIES) 
	@rm -f raw2png$(EXEEXT)
	$(raw2png_LINK) $(raw2png_OBJECTS) $(raw2png_LDADD) $(LIBS)
simple_dcraw$(EXEEXT): $(simple_dcraw_OBJECTS) $(simple_dcraw_DEPENDENCIES) 
	@rm -f simple_dcraw$(EXEEXT)
	$(simple_dcraw_LINK) $(simple_dcraw_OBJECTS) $(simple_dcraw_LDADD) $(LIBS)
unprocessed_raw$(EXEEXT): $(unprocessed_raw_OBJECTS) $(unprocessed_raw_DEPENDENCIES) 
	@rm -f unprocessed_raw$(EXEEXT)
	$(unprocessed_raw_LINK) $(unprocessed_raw_OBJECTS) $(unprocessed_raw_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/4channels.Po
include ./$(DEPDIR)/dcraw_emu.Po
include ./$(DEPDIR)/identify.Po
include ./$(DEPDIR)/mem_image.Po
include ./$(DEPDIR)/raw2png.Po
include ./$(DEPDIR)/simple_dcraw.Po
include ./$(DEPDIR)/unprocessed_raw.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

4channels.o: ../libraw/samples/4channels.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 4channels.o -MD -MP -MF $(DEPDIR)/4channels.Tpo -c -o 4channels.o `test -f '../libraw/samples/4channels.cpp' || echo '$(srcdir)/'`../libraw/samples/4channels.cpp
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT 4channels.o -MD -MP -MF $(DEPDIR)/4channels.Tpo -c -o 4channels.o `test -f '../libraw/samples/4channels.cpp' || echo '$(srcdir)/'`../libraw/samples/4channels.cpp
	mv -f $(DEPDIR)/4channels.Tpo $(DEPDIR)/4channels.Po
#	source='../libraw/samples/4channels.cpp' object='4channels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 4channels.o `test -f '../libraw/samples/4channels.cpp' || echo '$(srcdir)/'`../libraw/samples/4channels.cpp
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o 4channels.o `test -f '../libraw/samples/4channels.cpp' || echo '$(srcdir)/'`../libraw/samples/4channels.cpp

4channels.obj: ../libraw/samples/4channels.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 4channels.obj -MD -MP -MF $(DEPDIR)/4channels.Tpo -c -o 4channels.obj `if test -f '../libraw/samples/4channels.cpp'; then $(CYGPATH_W) '../libraw/samples/4channels.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/4channels.cpp'; fi`
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT 4channels.obj -MD -MP -MF $(DEPDIR)/4channels.Tpo -c -o 4channels.obj `if test -f '../libraw/samples/4channels.cpp'; then $(CYGPATH_W) '../libraw/samples/4channels.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/4channels.cpp'; fi`
	mv -f $(DEPDIR)/4channels.Tpo $(DEPDIR)/4channels.Po
#	source='../libraw/samples/4channels.cpp' object='4channels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 4channels.obj `if test -f '../libraw/samples/4channels.cpp'; then $(CYGPATH_W) '../libraw/samples/4channels.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/4channels.cpp'; fi`
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o 4channels.obj `if test -f '../libraw/samples/4channels.cpp'; then $(CYGPATH_W) '../libraw/samples/4channels.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/4channels.cpp'; fi`

dcraw_emu.o: ../libraw/samples/dcraw_emu.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dcraw_emu.o -MD -MP -MF $(DEPDIR)/dcraw_emu.Tpo -c -o dcraw_emu.o `test -f '../libraw/samples/dcraw_emu.cpp' || echo '$(srcdir)/'`../libraw/samples/dcraw_emu.cpp
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT dcraw_emu.o -MD -MP -MF $(DEPDIR)/dcraw_emu.Tpo -c -o dcraw_emu.o `test -f '../libraw/samples/dcraw_emu.cpp' || echo '$(srcdir)/'`../libraw/samples/dcraw_emu.cpp
	mv -f $(DEPDIR)/dcraw_emu.Tpo $(DEPDIR)/dcraw_emu.Po
#	source='../libraw/samples/dcraw_emu.cpp' object='dcraw_emu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dcraw_emu.o `test -f '../libraw/samples/dcraw_emu.cpp' || echo '$(srcdir)/'`../libraw/samples/dcraw_emu.cpp
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o dcraw_emu.o `test -f '../libraw/samples/dcraw_emu.cpp' || echo '$(srcdir)/'`../libraw/samples/dcraw_emu.cpp

dcraw_emu.obj: ../libraw/samples/dcraw_emu.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dcraw_emu.obj -MD -MP -MF $(DEPDIR)/dcraw_emu.Tpo -c -o dcraw_emu.obj `if test -f '../libraw/samples/dcraw_emu.cpp'; then $(CYGPATH_W) '../libraw/samples/dcraw_emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/dcraw_emu.cpp'; fi`
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT dcraw_emu.obj -MD -MP -MF $(DEPDIR)/dcraw_emu.Tpo -c -o dcraw_emu.obj `if test -f '../libraw/samples/dcraw_emu.cpp'; then $(CYGPATH_W) '../libraw/samples/dcraw_emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/dcraw_emu.cpp'; fi`
	mv -f $(DEPDIR)/dcraw_emu.Tpo $(DEPDIR)/dcraw_emu.Po
#	source='../libraw/samples/dcraw_emu.cpp' object='dcraw_emu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dcraw_emu.obj `if test -f '../libraw/samples/dcraw_emu.cpp'; then $(CYGPATH_W) '../libraw/samples/dcraw_emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/dcraw_emu.cpp'; fi`
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o dcraw_emu.obj `if test -f '../libraw/samples/dcraw_emu.cpp'; then $(CYGPATH_W) '../libraw/samples/dcraw_emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/dcraw_emu.cpp'; fi`

identify.o: ../libraw/samples/identify.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT identify.o -MD -MP -MF $(DEPDIR)/identify.Tpo -c -o identify.o `test -f '../libraw/samples/identify.cpp' || echo '$(srcdir)/'`../libraw/samples/identify.cpp
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT identify.o -MD -MP -MF $(DEPDIR)/identify.Tpo -c -o identify.o `test -f '../libraw/samples/identify.cpp' || echo '$(srcdir)/'`../libraw/samples/identify.cpp
	mv -f $(DEPDIR)/identify.Tpo $(DEPDIR)/identify.Po
#	source='../libraw/samples/identify.cpp' object='identify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o identify.o `test -f '../libraw/samples/identify.cpp' || echo '$(srcdir)/'`../libraw/samples/identify.cpp
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o identify.o `test -f '../libraw/samples/identify.cpp' || echo '$(srcdir)/'`../libraw/samples/identify.cpp

identify.obj: ../libraw/samples/identify.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT identify.obj -MD -MP -MF $(DEPDIR)/identify.Tpo -c -o identify.obj `if test -f '../libraw/samples/identify.cpp'; then $(CYGPATH_W) '../libraw/samples/identify.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/identify.cpp'; fi`
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT identify.obj -MD -MP -MF $(DEPDIR)/identify.Tpo -c -o identify.obj `if test -f '../libraw/samples/identify.cpp'; then $(CYGPATH_W) '../libraw/samples/identify.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/identify.cpp'; fi`
	mv -f $(DEPDIR)/identify.Tpo $(DEPDIR)/identify.Po
#	source='../libraw/samples/identify.cpp' object='identify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o identify.obj `if test -f '../libraw/samples/identify.cpp'; then $(CYGPATH_W) '../libraw/samples/identify.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/identify.cpp'; fi`
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o identify.obj `if test -f '../libraw/samples/identify.cpp'; then $(CYGPATH_W) '../libraw/samples/identify.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/identify.cpp'; fi`

mem_image.o: ../libraw/samples/mem_image.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mem_image.o -MD -MP -MF $(DEPDIR)/mem_image.Tpo -c -o mem_image.o `test -f '../libraw/samples/mem_image.cpp' || echo '$(srcdir)/'`../libraw/samples/mem_image.cpp
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT mem_image.o -MD -MP -MF $(DEPDIR)/mem_image.Tpo -c -o mem_image.o `test -f '../libraw/samples/mem_image.cpp' || echo '$(srcdir)/'`../libraw/samples/mem_image.cpp
	mv -f $(DEPDIR)/mem_image.Tpo $(DEPDIR)/mem_image.Po
#	source='../libraw/samples/mem_image.cpp' object='mem_image.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mem_image.o `test -f '../libraw/samples/mem_image.cpp' || echo '$(srcdir)/'`../libraw/samples/mem_image.cpp
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o mem_image.o `test -f '../libraw/samples/mem_image.cpp' || echo '$(srcdir)/'`../libraw/samples/mem_image.cpp

mem_image.obj: ../libraw/samples/mem_image.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mem_image.obj -MD -MP -MF $(DEPDIR)/mem_image.Tpo -c -o mem_image.obj `if test -f '../libraw/samples/mem_image.cpp'; then $(CYGPATH_W) '../libraw/samples/mem_image.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/mem_image.cpp'; fi`
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT mem_image.obj -MD -MP -MF $(DEPDIR)/mem_image.Tpo -c -o mem_image.obj `if test -f '../libraw/samples/mem_image.cpp'; then $(CYGPATH_W) '../libraw/samples/mem_image.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/mem_image.cpp'; fi`
	mv -f $(DEPDIR)/mem_image.Tpo $(DEPDIR)/mem_image.Po
#	source='../libraw/samples/mem_image.cpp' object='mem_image.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mem_image.obj `if test -f '../libraw/samples/mem_image.cpp'; then $(CYGPATH_W) '../libraw/samples/mem_image.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/mem_image.cpp'; fi`
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o mem_image.obj `if test -f '../libraw/samples/mem_image.cpp'; then $(CYGPATH_W) '../libraw/samples/mem_image.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/mem_image.cpp'; fi`

simple_dcraw.o: ../libraw/samples/simple_dcraw.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simple_dcraw.o -MD -MP -MF $(DEPDIR)/simple_dcraw.Tpo -c -o simple_dcraw.o `test -f '../libraw/samples/simple_dcraw.cpp' || echo '$(srcdir)/'`../libraw/samples/simple_dcraw.cpp
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT simple_dcraw.o -MD -MP -MF $(DEPDIR)/simple_dcraw.Tpo -c -o simple_dcraw.o `test -f '../libraw/samples/simple_dcraw.cpp' || echo '$(srcdir)/'`../libraw/samples/simple_dcraw.cpp
	mv -f $(DEPDIR)/simple_dcraw.Tpo $(DEPDIR)/simple_dcraw.Po
#	source='../libraw/samples/simple_dcraw.cpp' object='simple_dcraw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simple_dcraw.o `test -f '../libraw/samples/simple_dcraw.cpp' || echo '$(srcdir)/'`../libraw/samples/simple_dcraw.cpp
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o simple_dcraw.o `test -f '../libraw/samples/simple_dcraw.cpp' || echo '$(srcdir)/'`../libraw/samples/simple_dcraw.cpp

simple_dcraw.obj: ../libraw/samples/simple_dcraw.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simple_dcraw.obj -MD -MP -MF $(DEPDIR)/simple_dcraw.Tpo -c -o simple_dcraw.obj `if test -f '../libraw/samples/simple_dcraw.cpp'; then $(CYGPATH_W) '../libraw/samples/simple_dcraw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/simple_dcraw.cpp'; fi`
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT simple_dcraw.obj -MD -MP -MF $(DEPDIR)/simple_dcraw.Tpo -c -o simple_dcraw.obj `if test -f '../libraw/samples/simple_dcraw.cpp'; then $(CYGPATH_W) '../libraw/samples/simple_dcraw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/simple_dcraw.cpp'; fi`
	mv -f $(DEPDIR)/simple_dcraw.Tpo $(DEPDIR)/simple_dcraw.Po
#	source='../libraw/samples/simple_dcraw.cpp' object='simple_dcraw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simple_dcraw.obj `if test -f '../libraw/samples/simple_dcraw.cpp'; then $(CYGPATH_W) '../libraw/samples/simple_dcraw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/simple_dcraw.cpp'; fi`
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o simple_dcraw.obj `if test -f '../libraw/samples/simple_dcraw.cpp'; then $(CYGPATH_W) '../libraw/samples/simple_dcraw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/simple_dcraw.cpp'; fi`

unprocessed_raw.o: ../libraw/samples/unprocessed_raw.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT unprocessed_raw.o -MD -MP -MF $(DEPDIR)/unprocessed_raw.Tpo -c -o unprocessed_raw.o `test -f '../libraw/samples/unprocessed_raw.cpp' || echo '$(srcdir)/'`../libraw/samples/unprocessed_raw.cpp
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT unprocessed_raw.o -MD -MP -MF $(DEPDIR)/unprocessed_raw.Tpo -c -o unprocessed_raw.o `test -f '../libraw/samples/unprocessed_raw.cpp' || echo '$(srcdir)/'`../libraw/samples/unprocessed_raw.cpp
	mv -f $(DEPDIR)/unprocessed_raw.Tpo $(DEPDIR)/unprocessed_raw.Po
#	source='../libraw/samples/unprocessed_raw.cpp' object='unprocessed_raw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o unprocessed_raw.o `test -f '../libraw/samples/unprocessed_raw.cpp' || echo '$(srcdir)/'`../libraw/samples/unprocessed_raw.cpp
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o unprocessed_raw.o `test -f '../libraw/samples/unprocessed_raw.cpp' || echo '$(srcdir)/'`../libraw/samples/unprocessed_raw.cpp

unprocessed_raw.obj: ../libraw/samples/unprocessed_raw.cpp
#>- 	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT unprocessed_raw.obj -MD -MP -MF $(DEPDIR)/unprocessed_raw.Tpo -c -o unprocessed_raw.obj `if test -f '../libraw/samples/unprocessed_raw.cpp'; then $(CYGPATH_W) '../libraw/samples/unprocessed_raw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/unprocessed_raw.cpp'; fi`
#>+ 1
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -MT unprocessed_raw.obj -MD -MP -MF $(DEPDIR)/unprocessed_raw.Tpo -c -o unprocessed_raw.obj `if test -f '../libraw/samples/unprocessed_raw.cpp'; then $(CYGPATH_W) '../libraw/samples/unprocessed_raw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/unprocessed_raw.cpp'; fi`
	mv -f $(DEPDIR)/unprocessed_raw.Tpo $(DEPDIR)/unprocessed_raw.Po
#	source='../libraw/samples/unprocessed_raw.cpp' object='unprocessed_raw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#>- #	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o unprocessed_raw.obj `if test -f '../libraw/samples/unprocessed_raw.cpp'; then $(CYGPATH_W) '../libraw/samples/unprocessed_raw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/unprocessed_raw.cpp'; fi`
#>+ 1
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) -c -o unprocessed_raw.obj `if test -f '../libraw/samples/unprocessed_raw.cpp'; then $(CYGPATH_W) '../libraw/samples/unprocessed_raw.cpp'; else $(CYGPATH_W) '$(srcdir)/../libraw/samples/unprocessed_raw.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-bcheck  clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 2
KDE_DIST=Makefile.in Makefile.am 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libkdcraw/test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libkdcraw/test/Makefile
	cd $(top_srcdir) && perl admin/am_edit libkdcraw/test/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 3
final:
	$(MAKE) all-am

#>+ 3
final-install:
	$(MAKE) install-am

#>+ 3
no-final:
	$(MAKE) all-am

#>+ 3
no-final-install:
	$(MAKE) install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 3
nmcheck: 
nmcheck-am: nmcheck
