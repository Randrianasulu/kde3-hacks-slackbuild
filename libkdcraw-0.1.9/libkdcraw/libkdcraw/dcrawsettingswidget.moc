/****************************************************************************
** KDcrawIface::DcrawSettingsWidget meta object code from reading C++ file 'dcrawsettingswidget.h'
**
** Created: Tue Jun 13 20:23:38 2017
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.8   edited Feb 2 14:59 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "dcrawsettingswidget.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.8d. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *KDcrawIface::DcrawSettingsWidget::className() const
{
    return "KDcrawIface::DcrawSettingsWidget";
}

QMetaObject *KDcrawIface::DcrawSettingsWidget::metaObj = 0;
static QMetaObjectCleanUp cleanUp_KDcrawIface__DcrawSettingsWidget( "KDcrawIface::DcrawSettingsWidget", &KDcrawIface::DcrawSettingsWidget::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString KDcrawIface::DcrawSettingsWidget::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "KDcrawIface::DcrawSettingsWidget", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString KDcrawIface::DcrawSettingsWidget::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "KDcrawIface::DcrawSettingsWidget", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* KDcrawIface::DcrawSettingsWidget::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QToolBox::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_0 = {"slotWhiteBalanceToggled", 1, param_slot_0 };
    static const QUParameter param_slot_1[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod slot_1 = {"slotsixteenBitsImageToggled", 1, param_slot_1 };
    static const QUParameter param_slot_2[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_2 = {"slotUnclipColorActivated", 1, param_slot_2 };
    static const QUParameter param_slot_3[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod slot_3 = {"slotNoiseReductionToggled", 1, param_slot_3 };
    static const QUParameter param_slot_4[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod slot_4 = {"slotCACorrectionToggled", 1, param_slot_4 };
    static const QUParameter param_slot_5[] = {
	{ 0, &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_5 = {"processDcrawURL", 1, param_slot_5 };
    static const QUParameter param_slot_6[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_6 = {"slotInputColorSpaceChanged", 1, param_slot_6 };
    static const QUParameter param_slot_7[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_7 = {"slotOutputColorSpaceChanged", 1, param_slot_7 };
    static const QMetaData slot_tbl[] = {
	{ "slotWhiteBalanceToggled(int)", &slot_0, QMetaData::Private },
	{ "slotsixteenBitsImageToggled(bool)", &slot_1, QMetaData::Private },
	{ "slotUnclipColorActivated(int)", &slot_2, QMetaData::Private },
	{ "slotNoiseReductionToggled(bool)", &slot_3, QMetaData::Private },
	{ "slotCACorrectionToggled(bool)", &slot_4, QMetaData::Private },
	{ "processDcrawURL(const QString&)", &slot_5, QMetaData::Private },
	{ "slotInputColorSpaceChanged(int)", &slot_6, QMetaData::Private },
	{ "slotOutputColorSpaceChanged(int)", &slot_7, QMetaData::Private }
    };
    static const QUParameter param_signal_0[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod signal_0 = {"signalSixteenBitsImageToggled", 1, param_signal_0 };
    static const QUMethod signal_1 = {"signalSettingsChanged", 0, 0 };
    static const QMetaData signal_tbl[] = {
	{ "signalSixteenBitsImageToggled(bool)", &signal_0, QMetaData::Public },
	{ "signalSettingsChanged()", &signal_1, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"KDcrawIface::DcrawSettingsWidget", parentObject,
	slot_tbl, 8,
	signal_tbl, 2,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_KDcrawIface__DcrawSettingsWidget.setMetaObject( metaObj );
    return metaObj;
}

void* KDcrawIface::DcrawSettingsWidget::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "KDcrawIface::DcrawSettingsWidget" ) )
	return this;
    return QToolBox::qt_cast( clname );
}

// SIGNAL signalSixteenBitsImageToggled
void KDcrawIface::DcrawSettingsWidget::signalSixteenBitsImageToggled( bool t0 )
{
    activate_signal_bool( staticMetaObject()->signalOffset() + 0, t0 );
}

// SIGNAL signalSettingsChanged
void KDcrawIface::DcrawSettingsWidget::signalSettingsChanged()
{
    activate_signal( staticMetaObject()->signalOffset() + 1 );
}

bool KDcrawIface::DcrawSettingsWidget::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: slotWhiteBalanceToggled((int)static_QUType_int.get(_o+1)); break;
    case 1: slotsixteenBitsImageToggled((bool)static_QUType_bool.get(_o+1)); break;
    case 2: slotUnclipColorActivated((int)static_QUType_int.get(_o+1)); break;
    case 3: slotNoiseReductionToggled((bool)static_QUType_bool.get(_o+1)); break;
    case 4: slotCACorrectionToggled((bool)static_QUType_bool.get(_o+1)); break;
    case 5: processDcrawURL((const QString&)static_QUType_QString.get(_o+1)); break;
    case 6: slotInputColorSpaceChanged((int)static_QUType_int.get(_o+1)); break;
    case 7: slotOutputColorSpaceChanged((int)static_QUType_int.get(_o+1)); break;
    default:
	return QToolBox::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool KDcrawIface::DcrawSettingsWidget::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: signalSixteenBitsImageToggled((bool)static_QUType_bool.get(_o+1)); break;
    case 1: signalSettingsChanged(); break;
    default:
	return QToolBox::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool KDcrawIface::DcrawSettingsWidget::qt_property( int id, int f, QVariant* v)
{
    return QToolBox::qt_property( id, f, v);
}

bool KDcrawIface::DcrawSettingsWidget::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
